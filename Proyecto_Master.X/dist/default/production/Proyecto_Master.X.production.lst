

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Aug 24 20:16:10 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	clrtext,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.20
    35                           ; Generated 12/02/2020 GMT
    36                           ; 
    37                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F887 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  000E                     	;# 
    84  000F                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0014                     	;# 
    90  0015                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001B                     	;# 
    99  001C                     	;# 
   100  001D                     	;# 
   101  001E                     	;# 
   102  001F                     	;# 
   103  0081                     	;# 
   104  0085                     	;# 
   105  0086                     	;# 
   106  0087                     	;# 
   107  0088                     	;# 
   108  0089                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  008F                     	;# 
   113  0090                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0095                     	;# 
   121  0096                     	;# 
   122  0097                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009A                     	;# 
   126  009B                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  0105                     	;# 
   132  0107                     	;# 
   133  0108                     	;# 
   134  0109                     	;# 
   135  010C                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  010F                     	;# 
   140  0185                     	;# 
   141  0187                     	;# 
   142  0188                     	;# 
   143  0189                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  0008                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001B                     	;# 
   176  001B                     	;# 
   177  001C                     	;# 
   178  001D                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  0081                     	;# 
   182  0085                     	;# 
   183  0086                     	;# 
   184  0087                     	;# 
   185  0088                     	;# 
   186  0089                     	;# 
   187  008C                     	;# 
   188  008D                     	;# 
   189  008E                     	;# 
   190  008F                     	;# 
   191  0090                     	;# 
   192  0091                     	;# 
   193  0092                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0094                     	;# 
   198  0095                     	;# 
   199  0096                     	;# 
   200  0097                     	;# 
   201  0098                     	;# 
   202  0099                     	;# 
   203  009A                     	;# 
   204  009B                     	;# 
   205  009C                     	;# 
   206  009D                     	;# 
   207  009E                     	;# 
   208  009F                     	;# 
   209  0105                     	;# 
   210  0107                     	;# 
   211  0108                     	;# 
   212  0109                     	;# 
   213  010C                     	;# 
   214  010C                     	;# 
   215  010D                     	;# 
   216  010E                     	;# 
   217  010F                     	;# 
   218  0185                     	;# 
   219  0187                     	;# 
   220  0188                     	;# 
   221  0189                     	;# 
   222  018C                     	;# 
   223  018D                     	;# 
   224  0000                     	;# 
   225  0001                     	;# 
   226  0002                     	;# 
   227  0003                     	;# 
   228  0004                     	;# 
   229  0005                     	;# 
   230  0006                     	;# 
   231  0007                     	;# 
   232  0008                     	;# 
   233  0009                     	;# 
   234  000A                     	;# 
   235  000B                     	;# 
   236  000C                     	;# 
   237  000D                     	;# 
   238  000E                     	;# 
   239  000E                     	;# 
   240  000F                     	;# 
   241  0010                     	;# 
   242  0011                     	;# 
   243  0012                     	;# 
   244  0013                     	;# 
   245  0014                     	;# 
   246  0015                     	;# 
   247  0015                     	;# 
   248  0016                     	;# 
   249  0017                     	;# 
   250  0018                     	;# 
   251  0019                     	;# 
   252  001A                     	;# 
   253  001B                     	;# 
   254  001B                     	;# 
   255  001C                     	;# 
   256  001D                     	;# 
   257  001E                     	;# 
   258  001F                     	;# 
   259  0081                     	;# 
   260  0085                     	;# 
   261  0086                     	;# 
   262  0087                     	;# 
   263  0088                     	;# 
   264  0089                     	;# 
   265  008C                     	;# 
   266  008D                     	;# 
   267  008E                     	;# 
   268  008F                     	;# 
   269  0090                     	;# 
   270  0091                     	;# 
   271  0092                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0094                     	;# 
   276  0095                     	;# 
   277  0096                     	;# 
   278  0097                     	;# 
   279  0098                     	;# 
   280  0099                     	;# 
   281  009A                     	;# 
   282  009B                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  009F                     	;# 
   287  0105                     	;# 
   288  0107                     	;# 
   289  0108                     	;# 
   290  0109                     	;# 
   291  010C                     	;# 
   292  010C                     	;# 
   293  010D                     	;# 
   294  010E                     	;# 
   295  010F                     	;# 
   296  0185                     	;# 
   297  0187                     	;# 
   298  0188                     	;# 
   299  0189                     	;# 
   300  018C                     	;# 
   301  018D                     	;# 
   302  0000                     	;# 
   303  0001                     	;# 
   304  0002                     	;# 
   305  0003                     	;# 
   306  0004                     	;# 
   307  0005                     	;# 
   308  0006                     	;# 
   309  0007                     	;# 
   310  0008                     	;# 
   311  0009                     	;# 
   312  000A                     	;# 
   313  000B                     	;# 
   314  000C                     	;# 
   315  000D                     	;# 
   316  000E                     	;# 
   317  000E                     	;# 
   318  000F                     	;# 
   319  0010                     	;# 
   320  0011                     	;# 
   321  0012                     	;# 
   322  0013                     	;# 
   323  0014                     	;# 
   324  0015                     	;# 
   325  0015                     	;# 
   326  0016                     	;# 
   327  0017                     	;# 
   328  0018                     	;# 
   329  0019                     	;# 
   330  001A                     	;# 
   331  001B                     	;# 
   332  001B                     	;# 
   333  001C                     	;# 
   334  001D                     	;# 
   335  001E                     	;# 
   336  001F                     	;# 
   337  0081                     	;# 
   338  0085                     	;# 
   339  0086                     	;# 
   340  0087                     	;# 
   341  0088                     	;# 
   342  0089                     	;# 
   343  008C                     	;# 
   344  008D                     	;# 
   345  008E                     	;# 
   346  008F                     	;# 
   347  0090                     	;# 
   348  0091                     	;# 
   349  0092                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0093                     	;# 
   353  0094                     	;# 
   354  0095                     	;# 
   355  0096                     	;# 
   356  0097                     	;# 
   357  0098                     	;# 
   358  0099                     	;# 
   359  009A                     	;# 
   360  009B                     	;# 
   361  009C                     	;# 
   362  009D                     	;# 
   363  009E                     	;# 
   364  009F                     	;# 
   365  0105                     	;# 
   366  0107                     	;# 
   367  0108                     	;# 
   368  0109                     	;# 
   369  010C                     	;# 
   370  010C                     	;# 
   371  010D                     	;# 
   372  010E                     	;# 
   373  010F                     	;# 
   374  0185                     	;# 
   375  0187                     	;# 
   376  0188                     	;# 
   377  0189                     	;# 
   378  018C                     	;# 
   379  018D                     	;# 
   380  0000                     	;# 
   381  0001                     	;# 
   382  0002                     	;# 
   383  0003                     	;# 
   384  0004                     	;# 
   385  0005                     	;# 
   386  0006                     	;# 
   387  0007                     	;# 
   388  0008                     	;# 
   389  0009                     	;# 
   390  000A                     	;# 
   391  000B                     	;# 
   392  000C                     	;# 
   393  000D                     	;# 
   394  000E                     	;# 
   395  000E                     	;# 
   396  000F                     	;# 
   397  0010                     	;# 
   398  0011                     	;# 
   399  0012                     	;# 
   400  0013                     	;# 
   401  0014                     	;# 
   402  0015                     	;# 
   403  0015                     	;# 
   404  0016                     	;# 
   405  0017                     	;# 
   406  0018                     	;# 
   407  0019                     	;# 
   408  001A                     	;# 
   409  001B                     	;# 
   410  001B                     	;# 
   411  001C                     	;# 
   412  001D                     	;# 
   413  001E                     	;# 
   414  001F                     	;# 
   415  0081                     	;# 
   416  0085                     	;# 
   417  0086                     	;# 
   418  0087                     	;# 
   419  0088                     	;# 
   420  0089                     	;# 
   421  008C                     	;# 
   422  008D                     	;# 
   423  008E                     	;# 
   424  008F                     	;# 
   425  0090                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0093                     	;# 
   431  0094                     	;# 
   432  0095                     	;# 
   433  0096                     	;# 
   434  0097                     	;# 
   435  0098                     	;# 
   436  0099                     	;# 
   437  009A                     	;# 
   438  009B                     	;# 
   439  009C                     	;# 
   440  009D                     	;# 
   441  009E                     	;# 
   442  009F                     	;# 
   443  0105                     	;# 
   444  0107                     	;# 
   445  0108                     	;# 
   446  0109                     	;# 
   447  010C                     	;# 
   448  010C                     	;# 
   449  010D                     	;# 
   450  010E                     	;# 
   451  010F                     	;# 
   452  0185                     	;# 
   453  0187                     	;# 
   454  0188                     	;# 
   455  0189                     	;# 
   456  018C                     	;# 
   457  018D                     	;# 
   458  0000                     	;# 
   459  0001                     	;# 
   460  0002                     	;# 
   461  0003                     	;# 
   462  0004                     	;# 
   463  0005                     	;# 
   464  0006                     	;# 
   465  0007                     	;# 
   466  0008                     	;# 
   467  0009                     	;# 
   468  000A                     	;# 
   469  000B                     	;# 
   470  000C                     	;# 
   471  000D                     	;# 
   472  000E                     	;# 
   473  000E                     	;# 
   474  000F                     	;# 
   475  0010                     	;# 
   476  0011                     	;# 
   477  0012                     	;# 
   478  0013                     	;# 
   479  0014                     	;# 
   480  0015                     	;# 
   481  0015                     	;# 
   482  0016                     	;# 
   483  0017                     	;# 
   484  0018                     	;# 
   485  0019                     	;# 
   486  001A                     	;# 
   487  001B                     	;# 
   488  001B                     	;# 
   489  001C                     	;# 
   490  001D                     	;# 
   491  001E                     	;# 
   492  001F                     	;# 
   493  0081                     	;# 
   494  0085                     	;# 
   495  0086                     	;# 
   496  0087                     	;# 
   497  0088                     	;# 
   498  0089                     	;# 
   499  008C                     	;# 
   500  008D                     	;# 
   501  008E                     	;# 
   502  008F                     	;# 
   503  0090                     	;# 
   504  0091                     	;# 
   505  0092                     	;# 
   506  0093                     	;# 
   507  0093                     	;# 
   508  0093                     	;# 
   509  0094                     	;# 
   510  0095                     	;# 
   511  0096                     	;# 
   512  0097                     	;# 
   513  0098                     	;# 
   514  0099                     	;# 
   515  009A                     	;# 
   516  009B                     	;# 
   517  009C                     	;# 
   518  009D                     	;# 
   519  009E                     	;# 
   520  009F                     	;# 
   521  0105                     	;# 
   522  0107                     	;# 
   523  0108                     	;# 
   524  0109                     	;# 
   525  010C                     	;# 
   526  010C                     	;# 
   527  010D                     	;# 
   528  010E                     	;# 
   529  010F                     	;# 
   530  0185                     	;# 
   531  0187                     	;# 
   532  0188                     	;# 
   533  0189                     	;# 
   534  018C                     	;# 
   535  018D                     	;# 
   536  0009                     _PORTEbits	set	9
   537  0008                     _PORTD	set	8
   538  0006                     _PORTB	set	6
   539  0005                     _PORTA	set	5
   540  0013                     _SSPBUF	set	19
   541  0014                     _SSPCON	set	20
   542  0063                     _SSPIF	set	99
   543  005E                     _PEIE	set	94
   544  005F                     _GIE	set	95
   545  008F                     _OSCCONbits	set	143
   546  0089                     _TRISE	set	137
   547  0088                     _TRISD	set	136
   548  0086                     _TRISB	set	134
   549  0085                     _TRISA	set	133
   550  0091                     _SSPCON2bits	set	145
   551  0087                     _TRISCbits	set	135
   552  0094                     _SSPSTAT	set	148
   553  0093                     _SSPADD	set	147
   554  0091                     _SSPCON2	set	145
   555  0463                     _SSPIE	set	1123
   556  043C                     _TRISC4	set	1084
   557  043B                     _TRISC3	set	1083
   558  0189                     _ANSELH	set	393
   559  0188                     _ANSEL	set	392
   560                           
   561                           	psect	cinit
   562  07F3                     start_initialization:	
   563                           ; #config settings
   564                           
   565  07F3                     __initialization:
   566                           
   567                           ; Clear objects allocated to BANK0
   568  07F3  1383               	bcf	3,7	;select IRP bank0
   569  07F4  3042               	movlw	low __pbssBANK0
   570  07F5  0084               	movwf	4
   571  07F6  3053               	movlw	low (__pbssBANK0+17)
   572  07F7  120A  158A  2717  120A  118A  	fcall	clear_ram0
   573  07FC                     end_of_initialization:	
   574                           ;End of C runtime variable initialization code
   575                           
   576  07FC                     __end_of__initialization:
   577  07FC  0183               	clrf	3
   578  07FD  120A  118A  2E19   	ljmp	_main	;jump to C main() function
   579                           
   580                           	psect	bssBANK0
   581  0042                     __pbssBANK0:
   582  0042                     _temperatura:
   583  0042                     	ds	1
   584  0043                     _con:
   585  0043                     	ds	1
   586  0044                     _CERRADO:
   587  0044                     	ds	1
   588  0045                     _DM:
   589  0045                     	ds	1
   590  0046                     _UM:
   591  0046                     	ds	1
   592  0047                     _DH:
   593  0047                     	ds	1
   594  0048                     _UH:
   595  0048                     	ds	1
   596  0049                     _C3:
   597  0049                     	ds	1
   598  004A                     _C2:
   599  004A                     	ds	1
   600  004B                     _C1:
   601  004B                     	ds	1
   602  004C                     _TEMP:
   603  004C                     	ds	1
   604  004D                     _MIN:
   605  004D                     	ds	1
   606  004E                     _HORA:
   607  004E                     	ds	1
   608  004F                     _DIA:
   609  004F                     	ds	1
   610  0050                     _BASURA:
   611  0050                     	ds	1
   612  0051                     _NUM:
   613  0051                     	ds	1
   614  0052                     _PARKH:
   615  0052                     	ds	1
   616                           
   617                           	psect	clrtext
   618  0F17                     clear_ram0:	
   619                           ;	Called with FSR containing the base address, and
   620                           ;	W with the last address+1
   621                           
   622  0F17  0064               	clrwdt	;clear the watchdog before getting into this loop
   623  0F18                     clrloop0:
   624  0F18  0180               	clrf	0	;clear RAM location pointed to by FSR
   625  0F19  0A84               	incf	4,f	;increment pointer
   626  0F1A  0604               	xorwf	4,w	;XOR with final address
   627  0F1B  1903               	btfsc	3,2	;have we reached the end yet?
   628  0F1C  3400               	retlw	0	;all done for this memory range, return
   629  0F1D  0604               	xorwf	4,w	;XOR again to restore value
   630  0F1E  2F18               	goto	clrloop0	;do the next byte
   631                           
   632                           	psect	cstackCOMMON
   633  0070                     __pcstackCOMMON:
   634  0070                     ?_setup:
   635  0070                     ?_Lcd_Init:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ?_Lcd_Write_String:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ?_conver1:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?_conver:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ??_conver:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ?_LECT1:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ?_osc_config:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ??_osc_config:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_num_ascii:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ??_num_ascii:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_I2C_Master_Wait:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ??_I2C_Master_Wait:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ?_I2C_Master_Start:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ??_I2C_Master_Start:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?_I2C_Master_Stop:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ??_I2C_Master_Stop:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_I2C_Master_Write:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?_main:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?_Lcd_Port:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ??_Lcd_Port:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_Lcd_Cmd:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_Lcd_Write_Char:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_I2C_Master_Read:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?___awdiv:	
   705                           ; 2 bytes @ 0x0
   706                           
   707  0070                     ?___lldiv:	
   708                           ; 2 bytes @ 0x0
   709                           
   710  0070                     Lcd_Port@a:	
   711                           ; 4 bytes @ 0x0
   712                           
   713  0070                     I2C_Master_Write@d:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     I2C_Master_Read@a:	
   717                           ; 2 bytes @ 0x0
   718                           
   719  0070                     ___awdiv@divisor:	
   720                           ; 2 bytes @ 0x0
   721                           
   722  0070                     ___lldiv@divisor:	
   723                           ; 2 bytes @ 0x0
   724                           
   725                           
   726                           ; 4 bytes @ 0x0
   727  0070                     	ds	1
   728  0071                     ??_Lcd_Cmd:
   729  0071                     ??_Lcd_Write_Char:	
   730                           ; 1 bytes @ 0x1
   731                           
   732                           
   733                           ; 1 bytes @ 0x1
   734  0071                     	ds	1
   735  0072                     ??_I2C_Master_Write:
   736  0072                     ??_I2C_Master_Read:	
   737                           ; 1 bytes @ 0x2
   738                           
   739  0072                     osc_config@freq:	
   740                           ; 1 bytes @ 0x2
   741                           
   742  0072                     Lcd_Write_Char@a:	
   743                           ; 1 bytes @ 0x2
   744                           
   745  0072                     num_ascii@num:	
   746                           ; 1 bytes @ 0x2
   747                           
   748  0072                     ___awdiv@dividend:	
   749                           ; 1 bytes @ 0x2
   750                           
   751                           
   752                           ; 2 bytes @ 0x2
   753  0072                     	ds	1
   754  0073                     ??_Lcd_Write_String:
   755  0073                     ??_LECT1:	
   756                           ; 1 bytes @ 0x3
   757                           
   758  0073                     Lcd_Cmd@a:	
   759                           ; 1 bytes @ 0x3
   760                           
   761                           
   762                           ; 1 bytes @ 0x3
   763  0073                     	ds	1
   764  0074                     ??_Lcd_Init:
   765  0074                     ?_Lcd_Set_Cursor:	
   766                           ; 1 bytes @ 0x4
   767                           
   768  0074                     ??___awdiv:	
   769                           ; 1 bytes @ 0x4
   770                           
   771  0074                     Lcd_Set_Cursor@b:	
   772                           ; 1 bytes @ 0x4
   773                           
   774  0074                     I2C_Master_Read@temp:	
   775                           ; 1 bytes @ 0x4
   776                           
   777  0074                     Lcd_Write_String@i:	
   778                           ; 2 bytes @ 0x4
   779                           
   780  0074                     ___lldiv@dividend:	
   781                           ; 2 bytes @ 0x4
   782                           
   783                           
   784                           ; 4 bytes @ 0x4
   785  0074                     	ds	1
   786  0075                     ??_Lcd_Set_Cursor:
   787  0075                     ___awdiv@counter:	
   788                           ; 1 bytes @ 0x5
   789                           
   790                           
   791                           ; 1 bytes @ 0x5
   792  0075                     	ds	1
   793  0076                     Lcd_Set_Cursor@a:
   794  0076                     Lcd_Write_String@a:	
   795                           ; 1 bytes @ 0x6
   796                           
   797  0076                     ___awdiv@sign:	
   798                           ; 1 bytes @ 0x6
   799                           
   800                           
   801                           ; 1 bytes @ 0x6
   802  0076                     	ds	1
   803  0077                     Lcd_Set_Cursor@temp:
   804  0077                     ___awdiv@quotient:	
   805                           ; 1 bytes @ 0x7
   806                           
   807                           
   808                           ; 2 bytes @ 0x7
   809  0077                     	ds	1
   810  0078                     ??___lldiv:
   811                           
   812                           ; 1 bytes @ 0x8
   813  0078                     	ds	1
   814  0079                     ?___awmod:
   815  0079                     ___awmod@divisor:	
   816                           ; 2 bytes @ 0x9
   817                           
   818  0079                     ___lldiv@quotient:	
   819                           ; 2 bytes @ 0x9
   820                           
   821                           
   822                           ; 4 bytes @ 0x9
   823  0079                     	ds	2
   824  007B                     ___awmod@dividend:
   825                           
   826                           ; 2 bytes @ 0xB
   827  007B                     	ds	2
   828  007D                     ??___awmod:
   829  007D                     ___lldiv@counter:	
   830                           ; 1 bytes @ 0xD
   831                           
   832                           
   833                           ; 1 bytes @ 0xD
   834  007D                     	ds	1
   835                           
   836                           	psect	cstackBANK0
   837  0020                     __pcstackBANK0:
   838  0020                     ?_I2C_Master_Init:
   839  0020                     ___awmod@counter:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0020                     I2C_Master_Init@c:	
   843                           ; 1 bytes @ 0x0
   844                           
   845  0020                     conver@temporal:	
   846                           ; 4 bytes @ 0x0
   847                           
   848                           
   849                           ; 16 bytes @ 0x0
   850  0020                     	ds	1
   851  0021                     ___awmod@sign:
   852                           
   853                           ; 1 bytes @ 0x1
   854  0021                     	ds	1
   855  0022                     ??_conver1:
   856                           
   857                           ; 1 bytes @ 0x2
   858  0022                     	ds	2
   859  0024                     ??_I2C_Master_Init:
   860                           
   861                           ; 1 bytes @ 0x4
   862  0024                     	ds	1
   863  0025                     conver1@temporal:
   864                           
   865                           ; 16 bytes @ 0x5
   866  0025                     	ds	3
   867  0028                     ??_setup:
   868                           
   869                           ; 1 bytes @ 0x8
   870  0028                     	ds	8
   871  0030                     conver@temporal_196:
   872                           
   873                           ; 16 bytes @ 0x10
   874  0030                     	ds	16
   875  0040                     ??_main:
   876                           
   877                           ; 1 bytes @ 0x20
   878  0040                     	ds	2
   879                           
   880                           	psect	maintext
   881  0619                     __pmaintext:	
   882 ;;
   883 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   884 ;;
   885 ;; *************** function _main *****************
   886 ;; Defined at:
   887 ;;		line 71 in file "main.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;		None
   890 ;; Auto vars:     Size  Location     Type
   891 ;;		None
   892 ;; Return value:  Size  Location     Type
   893 ;;                  1    wreg      void 
   894 ;; Registers used:
   895 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   896 ;; Tracked objects:
   897 ;;		On entry : B00/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   901 ;;      Params:         0       0       0       0       0
   902 ;;      Locals:         0       0       0       0       0
   903 ;;      Temps:          0       2       0       0       0
   904 ;;      Totals:         0       2       0       0       0
   905 ;;Total ram usage:        2 bytes
   906 ;; Hardware stack levels required when called: 3
   907 ;; This function calls:
   908 ;;		_I2C_Master_Read
   909 ;;		_I2C_Master_Start
   910 ;;		_I2C_Master_Stop
   911 ;;		_I2C_Master_Write
   912 ;;		_LECT1
   913 ;;		_Lcd_Init
   914 ;;		_Lcd_Set_Cursor
   915 ;;		_Lcd_Write_String
   916 ;;		_conver
   917 ;;		_conver1
   918 ;;		_setup
   919 ;; This function is called by:
   920 ;;		Startup code after reset
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           
   925                           ;psect for function _main
   926  0619                     _main:
   927  0619                     l2118:	
   928                           ;incstack = 0
   929                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   930                           
   931                           
   932                           ;main.c: 72:     setup();
   933  0619  120A  118A  22DB  120A  118A  	fcall	_setup
   934  061E                     l2120:
   935                           
   936                           ;main.c: 73:     Lcd_Init();
   937  061E  120A  158A  2774  120A  118A  	fcall	_Lcd_Init
   938  0623                     l2122:
   939                           
   940                           ;main.c: 76:         Lcd_Set_Cursor(1,1);
   941  0623  01F4               	clrf	Lcd_Set_Cursor@b
   942  0624  0AF4               	incf	Lcd_Set_Cursor@b,f
   943  0625  3001               	movlw	1
   944  0626  120A  158A  27AE  120A  118A  	fcall	_Lcd_Set_Cursor
   945                           
   946                           ;main.c: 77:         Lcd_Write_String(conver1());
   947  062B  120A  118A  21D9  120A  118A  	fcall	_conver1
   948  0630  120A  158A  278D  120A  118A  	fcall	_Lcd_Write_String
   949  0635                     l2124:
   950                           
   951                           ;main.c: 78:         Lcd_Set_Cursor(2,1);
   952  0635  01F4               	clrf	Lcd_Set_Cursor@b
   953  0636  0AF4               	incf	Lcd_Set_Cursor@b,f
   954  0637  3002               	movlw	2
   955  0638  120A  158A  27AE  120A  118A  	fcall	_Lcd_Set_Cursor
   956  063D                     l2126:
   957                           
   958                           ;main.c: 79:         Lcd_Write_String(conver());
   959  063D  120A  118A  2250  120A  118A  	fcall	_conver
   960  0642  120A  158A  278D  120A  118A  	fcall	_Lcd_Write_String
   961  0647                     l2128:
   962                           
   963                           ;main.c: 80:         LECT1();
   964  0647  120A  118A  246F  120A  118A  	fcall	_LECT1
   965  064C                     l2130:
   966                           
   967                           ;main.c: 82:         I2C_Master_Start();
   968  064C  120A  158A  271F  120A  118A  	fcall	_I2C_Master_Start
   969  0651                     l2132:
   970                           
   971                           ;main.c: 83:         I2C_Master_Write(0x50);
   972  0651  3050               	movlw	80
   973  0652  00F0               	movwf	I2C_Master_Write@d
   974  0653  3000               	movlw	0
   975  0654  00F1               	movwf	I2C_Master_Write@d+1
   976  0655  120A  158A  2731  120A  118A  	fcall	_I2C_Master_Write
   977  065A                     l2134:
   978                           
   979                           ;main.c: 84:         I2C_Master_Write(0);
   980  065A  3000               	movlw	0
   981  065B  00F0               	movwf	I2C_Master_Write@d
   982  065C  00F1               	movwf	I2C_Master_Write@d+1
   983  065D  120A  158A  2731  120A  118A  	fcall	_I2C_Master_Write
   984  0662                     l2136:
   985                           
   986                           ;main.c: 85:         I2C_Master_Stop();
   987  0662  120A  158A  2728  120A  118A  	fcall	_I2C_Master_Stop
   988  0667                     l2138:
   989                           
   990                           ;main.c: 86:         _delay((unsigned long)((10)*(8000000/4000.0)));
   991  0667  301A               	movlw	26
   992  0668  1283               	bcf	3,5	;RP0=0, select bank0
   993  0669  1303               	bcf	3,6	;RP1=0, select bank0
   994  066A  00C1               	movwf	??_main+1
   995  066B  30F7               	movlw	247
   996  066C  00C0               	movwf	??_main
   997  066D                     u1117:
   998  066D  0BC0               	decfsz	??_main,f
   999  066E  2E6D               	goto	u1117
  1000  066F  0BC1               	decfsz	??_main+1,f
  1001  0670  2E6D               	goto	u1117
  1002  0671  2E72               	nop2
  1003  0672                     l2140:
  1004                           
  1005                           ;main.c: 88:         I2C_Master_Start();
  1006  0672  120A  158A  271F  120A  118A  	fcall	_I2C_Master_Start
  1007  0677                     l2142:
  1008                           
  1009                           ;main.c: 89:         I2C_Master_Write(0x51);
  1010  0677  3051               	movlw	81
  1011  0678  00F0               	movwf	I2C_Master_Write@d
  1012  0679  3000               	movlw	0
  1013  067A  00F1               	movwf	I2C_Master_Write@d+1
  1014  067B  120A  158A  2731  120A  118A  	fcall	_I2C_Master_Write
  1015  0680                     l2144:
  1016                           
  1017                           ;main.c: 90:         PARKH = I2C_Master_Read(0);
  1018  0680  3000               	movlw	0
  1019  0681  00F0               	movwf	I2C_Master_Read@a
  1020  0682  00F1               	movwf	I2C_Master_Read@a+1
  1021  0683  120A  158A  27D2  120A  118A  	fcall	_I2C_Master_Read
  1022  0688  0870               	movf	?_I2C_Master_Read,w
  1023  0689  1283               	bcf	3,5	;RP0=0, select bank0
  1024  068A  1303               	bcf	3,6	;RP1=0, select bank0
  1025  068B  00C0               	movwf	??_main
  1026  068C  0840               	movf	??_main,w
  1027  068D  00D2               	movwf	_PARKH
  1028  068E                     l2146:
  1029                           
  1030                           ;main.c: 91:         I2C_Master_Stop();
  1031  068E  120A  158A  2728  120A  118A  	fcall	_I2C_Master_Stop
  1032  0693                     l2148:
  1033                           
  1034                           ;main.c: 92:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1035  0693  301A               	movlw	26
  1036  0694  1283               	bcf	3,5	;RP0=0, select bank0
  1037  0695  1303               	bcf	3,6	;RP1=0, select bank0
  1038  0696  00C1               	movwf	??_main+1
  1039  0697  30F7               	movlw	247
  1040  0698  00C0               	movwf	??_main
  1041  0699                     u1127:
  1042  0699  0BC0               	decfsz	??_main,f
  1043  069A  2E99               	goto	u1127
  1044  069B  0BC1               	decfsz	??_main+1,f
  1045  069C  2E99               	goto	u1127
  1046  069D  2E9E               	nop2
  1047  069E                     l2150:
  1048                           
  1049                           ;main.c: 94:         I2C_Master_Start();
  1050  069E  120A  158A  271F  120A  118A  	fcall	_I2C_Master_Start
  1051  06A3                     l2152:
  1052                           
  1053                           ;main.c: 95:         I2C_Master_Write(0x60);
  1054  06A3  3060               	movlw	96
  1055  06A4  00F0               	movwf	I2C_Master_Write@d
  1056  06A5  3000               	movlw	0
  1057  06A6  00F1               	movwf	I2C_Master_Write@d+1
  1058  06A7  120A  158A  2731  120A  118A  	fcall	_I2C_Master_Write
  1059  06AC                     l2154:
  1060                           
  1061                           ;main.c: 96:         I2C_Master_Write(CERRADO);
  1062  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  1063  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  1064  06AE  0844               	movf	_CERRADO,w
  1065  06AF  00C0               	movwf	??_main
  1066  06B0  01C1               	clrf	??_main+1
  1067  06B1  0840               	movf	??_main,w
  1068  06B2  00F0               	movwf	I2C_Master_Write@d
  1069  06B3  0841               	movf	??_main+1,w
  1070  06B4  00F1               	movwf	I2C_Master_Write@d+1
  1071  06B5  120A  158A  2731  120A  118A  	fcall	_I2C_Master_Write
  1072  06BA                     l2156:
  1073                           
  1074                           ;main.c: 97:         I2C_Master_Stop();
  1075  06BA  120A  158A  2728  120A  118A  	fcall	_I2C_Master_Stop
  1076  06BF                     l2158:
  1077                           
  1078                           ;main.c: 98:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1079  06BF  301A               	movlw	26
  1080  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  1081  06C1  1303               	bcf	3,6	;RP1=0, select bank0
  1082  06C2  00C1               	movwf	??_main+1
  1083  06C3  30F7               	movlw	247
  1084  06C4  00C0               	movwf	??_main
  1085  06C5                     u1137:
  1086  06C5  0BC0               	decfsz	??_main,f
  1087  06C6  2EC5               	goto	u1137
  1088  06C7  0BC1               	decfsz	??_main+1,f
  1089  06C8  2EC5               	goto	u1137
  1090  06C9  2ECA               	nop2
  1091  06CA                     l2160:
  1092                           
  1093                           ;main.c: 100:         I2C_Master_Start();
  1094  06CA  120A  158A  271F  120A  118A  	fcall	_I2C_Master_Start
  1095  06CF                     l2162:
  1096                           
  1097                           ;main.c: 101:         I2C_Master_Write(0x61);
  1098  06CF  3061               	movlw	97
  1099  06D0  00F0               	movwf	I2C_Master_Write@d
  1100  06D1  3000               	movlw	0
  1101  06D2  00F1               	movwf	I2C_Master_Write@d+1
  1102  06D3  120A  158A  2731  120A  118A  	fcall	_I2C_Master_Write
  1103  06D8                     l2164:
  1104                           
  1105                           ;main.c: 102:         temperatura = I2C_Master_Read(0);
  1106  06D8  3000               	movlw	0
  1107  06D9  00F0               	movwf	I2C_Master_Read@a
  1108  06DA  00F1               	movwf	I2C_Master_Read@a+1
  1109  06DB  120A  158A  27D2  120A  118A  	fcall	_I2C_Master_Read
  1110  06E0  0870               	movf	?_I2C_Master_Read,w
  1111  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  1112  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  1113  06E3  00C0               	movwf	??_main
  1114  06E4  0840               	movf	??_main,w
  1115  06E5  00C2               	movwf	_temperatura
  1116  06E6                     l2166:
  1117                           
  1118                           ;main.c: 103:         I2C_Master_Stop();
  1119  06E6  120A  158A  2728  120A  118A  	fcall	_I2C_Master_Stop
  1120  06EB                     l2168:
  1121                           
  1122                           ;main.c: 104:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1123  06EB  301A               	movlw	26
  1124  06EC  1283               	bcf	3,5	;RP0=0, select bank0
  1125  06ED  1303               	bcf	3,6	;RP1=0, select bank0
  1126  06EE  00C1               	movwf	??_main+1
  1127  06EF  30F7               	movlw	247
  1128  06F0  00C0               	movwf	??_main
  1129  06F1                     u1147:
  1130  06F1  0BC0               	decfsz	??_main,f
  1131  06F2  2EF1               	goto	u1147
  1132  06F3  0BC1               	decfsz	??_main+1,f
  1133  06F4  2EF1               	goto	u1147
  1134  06F5  2EF6               	nop2
  1135  06F6                     l2170:
  1136                           
  1137                           ;main.c: 106:         I2C_Master_Start();
  1138  06F6  120A  158A  271F  120A  118A  	fcall	_I2C_Master_Start
  1139  06FB                     l2172:
  1140                           
  1141                           ;main.c: 107:         I2C_Master_Write(0xD0);
  1142  06FB  30D0               	movlw	208
  1143  06FC  00F0               	movwf	I2C_Master_Write@d
  1144  06FD  3000               	movlw	0
  1145  06FE  00F1               	movwf	I2C_Master_Write@d+1
  1146  06FF  120A  158A  2731  120A  118A  	fcall	_I2C_Master_Write
  1147  0704                     l2174:
  1148                           
  1149                           ;main.c: 108:         I2C_Master_Write(0x02);
  1150  0704  3002               	movlw	2
  1151  0705  00F0               	movwf	I2C_Master_Write@d
  1152  0706  3000               	movlw	0
  1153  0707  00F1               	movwf	I2C_Master_Write@d+1
  1154  0708  120A  158A  2731  120A  118A  	fcall	_I2C_Master_Write
  1155  070D                     l2176:
  1156                           
  1157                           ;main.c: 109:         I2C_Master_Stop();
  1158  070D  120A  158A  2728  120A  118A  	fcall	_I2C_Master_Stop
  1159  0712                     l2178:
  1160                           
  1161                           ;main.c: 110:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1162  0712  301A               	movlw	26
  1163  0713  1283               	bcf	3,5	;RP0=0, select bank0
  1164  0714  1303               	bcf	3,6	;RP1=0, select bank0
  1165  0715  00C1               	movwf	??_main+1
  1166  0716  30F7               	movlw	247
  1167  0717  00C0               	movwf	??_main
  1168  0718                     u1157:
  1169  0718  0BC0               	decfsz	??_main,f
  1170  0719  2F18               	goto	u1157
  1171  071A  0BC1               	decfsz	??_main+1,f
  1172  071B  2F18               	goto	u1157
  1173  071C  2F1D               	nop2
  1174  071D                     l2180:
  1175                           
  1176                           ;main.c: 112:         I2C_Master_Start();
  1177  071D  120A  158A  271F  120A  118A  	fcall	_I2C_Master_Start
  1178  0722                     l2182:
  1179                           
  1180                           ;main.c: 113:         I2C_Master_Write(0xD1);
  1181  0722  30D1               	movlw	209
  1182  0723  00F0               	movwf	I2C_Master_Write@d
  1183  0724  3000               	movlw	0
  1184  0725  00F1               	movwf	I2C_Master_Write@d+1
  1185  0726  120A  158A  2731  120A  118A  	fcall	_I2C_Master_Write
  1186  072B                     l2184:
  1187                           
  1188                           ;main.c: 114:         HORA = I2C_Master_Read(0);
  1189  072B  3000               	movlw	0
  1190  072C  00F0               	movwf	I2C_Master_Read@a
  1191  072D  00F1               	movwf	I2C_Master_Read@a+1
  1192  072E  120A  158A  27D2  120A  118A  	fcall	_I2C_Master_Read
  1193  0733  0870               	movf	?_I2C_Master_Read,w
  1194  0734  1283               	bcf	3,5	;RP0=0, select bank0
  1195  0735  1303               	bcf	3,6	;RP1=0, select bank0
  1196  0736  00C0               	movwf	??_main
  1197  0737  0840               	movf	??_main,w
  1198  0738  00CE               	movwf	_HORA
  1199  0739                     l2186:
  1200                           
  1201                           ;main.c: 115:         I2C_Master_Stop();
  1202  0739  120A  158A  2728  120A  118A  	fcall	_I2C_Master_Stop
  1203  073E                     l2188:
  1204                           
  1205                           ;main.c: 116:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1206  073E  301A               	movlw	26
  1207  073F  1283               	bcf	3,5	;RP0=0, select bank0
  1208  0740  1303               	bcf	3,6	;RP1=0, select bank0
  1209  0741  00C1               	movwf	??_main+1
  1210  0742  30F7               	movlw	247
  1211  0743  00C0               	movwf	??_main
  1212  0744                     u1167:
  1213  0744  0BC0               	decfsz	??_main,f
  1214  0745  2F44               	goto	u1167
  1215  0746  0BC1               	decfsz	??_main+1,f
  1216  0747  2F44               	goto	u1167
  1217  0748  2F49               	nop2
  1218  0749                     l2190:
  1219                           
  1220                           ;main.c: 118:         I2C_Master_Start();
  1221  0749  120A  158A  271F  120A  118A  	fcall	_I2C_Master_Start
  1222  074E                     l2192:
  1223                           
  1224                           ;main.c: 119:         I2C_Master_Write(0xD0);
  1225  074E  30D0               	movlw	208
  1226  074F  00F0               	movwf	I2C_Master_Write@d
  1227  0750  3000               	movlw	0
  1228  0751  00F1               	movwf	I2C_Master_Write@d+1
  1229  0752  120A  158A  2731  120A  118A  	fcall	_I2C_Master_Write
  1230  0757                     l2194:
  1231                           
  1232                           ;main.c: 120:         I2C_Master_Write(0x03);
  1233  0757  3003               	movlw	3
  1234  0758  00F0               	movwf	I2C_Master_Write@d
  1235  0759  3000               	movlw	0
  1236  075A  00F1               	movwf	I2C_Master_Write@d+1
  1237  075B  120A  158A  2731  120A  118A  	fcall	_I2C_Master_Write
  1238  0760                     l2196:
  1239                           
  1240                           ;main.c: 121:         I2C_Master_Stop();
  1241  0760  120A  158A  2728  120A  118A  	fcall	_I2C_Master_Stop
  1242  0765                     l2198:
  1243                           
  1244                           ;main.c: 122:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1245  0765  301A               	movlw	26
  1246  0766  1283               	bcf	3,5	;RP0=0, select bank0
  1247  0767  1303               	bcf	3,6	;RP1=0, select bank0
  1248  0768  00C1               	movwf	??_main+1
  1249  0769  30F7               	movlw	247
  1250  076A  00C0               	movwf	??_main
  1251  076B                     u1177:
  1252  076B  0BC0               	decfsz	??_main,f
  1253  076C  2F6B               	goto	u1177
  1254  076D  0BC1               	decfsz	??_main+1,f
  1255  076E  2F6B               	goto	u1177
  1256  076F  2F70               	nop2
  1257  0770                     l2200:
  1258                           
  1259                           ;main.c: 124:         I2C_Master_Start();
  1260  0770  120A  158A  271F  120A  118A  	fcall	_I2C_Master_Start
  1261  0775                     l2202:
  1262                           
  1263                           ;main.c: 125:         I2C_Master_Write(0xD1);
  1264  0775  30D1               	movlw	209
  1265  0776  00F0               	movwf	I2C_Master_Write@d
  1266  0777  3000               	movlw	0
  1267  0778  00F1               	movwf	I2C_Master_Write@d+1
  1268  0779  120A  158A  2731  120A  118A  	fcall	_I2C_Master_Write
  1269  077E                     l2204:
  1270                           
  1271                           ;main.c: 126:         DIA = I2C_Master_Read(0);
  1272  077E  3000               	movlw	0
  1273  077F  00F0               	movwf	I2C_Master_Read@a
  1274  0780  00F1               	movwf	I2C_Master_Read@a+1
  1275  0781  120A  158A  27D2  120A  118A  	fcall	_I2C_Master_Read
  1276  0786  0870               	movf	?_I2C_Master_Read,w
  1277  0787  1283               	bcf	3,5	;RP0=0, select bank0
  1278  0788  1303               	bcf	3,6	;RP1=0, select bank0
  1279  0789  00C0               	movwf	??_main
  1280  078A  0840               	movf	??_main,w
  1281  078B  00CF               	movwf	_DIA
  1282  078C                     l2206:
  1283                           
  1284                           ;main.c: 127:         I2C_Master_Stop();
  1285  078C  120A  158A  2728  120A  118A  	fcall	_I2C_Master_Stop
  1286  0791                     l2208:
  1287                           
  1288                           ;main.c: 128:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1289  0791  301A               	movlw	26
  1290  0792  1283               	bcf	3,5	;RP0=0, select bank0
  1291  0793  1303               	bcf	3,6	;RP1=0, select bank0
  1292  0794  00C1               	movwf	??_main+1
  1293  0795  30F7               	movlw	247
  1294  0796  00C0               	movwf	??_main
  1295  0797                     u1187:
  1296  0797  0BC0               	decfsz	??_main,f
  1297  0798  2F97               	goto	u1187
  1298  0799  0BC1               	decfsz	??_main+1,f
  1299  079A  2F97               	goto	u1187
  1300  079B  2F9C               	nop2
  1301  079C                     l2210:
  1302                           
  1303                           ;main.c: 130:         I2C_Master_Start();
  1304  079C  120A  158A  271F  120A  118A  	fcall	_I2C_Master_Start
  1305  07A1                     l2212:
  1306                           
  1307                           ;main.c: 131:         I2C_Master_Write(0xD0);
  1308  07A1  30D0               	movlw	208
  1309  07A2  00F0               	movwf	I2C_Master_Write@d
  1310  07A3  3000               	movlw	0
  1311  07A4  00F1               	movwf	I2C_Master_Write@d+1
  1312  07A5  120A  158A  2731  120A  118A  	fcall	_I2C_Master_Write
  1313  07AA                     l2214:
  1314                           
  1315                           ;main.c: 132:         I2C_Master_Write(0x01);
  1316  07AA  3001               	movlw	1
  1317  07AB  00F0               	movwf	I2C_Master_Write@d
  1318  07AC  3000               	movlw	0
  1319  07AD  00F1               	movwf	I2C_Master_Write@d+1
  1320  07AE  120A  158A  2731  120A  118A  	fcall	_I2C_Master_Write
  1321  07B3                     l2216:
  1322                           
  1323                           ;main.c: 133:         I2C_Master_Stop();
  1324  07B3  120A  158A  2728  120A  118A  	fcall	_I2C_Master_Stop
  1325  07B8                     l2218:
  1326                           
  1327                           ;main.c: 134:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1328  07B8  301A               	movlw	26
  1329  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  1330  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  1331  07BB  00C1               	movwf	??_main+1
  1332  07BC  30F7               	movlw	247
  1333  07BD  00C0               	movwf	??_main
  1334  07BE                     u1197:
  1335  07BE  0BC0               	decfsz	??_main,f
  1336  07BF  2FBE               	goto	u1197
  1337  07C0  0BC1               	decfsz	??_main+1,f
  1338  07C1  2FBE               	goto	u1197
  1339  07C2  2FC3               	nop2
  1340  07C3                     l2220:
  1341                           
  1342                           ;main.c: 136:         I2C_Master_Start();
  1343  07C3  120A  158A  271F  120A  118A  	fcall	_I2C_Master_Start
  1344  07C8                     l2222:
  1345                           
  1346                           ;main.c: 137:         I2C_Master_Write(0xD1);
  1347  07C8  30D1               	movlw	209
  1348  07C9  00F0               	movwf	I2C_Master_Write@d
  1349  07CA  3000               	movlw	0
  1350  07CB  00F1               	movwf	I2C_Master_Write@d+1
  1351  07CC  120A  158A  2731  120A  118A  	fcall	_I2C_Master_Write
  1352  07D1                     l2224:
  1353                           
  1354                           ;main.c: 138:         MIN = I2C_Master_Read(0);
  1355  07D1  3000               	movlw	0
  1356  07D2  00F0               	movwf	I2C_Master_Read@a
  1357  07D3  00F1               	movwf	I2C_Master_Read@a+1
  1358  07D4  120A  158A  27D2  120A  118A  	fcall	_I2C_Master_Read
  1359  07D9  0870               	movf	?_I2C_Master_Read,w
  1360  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  1361  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  1362  07DC  00C0               	movwf	??_main
  1363  07DD  0840               	movf	??_main,w
  1364  07DE  00CD               	movwf	_MIN
  1365  07DF                     l2226:
  1366                           
  1367                           ;main.c: 139:         I2C_Master_Stop();
  1368  07DF  120A  158A  2728  120A  118A  	fcall	_I2C_Master_Stop
  1369  07E4                     l2228:
  1370                           
  1371                           ;main.c: 140:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1372  07E4  301A               	movlw	26
  1373  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  1374  07E6  1303               	bcf	3,6	;RP1=0, select bank0
  1375  07E7  00C1               	movwf	??_main+1
  1376  07E8  30F7               	movlw	247
  1377  07E9  00C0               	movwf	??_main
  1378  07EA                     u1207:
  1379  07EA  0BC0               	decfsz	??_main,f
  1380  07EB  2FEA               	goto	u1207
  1381  07EC  0BC1               	decfsz	??_main+1,f
  1382  07ED  2FEA               	goto	u1207
  1383  07EE  2FEF               	nop2
  1384  07EF  2E23               	goto	l2122
  1385  07F0  120A  118A  2800   	ljmp	start
  1386  07F3                     __end_of_main:
  1387                           
  1388                           	psect	text1
  1389  02DB                     __ptext1:	
  1390 ;; *************** function _setup *****************
  1391 ;; Defined at:
  1392 ;;		line 148 in file "main.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;		None
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;		None
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  1    wreg      void 
  1399 ;; Registers used:
  1400 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1406 ;;      Params:         0       0       0       0       0
  1407 ;;      Locals:         0       0       0       0       0
  1408 ;;      Temps:          0       2       0       0       0
  1409 ;;      Totals:         0       2       0       0       0
  1410 ;;Total ram usage:        2 bytes
  1411 ;; Hardware stack levels used: 1
  1412 ;; Hardware stack levels required when called: 2
  1413 ;; This function calls:
  1414 ;;		_I2C_Master_Init
  1415 ;;		_I2C_Master_Read
  1416 ;;		_I2C_Master_Start
  1417 ;;		_I2C_Master_Stop
  1418 ;;		_I2C_Master_Write
  1419 ;;		_osc_config
  1420 ;; This function is called by:
  1421 ;;		_main
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           
  1426                           ;psect for function _setup
  1427  02DB                     _setup:
  1428  02DB                     l1850:	
  1429                           ;incstack = 0
  1430                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1431                           
  1432                           
  1433                           ;main.c: 149:     ANSEL = 0;
  1434  02DB  1683               	bsf	3,5	;RP0=1, select bank3
  1435  02DC  1703               	bsf	3,6	;RP1=1, select bank3
  1436  02DD  0188               	clrf	8	;volatile
  1437                           
  1438                           ;main.c: 150:     ANSELH = 0;
  1439  02DE  0189               	clrf	9	;volatile
  1440                           
  1441                           ;main.c: 151:     TRISA = 0;
  1442  02DF  1683               	bsf	3,5	;RP0=1, select bank1
  1443  02E0  1303               	bcf	3,6	;RP1=0, select bank1
  1444  02E1  0185               	clrf	5	;volatile
  1445                           
  1446                           ;main.c: 152:     TRISB = 0;
  1447  02E2  0186               	clrf	6	;volatile
  1448                           
  1449                           ;main.c: 153:     TRISD = 0;
  1450  02E3  0188               	clrf	8	;volatile
  1451                           
  1452                           ;main.c: 154:     TRISE = 0;
  1453  02E4  0189               	clrf	9	;volatile
  1454                           
  1455                           ;main.c: 155:     PORTA = 0;
  1456  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  1457  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  1458  02E7  0185               	clrf	5	;volatile
  1459                           
  1460                           ;main.c: 156:     PORTB = 0;
  1461  02E8  0186               	clrf	6	;volatile
  1462                           
  1463                           ;main.c: 157:     PORTD = 0;
  1464  02E9  0188               	clrf	8	;volatile
  1465  02EA                     l1852:
  1466                           
  1467                           ;main.c: 158:     osc_config(8);
  1468  02EA  3008               	movlw	8
  1469  02EB  120A  118A  2003  120A  118A  	fcall	_osc_config
  1470  02F0                     l1854:
  1471                           
  1472                           ;main.c: 159:     I2C_Master_Init(100000);
  1473  02F0  3000               	movlw	0
  1474  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  1475  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  1476  02F3  00A3               	movwf	I2C_Master_Init@c+3
  1477  02F4  3001               	movlw	1
  1478  02F5  00A2               	movwf	I2C_Master_Init@c+2
  1479  02F6  3086               	movlw	134
  1480  02F7  00A1               	movwf	I2C_Master_Init@c+1
  1481  02F8  30A0               	movlw	160
  1482  02F9  00A0               	movwf	I2C_Master_Init@c
  1483  02FA  120A  118A  203A  120A  118A  	fcall	_I2C_Master_Init
  1484  02FF                     l1856:
  1485                           
  1486                           ;main.c: 161:     I2C_Master_Start();
  1487  02FF  120A  158A  271F  120A  118A  	fcall	_I2C_Master_Start
  1488  0304                     l1858:
  1489                           
  1490                           ;main.c: 162:     I2C_Master_Write(0xD0);
  1491  0304  30D0               	movlw	208
  1492  0305  00F0               	movwf	I2C_Master_Write@d
  1493  0306  3000               	movlw	0
  1494  0307  00F1               	movwf	I2C_Master_Write@d+1
  1495  0308  120A  158A  2731  120A  118A  	fcall	_I2C_Master_Write
  1496  030D                     l1860:
  1497                           
  1498                           ;main.c: 163:     I2C_Master_Write(0x02);
  1499  030D  3002               	movlw	2
  1500  030E  00F0               	movwf	I2C_Master_Write@d
  1501  030F  3000               	movlw	0
  1502  0310  00F1               	movwf	I2C_Master_Write@d+1
  1503  0311  120A  158A  2731  120A  118A  	fcall	_I2C_Master_Write
  1504  0316                     l1862:
  1505                           
  1506                           ;main.c: 164:     I2C_Master_Write(0x06);
  1507  0316  3006               	movlw	6
  1508  0317  00F0               	movwf	I2C_Master_Write@d
  1509  0318  3000               	movlw	0
  1510  0319  00F1               	movwf	I2C_Master_Write@d+1
  1511  031A  120A  158A  2731  120A  118A  	fcall	_I2C_Master_Write
  1512  031F                     l1864:
  1513                           
  1514                           ;main.c: 165:     I2C_Master_Stop();
  1515  031F  120A  158A  2728  120A  118A  	fcall	_I2C_Master_Stop
  1516  0324                     l1866:
  1517                           
  1518                           ;main.c: 166:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1519  0324  301A               	movlw	26
  1520  0325  1283               	bcf	3,5	;RP0=0, select bank0
  1521  0326  1303               	bcf	3,6	;RP1=0, select bank0
  1522  0327  00A9               	movwf	??_setup+1
  1523  0328  30F7               	movlw	247
  1524  0329  00A8               	movwf	??_setup
  1525  032A                     u1217:
  1526  032A  0BA8               	decfsz	??_setup,f
  1527  032B  2B2A               	goto	u1217
  1528  032C  0BA9               	decfsz	??_setup+1,f
  1529  032D  2B2A               	goto	u1217
  1530  032E  2B2F               	nop2
  1531  032F                     l1868:
  1532                           
  1533                           ;main.c: 168:     I2C_Master_Start();
  1534  032F  120A  158A  271F  120A  118A  	fcall	_I2C_Master_Start
  1535  0334                     l1870:
  1536                           
  1537                           ;main.c: 169:     I2C_Master_Write(0xD1);
  1538  0334  30D1               	movlw	209
  1539  0335  00F0               	movwf	I2C_Master_Write@d
  1540  0336  3000               	movlw	0
  1541  0337  00F1               	movwf	I2C_Master_Write@d+1
  1542  0338  120A  158A  2731  120A  118A  	fcall	_I2C_Master_Write
  1543  033D                     l1872:
  1544                           
  1545                           ;main.c: 170:     BASURA = I2C_Master_Read(0);
  1546  033D  3000               	movlw	0
  1547  033E  00F0               	movwf	I2C_Master_Read@a
  1548  033F  00F1               	movwf	I2C_Master_Read@a+1
  1549  0340  120A  158A  27D2  120A  118A  	fcall	_I2C_Master_Read
  1550  0345  0870               	movf	?_I2C_Master_Read,w
  1551  0346  1283               	bcf	3,5	;RP0=0, select bank0
  1552  0347  1303               	bcf	3,6	;RP1=0, select bank0
  1553  0348  00A8               	movwf	??_setup
  1554  0349  0828               	movf	??_setup,w
  1555  034A  00D0               	movwf	_BASURA
  1556  034B                     l1874:
  1557                           
  1558                           ;main.c: 171:     I2C_Master_Stop();
  1559  034B  120A  158A  2728  120A  118A  	fcall	_I2C_Master_Stop
  1560  0350                     l1876:
  1561                           
  1562                           ;main.c: 172:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1563  0350  301A               	movlw	26
  1564  0351  1283               	bcf	3,5	;RP0=0, select bank0
  1565  0352  1303               	bcf	3,6	;RP1=0, select bank0
  1566  0353  00A9               	movwf	??_setup+1
  1567  0354  30F7               	movlw	247
  1568  0355  00A8               	movwf	??_setup
  1569  0356                     u1227:
  1570  0356  0BA8               	decfsz	??_setup,f
  1571  0357  2B56               	goto	u1227
  1572  0358  0BA9               	decfsz	??_setup+1,f
  1573  0359  2B56               	goto	u1227
  1574  035A  2B5B               	nop2
  1575  035B                     l1878:
  1576                           
  1577                           ;main.c: 174:     I2C_Master_Start();
  1578  035B  120A  158A  271F  120A  118A  	fcall	_I2C_Master_Start
  1579  0360                     l1880:
  1580                           
  1581                           ;main.c: 175:     I2C_Master_Write(0xD0);
  1582  0360  30D0               	movlw	208
  1583  0361  00F0               	movwf	I2C_Master_Write@d
  1584  0362  3000               	movlw	0
  1585  0363  00F1               	movwf	I2C_Master_Write@d+1
  1586  0364  120A  158A  2731  120A  118A  	fcall	_I2C_Master_Write
  1587  0369                     l1882:
  1588                           
  1589                           ;main.c: 176:     I2C_Master_Write(0x01);
  1590  0369  3001               	movlw	1
  1591  036A  00F0               	movwf	I2C_Master_Write@d
  1592  036B  3000               	movlw	0
  1593  036C  00F1               	movwf	I2C_Master_Write@d+1
  1594  036D  120A  158A  2731  120A  118A  	fcall	_I2C_Master_Write
  1595  0372                     l1884:
  1596                           
  1597                           ;main.c: 177:     I2C_Master_Write(0x59);
  1598  0372  3059               	movlw	89
  1599  0373  00F0               	movwf	I2C_Master_Write@d
  1600  0374  3000               	movlw	0
  1601  0375  00F1               	movwf	I2C_Master_Write@d+1
  1602  0376  120A  158A  2731  120A  118A  	fcall	_I2C_Master_Write
  1603  037B                     l1886:
  1604                           
  1605                           ;main.c: 178:     I2C_Master_Stop();
  1606  037B  120A  158A  2728  120A  118A  	fcall	_I2C_Master_Stop
  1607  0380                     l1888:
  1608                           
  1609                           ;main.c: 179:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1610  0380  301A               	movlw	26
  1611  0381  1283               	bcf	3,5	;RP0=0, select bank0
  1612  0382  1303               	bcf	3,6	;RP1=0, select bank0
  1613  0383  00A9               	movwf	??_setup+1
  1614  0384  30F7               	movlw	247
  1615  0385  00A8               	movwf	??_setup
  1616  0386                     u1237:
  1617  0386  0BA8               	decfsz	??_setup,f
  1618  0387  2B86               	goto	u1237
  1619  0388  0BA9               	decfsz	??_setup+1,f
  1620  0389  2B86               	goto	u1237
  1621  038A  2B8B               	nop2
  1622  038B                     l1890:
  1623                           
  1624                           ;main.c: 181:     I2C_Master_Start();
  1625  038B  120A  158A  271F  120A  118A  	fcall	_I2C_Master_Start
  1626  0390                     l1892:
  1627                           
  1628                           ;main.c: 182:     I2C_Master_Write(0xD1);
  1629  0390  30D1               	movlw	209
  1630  0391  00F0               	movwf	I2C_Master_Write@d
  1631  0392  3000               	movlw	0
  1632  0393  00F1               	movwf	I2C_Master_Write@d+1
  1633  0394  120A  158A  2731  120A  118A  	fcall	_I2C_Master_Write
  1634  0399                     l1894:
  1635                           
  1636                           ;main.c: 183:     BASURA = I2C_Master_Read(0);
  1637  0399  3000               	movlw	0
  1638  039A  00F0               	movwf	I2C_Master_Read@a
  1639  039B  00F1               	movwf	I2C_Master_Read@a+1
  1640  039C  120A  158A  27D2  120A  118A  	fcall	_I2C_Master_Read
  1641  03A1  0870               	movf	?_I2C_Master_Read,w
  1642  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  1643  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  1644  03A4  00A8               	movwf	??_setup
  1645  03A5  0828               	movf	??_setup,w
  1646  03A6  00D0               	movwf	_BASURA
  1647  03A7                     l1896:
  1648                           
  1649                           ;main.c: 184:     I2C_Master_Stop();
  1650  03A7  120A  158A  2728  120A  118A  	fcall	_I2C_Master_Stop
  1651  03AC                     l1898:
  1652                           
  1653                           ;main.c: 185:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1654  03AC  301A               	movlw	26
  1655  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  1656  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  1657  03AF  00A9               	movwf	??_setup+1
  1658  03B0  30F7               	movlw	247
  1659  03B1  00A8               	movwf	??_setup
  1660  03B2                     u1247:
  1661  03B2  0BA8               	decfsz	??_setup,f
  1662  03B3  2BB2               	goto	u1247
  1663  03B4  0BA9               	decfsz	??_setup+1,f
  1664  03B5  2BB2               	goto	u1247
  1665  03B6  2BB7               	nop2
  1666  03B7                     l1900:
  1667                           
  1668                           ;main.c: 187:     I2C_Master_Start();
  1669  03B7  120A  158A  271F  120A  118A  	fcall	_I2C_Master_Start
  1670  03BC                     l1902:
  1671                           
  1672                           ;main.c: 188:     I2C_Master_Write(0xD0);
  1673  03BC  30D0               	movlw	208
  1674  03BD  00F0               	movwf	I2C_Master_Write@d
  1675  03BE  3000               	movlw	0
  1676  03BF  00F1               	movwf	I2C_Master_Write@d+1
  1677  03C0  120A  158A  2731  120A  118A  	fcall	_I2C_Master_Write
  1678  03C5                     l1904:
  1679                           
  1680                           ;main.c: 189:     I2C_Master_Write(0x00);
  1681  03C5  3000               	movlw	0
  1682  03C6  00F0               	movwf	I2C_Master_Write@d
  1683  03C7  00F1               	movwf	I2C_Master_Write@d+1
  1684  03C8  120A  158A  2731  120A  118A  	fcall	_I2C_Master_Write
  1685  03CD                     l1906:
  1686                           
  1687                           ;main.c: 190:     I2C_Master_Write(0x58);
  1688  03CD  3058               	movlw	88
  1689  03CE  00F0               	movwf	I2C_Master_Write@d
  1690  03CF  3000               	movlw	0
  1691  03D0  00F1               	movwf	I2C_Master_Write@d+1
  1692  03D1  120A  158A  2731  120A  118A  	fcall	_I2C_Master_Write
  1693  03D6                     l1908:
  1694                           
  1695                           ;main.c: 191:     I2C_Master_Stop();
  1696  03D6  120A  158A  2728  120A  118A  	fcall	_I2C_Master_Stop
  1697  03DB                     l1910:
  1698                           
  1699                           ;main.c: 192:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1700  03DB  301A               	movlw	26
  1701  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  1702  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  1703  03DE  00A9               	movwf	??_setup+1
  1704  03DF  30F7               	movlw	247
  1705  03E0  00A8               	movwf	??_setup
  1706  03E1                     u1257:
  1707  03E1  0BA8               	decfsz	??_setup,f
  1708  03E2  2BE1               	goto	u1257
  1709  03E3  0BA9               	decfsz	??_setup+1,f
  1710  03E4  2BE1               	goto	u1257
  1711  03E5  2BE6               	nop2
  1712  03E6                     l1912:
  1713                           
  1714                           ;main.c: 194:     I2C_Master_Start();
  1715  03E6  120A  158A  271F  120A  118A  	fcall	_I2C_Master_Start
  1716  03EB                     l1914:
  1717                           
  1718                           ;main.c: 195:     I2C_Master_Write(0xD1);
  1719  03EB  30D1               	movlw	209
  1720  03EC  00F0               	movwf	I2C_Master_Write@d
  1721  03ED  3000               	movlw	0
  1722  03EE  00F1               	movwf	I2C_Master_Write@d+1
  1723  03EF  120A  158A  2731  120A  118A  	fcall	_I2C_Master_Write
  1724  03F4                     l1916:
  1725                           
  1726                           ;main.c: 196:     BASURA = I2C_Master_Read(0);
  1727  03F4  3000               	movlw	0
  1728  03F5  00F0               	movwf	I2C_Master_Read@a
  1729  03F6  00F1               	movwf	I2C_Master_Read@a+1
  1730  03F7  120A  158A  27D2  120A  118A  	fcall	_I2C_Master_Read
  1731  03FC  0870               	movf	?_I2C_Master_Read,w
  1732  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  1733  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  1734  03FF  00A8               	movwf	??_setup
  1735  0400  0828               	movf	??_setup,w
  1736  0401  00D0               	movwf	_BASURA
  1737  0402                     l1918:
  1738                           
  1739                           ;main.c: 197:     I2C_Master_Stop();
  1740  0402  120A  158A  2728  120A  118A  	fcall	_I2C_Master_Stop
  1741  0407                     l1920:
  1742                           
  1743                           ;main.c: 198:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1744  0407  301A               	movlw	26
  1745  0408  1283               	bcf	3,5	;RP0=0, select bank0
  1746  0409  1303               	bcf	3,6	;RP1=0, select bank0
  1747  040A  00A9               	movwf	??_setup+1
  1748  040B  30F7               	movlw	247
  1749  040C  00A8               	movwf	??_setup
  1750  040D                     u1267:
  1751  040D  0BA8               	decfsz	??_setup,f
  1752  040E  2C0D               	goto	u1267
  1753  040F  0BA9               	decfsz	??_setup+1,f
  1754  0410  2C0D               	goto	u1267
  1755  0411  2C12               	nop2
  1756  0412                     l1922:
  1757                           
  1758                           ;main.c: 200:     I2C_Master_Start();
  1759  0412  120A  158A  271F  120A  118A  	fcall	_I2C_Master_Start
  1760  0417                     l1924:
  1761                           
  1762                           ;main.c: 201:     I2C_Master_Write(0xD0);
  1763  0417  30D0               	movlw	208
  1764  0418  00F0               	movwf	I2C_Master_Write@d
  1765  0419  3000               	movlw	0
  1766  041A  00F1               	movwf	I2C_Master_Write@d+1
  1767  041B  120A  158A  2731  120A  118A  	fcall	_I2C_Master_Write
  1768  0420                     l1926:
  1769                           
  1770                           ;main.c: 202:     I2C_Master_Write(0x03);
  1771  0420  3003               	movlw	3
  1772  0421  00F0               	movwf	I2C_Master_Write@d
  1773  0422  3000               	movlw	0
  1774  0423  00F1               	movwf	I2C_Master_Write@d+1
  1775  0424  120A  158A  2731  120A  118A  	fcall	_I2C_Master_Write
  1776  0429                     l1928:
  1777                           
  1778                           ;main.c: 203:     I2C_Master_Write(0x06);
  1779  0429  3006               	movlw	6
  1780  042A  00F0               	movwf	I2C_Master_Write@d
  1781  042B  3000               	movlw	0
  1782  042C  00F1               	movwf	I2C_Master_Write@d+1
  1783  042D  120A  158A  2731  120A  118A  	fcall	_I2C_Master_Write
  1784  0432                     l1930:
  1785                           
  1786                           ;main.c: 204:     I2C_Master_Stop();
  1787  0432  120A  158A  2728  120A  118A  	fcall	_I2C_Master_Stop
  1788  0437                     l1932:
  1789                           
  1790                           ;main.c: 205:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1791  0437  301A               	movlw	26
  1792  0438  1283               	bcf	3,5	;RP0=0, select bank0
  1793  0439  1303               	bcf	3,6	;RP1=0, select bank0
  1794  043A  00A9               	movwf	??_setup+1
  1795  043B  30F7               	movlw	247
  1796  043C  00A8               	movwf	??_setup
  1797  043D                     u1277:
  1798  043D  0BA8               	decfsz	??_setup,f
  1799  043E  2C3D               	goto	u1277
  1800  043F  0BA9               	decfsz	??_setup+1,f
  1801  0440  2C3D               	goto	u1277
  1802  0441  2C42               	nop2
  1803  0442                     l1934:
  1804                           
  1805                           ;main.c: 207:     I2C_Master_Start();
  1806  0442  120A  158A  271F  120A  118A  	fcall	_I2C_Master_Start
  1807  0447                     l1936:
  1808                           
  1809                           ;main.c: 208:     I2C_Master_Write(0xD1);
  1810  0447  30D1               	movlw	209
  1811  0448  00F0               	movwf	I2C_Master_Write@d
  1812  0449  3000               	movlw	0
  1813  044A  00F1               	movwf	I2C_Master_Write@d+1
  1814  044B  120A  158A  2731  120A  118A  	fcall	_I2C_Master_Write
  1815  0450                     l1938:
  1816                           
  1817                           ;main.c: 209:     BASURA = I2C_Master_Read(0);
  1818  0450  3000               	movlw	0
  1819  0451  00F0               	movwf	I2C_Master_Read@a
  1820  0452  00F1               	movwf	I2C_Master_Read@a+1
  1821  0453  120A  158A  27D2  120A  118A  	fcall	_I2C_Master_Read
  1822  0458  0870               	movf	?_I2C_Master_Read,w
  1823  0459  1283               	bcf	3,5	;RP0=0, select bank0
  1824  045A  1303               	bcf	3,6	;RP1=0, select bank0
  1825  045B  00A8               	movwf	??_setup
  1826  045C  0828               	movf	??_setup,w
  1827  045D  00D0               	movwf	_BASURA
  1828  045E                     l1940:
  1829                           
  1830                           ;main.c: 210:     I2C_Master_Stop();
  1831  045E  120A  158A  2728  120A  118A  	fcall	_I2C_Master_Stop
  1832  0463                     l1942:
  1833                           
  1834                           ;main.c: 211:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1835  0463  301A               	movlw	26
  1836  0464  1283               	bcf	3,5	;RP0=0, select bank0
  1837  0465  1303               	bcf	3,6	;RP1=0, select bank0
  1838  0466  00A9               	movwf	??_setup+1
  1839  0467  30F7               	movlw	247
  1840  0468  00A8               	movwf	??_setup
  1841  0469                     u1287:
  1842  0469  0BA8               	decfsz	??_setup,f
  1843  046A  2C69               	goto	u1287
  1844  046B  0BA9               	decfsz	??_setup+1,f
  1845  046C  2C69               	goto	u1287
  1846  046D  2C6E               	nop2
  1847  046E                     l148:
  1848  046E  0008               	return
  1849  046F                     __end_of_setup:
  1850                           
  1851                           	psect	text2
  1852  0003                     __ptext2:	
  1853 ;; *************** function _osc_config *****************
  1854 ;; Defined at:
  1855 ;;		line 17 in file "Osc_config.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;  freq            1    wreg     unsigned char 
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;  freq            1    2[COMMON] unsigned char 
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      void 
  1862 ;; Registers used:
  1863 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1869 ;;      Params:         0       0       0       0       0
  1870 ;;      Locals:         1       0       0       0       0
  1871 ;;      Temps:          2       0       0       0       0
  1872 ;;      Totals:         3       0       0       0       0
  1873 ;;Total ram usage:        3 bytes
  1874 ;; Hardware stack levels used: 1
  1875 ;; This function calls:
  1876 ;;		Nothing
  1877 ;; This function is called by:
  1878 ;;		_setup
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           
  1883                           ;psect for function _osc_config
  1884  0003                     _osc_config:
  1885                           
  1886                           ;incstack = 0
  1887                           ; Regs used in _osc_config: [wreg-fsr0h+status,2+status,0]
  1888                           ;osc_config@freq stored from wreg
  1889  0003  00F2               	movwf	osc_config@freq
  1890  0004                     l1642:
  1891                           
  1892                           ;Osc_config.c: 17: void osc_config(uint8_t freq);Osc_config.c: 18: {;Osc_config.c: 19:  
      +                             switch(freq)
  1893  0004  2823               	goto	l1662
  1894  0005                     l1644:
  1895                           
  1896                           ;Osc_config.c: 22:             OSCCONbits.IRCF=0b100;
  1897  0005  1683               	bsf	3,5	;RP0=1, select bank1
  1898  0006  1303               	bcf	3,6	;RP1=0, select bank1
  1899  0007  080F               	movf	15,w	;volatile
  1900  0008  398F               	andlw	-113
  1901  0009  3840               	iorlw	64
  1902  000A  008F               	movwf	15	;volatile
  1903  000B                     l1646:
  1904                           
  1905                           ;Osc_config.c: 23:             OSCCONbits.SCS=1;
  1906  000B  140F               	bsf	15,0	;volatile
  1907                           
  1908                           ;Osc_config.c: 24:             break;
  1909  000C  2839               	goto	l207
  1910  000D                     l1648:
  1911                           
  1912                           ;Osc_config.c: 27:             OSCCONbits.IRCF=0b101;
  1913  000D  1683               	bsf	3,5	;RP0=1, select bank1
  1914  000E  1303               	bcf	3,6	;RP1=0, select bank1
  1915  000F  080F               	movf	15,w	;volatile
  1916  0010  398F               	andlw	-113
  1917  0011  3850               	iorlw	80
  1918  0012  008F               	movwf	15	;volatile
  1919  0013                     l1650:
  1920                           
  1921                           ;Osc_config.c: 28:             OSCCONbits.SCS=1;
  1922  0013  140F               	bsf	15,0	;volatile
  1923                           
  1924                           ;Osc_config.c: 29:             break;
  1925  0014  2839               	goto	l207
  1926  0015                     l1652:
  1927                           
  1928                           ;Osc_config.c: 32:             OSCCONbits.IRCF=0b110;
  1929  0015  1683               	bsf	3,5	;RP0=1, select bank1
  1930  0016  1303               	bcf	3,6	;RP1=0, select bank1
  1931  0017  080F               	movf	15,w	;volatile
  1932  0018  398F               	andlw	-113
  1933  0019  3860               	iorlw	96
  1934  001A  008F               	movwf	15	;volatile
  1935  001B                     l1654:
  1936                           
  1937                           ;Osc_config.c: 33:             OSCCONbits.SCS=1;
  1938  001B  140F               	bsf	15,0	;volatile
  1939                           
  1940                           ;Osc_config.c: 34:             break;
  1941  001C  2839               	goto	l207
  1942  001D                     l1656:
  1943                           
  1944                           ;Osc_config.c: 37:             OSCCONbits.IRCF=0b111;
  1945  001D  3070               	movlw	112
  1946  001E  1683               	bsf	3,5	;RP0=1, select bank1
  1947  001F  1303               	bcf	3,6	;RP1=0, select bank1
  1948  0020  048F               	iorwf	15,f	;volatile
  1949  0021                     l1658:
  1950                           
  1951                           ;Osc_config.c: 38:             OSCCONbits.SCS=1;
  1952  0021  140F               	bsf	15,0	;volatile
  1953                           
  1954                           ;Osc_config.c: 39:             break;
  1955  0022  2839               	goto	l207
  1956  0023                     l1662:
  1957  0023  0872               	movf	osc_config@freq,w
  1958  0024  00F0               	movwf	??_osc_config
  1959  0025  01F1               	clrf	??_osc_config+1
  1960                           
  1961                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1962                           ; Switch size 1, requested type "simple"
  1963                           ; Number of cases is 1, Range of values is 0 to 0
  1964                           ; switch strategies available:
  1965                           ; Name         Instructions Cycles
  1966                           ; simple_byte            4     3 (average)
  1967                           ; direct_byte           11     8 (fixed)
  1968                           ; jumptable            260     6 (fixed)
  1969                           ;	Chosen strategy is simple_byte
  1970  0026  0871               	movf	??_osc_config+1,w
  1971  0027  3A00               	xorlw	0	; case 0
  1972  0028  1903               	skipnz
  1973  0029  282B               	goto	l2276
  1974  002A  2839               	goto	l207
  1975  002B                     l2276:
  1976                           
  1977                           ; Switch size 1, requested type "simple"
  1978                           ; Number of cases is 4, Range of values is 1 to 8
  1979                           ; switch strategies available:
  1980                           ; Name         Instructions Cycles
  1981                           ; simple_byte           13     7 (average)
  1982                           ; direct_byte           35    11 (fixed)
  1983                           ; jumptable            263     9 (fixed)
  1984                           ;	Chosen strategy is simple_byte
  1985  002B  0870               	movf	??_osc_config,w
  1986  002C  3A01               	xorlw	1	; case 1
  1987  002D  1903               	skipnz
  1988  002E  2805               	goto	l1644
  1989  002F  3A03               	xorlw	3	; case 2
  1990  0030  1903               	skipnz
  1991  0031  280D               	goto	l1648
  1992  0032  3A06               	xorlw	6	; case 4
  1993  0033  1903               	skipnz
  1994  0034  2815               	goto	l1652
  1995  0035  3A0C               	xorlw	12	; case 8
  1996  0036  1903               	skipnz
  1997  0037  281D               	goto	l1656
  1998  0038  2839               	goto	l207
  1999  0039                     l207:
  2000  0039  0008               	return
  2001  003A                     __end_of_osc_config:
  2002                           
  2003                           	psect	text3
  2004  0F31                     __ptext3:	
  2005 ;; *************** function _I2C_Master_Write *****************
  2006 ;; Defined at:
  2007 ;;		line 65 in file "I2C.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;  d               2    0[COMMON] unsigned int 
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;		None
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      void 
  2014 ;; Registers used:
  2015 ;;		wreg, status,2, status,0, pclath, cstack
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2021 ;;      Params:         2       0       0       0       0
  2022 ;;      Locals:         0       0       0       0       0
  2023 ;;      Temps:          0       0       0       0       0
  2024 ;;      Totals:         2       0       0       0       0
  2025 ;;Total ram usage:        2 bytes
  2026 ;; Hardware stack levels used: 1
  2027 ;; Hardware stack levels required when called: 1
  2028 ;; This function calls:
  2029 ;;		_I2C_Master_Wait
  2030 ;; This function is called by:
  2031 ;;		_main
  2032 ;;		_setup
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036                           
  2037                           ;psect for function _I2C_Master_Write
  2038  0F31                     _I2C_Master_Write:
  2039  0F31                     l1622:	
  2040                           ;incstack = 0
  2041                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2042                           
  2043                           
  2044                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2045  0F31  120A  158A  273B  120A  158A  	fcall	_I2C_Master_Wait
  2046  0F36                     l1624:
  2047                           
  2048                           ;I2C.c: 68:     SSPBUF = d;
  2049  0F36  0870               	movf	I2C_Master_Write@d,w
  2050  0F37  1283               	bcf	3,5	;RP0=0, select bank0
  2051  0F38  1303               	bcf	3,6	;RP1=0, select bank0
  2052  0F39  0093               	movwf	19	;volatile
  2053  0F3A                     l47:
  2054  0F3A  0008               	return
  2055  0F3B                     __end_of_I2C_Master_Write:
  2056                           
  2057                           	psect	text4
  2058  0F28                     __ptext4:	
  2059 ;; *************** function _I2C_Master_Stop *****************
  2060 ;; Defined at:
  2061 ;;		line 55 in file "I2C.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;		None
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;		None
  2066 ;; Return value:  Size  Location     Type
  2067 ;;                  1    wreg      void 
  2068 ;; Registers used:
  2069 ;;		wreg, status,2, status,0, pclath, cstack
  2070 ;; Tracked objects:
  2071 ;;		On entry : 0/0
  2072 ;;		On exit  : 0/0
  2073 ;;		Unchanged: 0/0
  2074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2075 ;;      Params:         0       0       0       0       0
  2076 ;;      Locals:         0       0       0       0       0
  2077 ;;      Temps:          0       0       0       0       0
  2078 ;;      Totals:         0       0       0       0       0
  2079 ;;Total ram usage:        0 bytes
  2080 ;; Hardware stack levels used: 1
  2081 ;; Hardware stack levels required when called: 1
  2082 ;; This function calls:
  2083 ;;		_I2C_Master_Wait
  2084 ;; This function is called by:
  2085 ;;		_main
  2086 ;;		_setup
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           
  2091                           ;psect for function _I2C_Master_Stop
  2092  0F28                     _I2C_Master_Stop:
  2093  0F28                     l1618:	
  2094                           ;incstack = 0
  2095                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2096                           
  2097                           
  2098                           ;I2C.c: 57:     I2C_Master_Wait();
  2099  0F28  120A  158A  273B  120A  158A  	fcall	_I2C_Master_Wait
  2100  0F2D                     l1620:
  2101                           
  2102                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2103  0F2D  1683               	bsf	3,5	;RP0=1, select bank1
  2104  0F2E  1303               	bcf	3,6	;RP1=0, select bank1
  2105  0F2F  1511               	bsf	17,2	;volatile
  2106  0F30                     l44:
  2107  0F30  0008               	return
  2108  0F31                     __end_of_I2C_Master_Stop:
  2109                           
  2110                           	psect	text5
  2111  0F1F                     __ptext5:	
  2112 ;; *************** function _I2C_Master_Start *****************
  2113 ;; Defined at:
  2114 ;;		line 39 in file "I2C.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;		None
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;		None
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  1    wreg      void 
  2121 ;; Registers used:
  2122 ;;		wreg, status,2, status,0, pclath, cstack
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2128 ;;      Params:         0       0       0       0       0
  2129 ;;      Locals:         0       0       0       0       0
  2130 ;;      Temps:          0       0       0       0       0
  2131 ;;      Totals:         0       0       0       0       0
  2132 ;;Total ram usage:        0 bytes
  2133 ;; Hardware stack levels used: 1
  2134 ;; Hardware stack levels required when called: 1
  2135 ;; This function calls:
  2136 ;;		_I2C_Master_Wait
  2137 ;; This function is called by:
  2138 ;;		_main
  2139 ;;		_setup
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           
  2144                           ;psect for function _I2C_Master_Start
  2145  0F1F                     _I2C_Master_Start:
  2146  0F1F                     l1614:	
  2147                           ;incstack = 0
  2148                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2149                           
  2150                           
  2151                           ;I2C.c: 41:     I2C_Master_Wait();
  2152  0F1F  120A  158A  273B  120A  158A  	fcall	_I2C_Master_Wait
  2153  0F24                     l1616:
  2154                           
  2155                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2156  0F24  1683               	bsf	3,5	;RP0=1, select bank1
  2157  0F25  1303               	bcf	3,6	;RP1=0, select bank1
  2158  0F26  1411               	bsf	17,0	;volatile
  2159  0F27                     l38:
  2160  0F27  0008               	return
  2161  0F28                     __end_of_I2C_Master_Start:
  2162                           
  2163                           	psect	text6
  2164  0FD2                     __ptext6:	
  2165 ;; *************** function _I2C_Master_Read *****************
  2166 ;; Defined at:
  2167 ;;		line 74 in file "I2C.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;  a               2    0[COMMON] unsigned short 
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;  temp            2    4[COMMON] unsigned short 
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  2    0[COMMON] unsigned short 
  2174 ;; Registers used:
  2175 ;;		wreg, status,2, status,0, pclath, cstack
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2181 ;;      Params:         2       0       0       0       0
  2182 ;;      Locals:         2       0       0       0       0
  2183 ;;      Temps:          2       0       0       0       0
  2184 ;;      Totals:         6       0       0       0       0
  2185 ;;Total ram usage:        6 bytes
  2186 ;; Hardware stack levels used: 1
  2187 ;; Hardware stack levels required when called: 1
  2188 ;; This function calls:
  2189 ;;		_I2C_Master_Wait
  2190 ;; This function is called by:
  2191 ;;		_main
  2192 ;;		_setup
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           
  2197                           ;psect for function _I2C_Master_Read
  2198  0FD2                     _I2C_Master_Read:
  2199  0FD2                     l1626:	
  2200                           ;incstack = 0
  2201                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2202                           
  2203                           
  2204                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2205  0FD2  120A  158A  273B  120A  158A  	fcall	_I2C_Master_Wait
  2206  0FD7                     l1628:
  2207                           
  2208                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2209  0FD7  1683               	bsf	3,5	;RP0=1, select bank1
  2210  0FD8  1303               	bcf	3,6	;RP1=0, select bank1
  2211  0FD9  1591               	bsf	17,3	;volatile
  2212                           
  2213                           ;I2C.c: 79:     I2C_Master_Wait();
  2214  0FDA  120A  158A  273B  120A  158A  	fcall	_I2C_Master_Wait
  2215  0FDF                     l1630:
  2216                           
  2217                           ;I2C.c: 80:     temp = SSPBUF;
  2218  0FDF  1283               	bcf	3,5	;RP0=0, select bank0
  2219  0FE0  1303               	bcf	3,6	;RP1=0, select bank0
  2220  0FE1  0813               	movf	19,w	;volatile
  2221  0FE2  00F2               	movwf	??_I2C_Master_Read
  2222  0FE3  01F3               	clrf	??_I2C_Master_Read+1
  2223  0FE4  0872               	movf	??_I2C_Master_Read,w
  2224  0FE5  00F4               	movwf	I2C_Master_Read@temp
  2225  0FE6  0873               	movf	??_I2C_Master_Read+1,w
  2226  0FE7  00F5               	movwf	I2C_Master_Read@temp+1
  2227  0FE8                     l1632:
  2228                           
  2229                           ;I2C.c: 81:     I2C_Master_Wait();
  2230  0FE8  120A  158A  273B  120A  158A  	fcall	_I2C_Master_Wait
  2231  0FED                     l1634:
  2232                           
  2233                           ;I2C.c: 82:     if(a == 1){
  2234  0FED  0370               	decf	I2C_Master_Read@a,w
  2235  0FEE  0471               	iorwf	I2C_Master_Read@a+1,w
  2236  0FEF  1D03               	btfss	3,2
  2237  0FF0  2FF2               	goto	u661
  2238  0FF1  2FF3               	goto	u660
  2239  0FF2                     u661:
  2240  0FF2  2FF7               	goto	l50
  2241  0FF3                     u660:
  2242  0FF3                     l1636:
  2243                           
  2244                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2245  0FF3  1683               	bsf	3,5	;RP0=1, select bank1
  2246  0FF4  1303               	bcf	3,6	;RP1=0, select bank1
  2247  0FF5  1291               	bcf	17,5	;volatile
  2248                           
  2249                           ;I2C.c: 84:     }else{
  2250  0FF6  2FFA               	goto	l51
  2251  0FF7                     l50:
  2252                           
  2253                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2254  0FF7  1683               	bsf	3,5	;RP0=1, select bank1
  2255  0FF8  1303               	bcf	3,6	;RP1=0, select bank1
  2256  0FF9  1691               	bsf	17,5	;volatile
  2257  0FFA                     l51:	
  2258                           ;I2C.c: 86:     }
  2259                           
  2260                           
  2261                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2262  0FFA  1611               	bsf	17,4	;volatile
  2263  0FFB                     l1638:
  2264                           
  2265                           ;I2C.c: 88:     return temp;
  2266  0FFB  0875               	movf	I2C_Master_Read@temp+1,w
  2267  0FFC  00F1               	movwf	?_I2C_Master_Read+1
  2268  0FFD  0874               	movf	I2C_Master_Read@temp,w
  2269  0FFE  00F0               	movwf	?_I2C_Master_Read
  2270  0FFF                     l52:
  2271  0FFF  0008               	return
  2272  1000                     __end_of_I2C_Master_Read:
  2273                           
  2274                           	psect	text7
  2275  0F3B                     __ptext7:	
  2276 ;; *************** function _I2C_Master_Wait *****************
  2277 ;; Defined at:
  2278 ;;		line 32 in file "I2C.c"
  2279 ;; Parameters:    Size  Location     Type
  2280 ;;		None
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;		None
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  1    wreg      void 
  2285 ;; Registers used:
  2286 ;;		wreg, status,2
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2292 ;;      Params:         0       0       0       0       0
  2293 ;;      Locals:         0       0       0       0       0
  2294 ;;      Temps:          0       0       0       0       0
  2295 ;;      Totals:         0       0       0       0       0
  2296 ;;Total ram usage:        0 bytes
  2297 ;; Hardware stack levels used: 1
  2298 ;; This function calls:
  2299 ;;		Nothing
  2300 ;; This function is called by:
  2301 ;;		_I2C_Master_Start
  2302 ;;		_I2C_Master_Stop
  2303 ;;		_I2C_Master_Write
  2304 ;;		_I2C_Master_Read
  2305 ;;		_I2C_Master_RepeatedStart
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           
  2310                           ;psect for function _I2C_Master_Wait
  2311  0F3B                     _I2C_Master_Wait:
  2312  0F3B                     l1572:	
  2313                           ;incstack = 0
  2314                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2315                           
  2316  0F3B                     l32:	
  2317                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2318                           
  2319  0F3B  1683               	bsf	3,5	;RP0=1, select bank1
  2320  0F3C  1303               	bcf	3,6	;RP1=0, select bank1
  2321  0F3D  1914               	btfsc	20,2	;volatile
  2322  0F3E  2F40               	goto	u561
  2323  0F3F  2F41               	goto	u560
  2324  0F40                     u561:
  2325  0F40  2F3B               	goto	l32
  2326  0F41                     u560:
  2327  0F41                     l1574:
  2328  0F41  0811               	movf	17,w	;volatile
  2329  0F42  391F               	andlw	31
  2330  0F43  1D03               	btfss	3,2
  2331  0F44  2F46               	goto	u571
  2332  0F45  2F47               	goto	u570
  2333  0F46                     u571:
  2334  0F46  2F3B               	goto	l32
  2335  0F47                     u570:
  2336  0F47                     l35:
  2337  0F47  0008               	return
  2338  0F48                     __end_of_I2C_Master_Wait:
  2339                           
  2340                           	psect	text8
  2341  003A                     __ptext8:	
  2342 ;; *************** function _I2C_Master_Init *****************
  2343 ;; Defined at:
  2344 ;;		line 16 in file "I2C.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;  c               4    0[BANK0 ] const unsigned long 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;		None
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  1    wreg      void 
  2351 ;; Registers used:
  2352 ;;		wreg, status,2, status,0, pclath, cstack
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2358 ;;      Params:         0       4       0       0       0
  2359 ;;      Locals:         0       0       0       0       0
  2360 ;;      Temps:          0       4       0       0       0
  2361 ;;      Totals:         0       8       0       0       0
  2362 ;;Total ram usage:        8 bytes
  2363 ;; Hardware stack levels used: 1
  2364 ;; Hardware stack levels required when called: 1
  2365 ;; This function calls:
  2366 ;;		___lldiv
  2367 ;; This function is called by:
  2368 ;;		_setup
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           
  2373                           ;psect for function _I2C_Master_Init
  2374  003A                     _I2C_Master_Init:
  2375  003A                     l1602:	
  2376                           ;incstack = 0
  2377                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2378                           
  2379                           
  2380                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2381  003A  3028               	movlw	40
  2382  003B  1283               	bcf	3,5	;RP0=0, select bank0
  2383  003C  1303               	bcf	3,6	;RP1=0, select bank0
  2384  003D  0094               	movwf	20	;volatile
  2385  003E                     l1604:
  2386                           
  2387                           ;I2C.c: 19:     SSPCON2 = 0;
  2388  003E  1683               	bsf	3,5	;RP0=1, select bank1
  2389  003F  1303               	bcf	3,6	;RP1=0, select bank1
  2390  0040  0191               	clrf	17	;volatile
  2391  0041                     l1606:
  2392                           
  2393                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2394  0041  1283               	bcf	3,5	;RP0=0, select bank0
  2395  0042  1303               	bcf	3,6	;RP1=0, select bank0
  2396  0043  0820               	movf	I2C_Master_Init@c,w
  2397  0044  00A4               	movwf	??_I2C_Master_Init
  2398  0045  0821               	movf	I2C_Master_Init@c+1,w
  2399  0046  00A5               	movwf	??_I2C_Master_Init+1
  2400  0047  0822               	movf	I2C_Master_Init@c+2,w
  2401  0048  00A6               	movwf	??_I2C_Master_Init+2
  2402  0049  0823               	movf	I2C_Master_Init@c+3,w
  2403  004A  00A7               	movwf	??_I2C_Master_Init+3
  2404  004B  3002               	movlw	2
  2405  004C                     u655:
  2406  004C  1003               	clrc
  2407  004D  0DA4               	rlf	??_I2C_Master_Init,f
  2408  004E  0DA5               	rlf	??_I2C_Master_Init+1,f
  2409  004F  0DA6               	rlf	??_I2C_Master_Init+2,f
  2410  0050  0DA7               	rlf	??_I2C_Master_Init+3,f
  2411  0051                     u650:
  2412  0051  3EFF               	addlw	-1
  2413  0052  1D03               	skipz
  2414  0053  284C               	goto	u655
  2415  0054  0827               	movf	??_I2C_Master_Init+3,w
  2416  0055  00F3               	movwf	___lldiv@divisor+3
  2417  0056  0826               	movf	??_I2C_Master_Init+2,w
  2418  0057  00F2               	movwf	___lldiv@divisor+2
  2419  0058  0825               	movf	??_I2C_Master_Init+1,w
  2420  0059  00F1               	movwf	___lldiv@divisor+1
  2421  005A  0824               	movf	??_I2C_Master_Init,w
  2422  005B  00F0               	movwf	___lldiv@divisor
  2423  005C  3000               	movlw	0
  2424  005D  00F7               	movwf	___lldiv@dividend+3
  2425  005E  307A               	movlw	122
  2426  005F  00F6               	movwf	___lldiv@dividend+2
  2427  0060  3012               	movlw	18
  2428  0061  00F5               	movwf	___lldiv@dividend+1
  2429  0062  3000               	movlw	0
  2430  0063  00F4               	movwf	___lldiv@dividend
  2431  0064  120A  118A  210C  120A  118A  	fcall	___lldiv
  2432  0069  0870               	movf	?___lldiv,w
  2433  006A  3EFF               	addlw	255
  2434  006B  1683               	bsf	3,5	;RP0=1, select bank1
  2435  006C  1303               	bcf	3,6	;RP1=0, select bank1
  2436  006D  0093               	movwf	19	;volatile
  2437  006E                     l1608:
  2438                           
  2439                           ;I2C.c: 21:     SSPSTAT = 0;
  2440  006E  0194               	clrf	20	;volatile
  2441  006F                     l1610:
  2442                           
  2443                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2444  006F  1587               	bsf	7,3	;volatile
  2445  0070                     l1612:
  2446                           
  2447                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2448  0070  1607               	bsf	7,4	;volatile
  2449  0071                     l29:
  2450  0071  0008               	return
  2451  0072                     __end_of_I2C_Master_Init:
  2452                           
  2453                           	psect	text9
  2454  010C                     __ptext9:	
  2455 ;; *************** function ___lldiv *****************
  2456 ;; Defined at:
  2457 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;  divisor         4    0[COMMON] unsigned long 
  2460 ;;  dividend        4    4[COMMON] unsigned long 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  quotient        4    9[COMMON] unsigned long 
  2463 ;;  counter         1   13[COMMON] unsigned char 
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  4    0[COMMON] unsigned long 
  2466 ;; Registers used:
  2467 ;;		wreg, status,2, status,0
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2473 ;;      Params:         8       0       0       0       0
  2474 ;;      Locals:         5       0       0       0       0
  2475 ;;      Temps:          1       0       0       0       0
  2476 ;;      Totals:        14       0       0       0       0
  2477 ;;Total ram usage:       14 bytes
  2478 ;; Hardware stack levels used: 1
  2479 ;; This function calls:
  2480 ;;		Nothing
  2481 ;; This function is called by:
  2482 ;;		_I2C_Master_Init
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           
  2487                           ;psect for function ___lldiv
  2488  010C                     ___lldiv:
  2489  010C                     l1578:	
  2490                           ;incstack = 0
  2491                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2492                           
  2493  010C  3000               	movlw	0
  2494  010D  00FC               	movwf	___lldiv@quotient+3
  2495  010E  3000               	movlw	0
  2496  010F  00FB               	movwf	___lldiv@quotient+2
  2497  0110  3000               	movlw	0
  2498  0111  00FA               	movwf	___lldiv@quotient+1
  2499  0112  3000               	movlw	0
  2500  0113  00F9               	movwf	___lldiv@quotient
  2501  0114  0873               	movf	___lldiv@divisor+3,w
  2502  0115  0472               	iorwf	___lldiv@divisor+2,w
  2503  0116  0471               	iorwf	___lldiv@divisor+1,w
  2504  0117  0470               	iorwf	___lldiv@divisor,w
  2505  0118  1903               	skipnz
  2506  0119  291B               	goto	u581
  2507  011A  291C               	goto	u580
  2508  011B                     u581:
  2509  011B  2969               	goto	l1598
  2510  011C                     u580:
  2511  011C                     l1580:
  2512  011C  01FD               	clrf	___lldiv@counter
  2513  011D  0AFD               	incf	___lldiv@counter,f
  2514  011E  292C               	goto	l1584
  2515  011F                     l1582:
  2516  011F  3001               	movlw	1
  2517  0120  00F8               	movwf	??___lldiv
  2518  0121                     u595:
  2519  0121  1003               	clrc
  2520  0122  0DF0               	rlf	___lldiv@divisor,f
  2521  0123  0DF1               	rlf	___lldiv@divisor+1,f
  2522  0124  0DF2               	rlf	___lldiv@divisor+2,f
  2523  0125  0DF3               	rlf	___lldiv@divisor+3,f
  2524  0126  0BF8               	decfsz	??___lldiv,f
  2525  0127  2921               	goto	u595
  2526  0128  3001               	movlw	1
  2527  0129  00F8               	movwf	??___lldiv
  2528  012A  0878               	movf	??___lldiv,w
  2529  012B  07FD               	addwf	___lldiv@counter,f
  2530  012C                     l1584:
  2531  012C  1FF3               	btfss	___lldiv@divisor+3,7
  2532  012D  292F               	goto	u601
  2533  012E  2930               	goto	u600
  2534  012F                     u601:
  2535  012F  291F               	goto	l1582
  2536  0130                     u600:
  2537  0130                     l1586:
  2538  0130  3001               	movlw	1
  2539  0131  00F8               	movwf	??___lldiv
  2540  0132                     u615:
  2541  0132  1003               	clrc
  2542  0133  0DF9               	rlf	___lldiv@quotient,f
  2543  0134  0DFA               	rlf	___lldiv@quotient+1,f
  2544  0135  0DFB               	rlf	___lldiv@quotient+2,f
  2545  0136  0DFC               	rlf	___lldiv@quotient+3,f
  2546  0137  0BF8               	decfsz	??___lldiv,f
  2547  0138  2932               	goto	u615
  2548  0139                     l1588:
  2549  0139  0873               	movf	___lldiv@divisor+3,w
  2550  013A  0277               	subwf	___lldiv@dividend+3,w
  2551  013B  1D03               	skipz
  2552  013C  2947               	goto	u625
  2553  013D  0872               	movf	___lldiv@divisor+2,w
  2554  013E  0276               	subwf	___lldiv@dividend+2,w
  2555  013F  1D03               	skipz
  2556  0140  2947               	goto	u625
  2557  0141  0871               	movf	___lldiv@divisor+1,w
  2558  0142  0275               	subwf	___lldiv@dividend+1,w
  2559  0143  1D03               	skipz
  2560  0144  2947               	goto	u625
  2561  0145  0870               	movf	___lldiv@divisor,w
  2562  0146  0274               	subwf	___lldiv@dividend,w
  2563  0147                     u625:
  2564  0147  1C03               	skipc
  2565  0148  294A               	goto	u621
  2566  0149  294B               	goto	u620
  2567  014A                     u621:
  2568  014A  295A               	goto	l1594
  2569  014B                     u620:
  2570  014B                     l1590:
  2571  014B  0870               	movf	___lldiv@divisor,w
  2572  014C  02F4               	subwf	___lldiv@dividend,f
  2573  014D  0871               	movf	___lldiv@divisor+1,w
  2574  014E  1C03               	skipc
  2575  014F  0F71               	incfsz	___lldiv@divisor+1,w
  2576  0150  02F5               	subwf	___lldiv@dividend+1,f
  2577  0151  0872               	movf	___lldiv@divisor+2,w
  2578  0152  1C03               	skipc
  2579  0153  0F72               	incfsz	___lldiv@divisor+2,w
  2580  0154  02F6               	subwf	___lldiv@dividend+2,f
  2581  0155  0873               	movf	___lldiv@divisor+3,w
  2582  0156  1C03               	skipc
  2583  0157  0F73               	incfsz	___lldiv@divisor+3,w
  2584  0158  02F7               	subwf	___lldiv@dividend+3,f
  2585  0159                     l1592:
  2586  0159  1479               	bsf	___lldiv@quotient,0
  2587  015A                     l1594:
  2588  015A  3001               	movlw	1
  2589  015B                     u635:
  2590  015B  1003               	clrc
  2591  015C  0CF3               	rrf	___lldiv@divisor+3,f
  2592  015D  0CF2               	rrf	___lldiv@divisor+2,f
  2593  015E  0CF1               	rrf	___lldiv@divisor+1,f
  2594  015F  0CF0               	rrf	___lldiv@divisor,f
  2595  0160  3EFF               	addlw	-1
  2596  0161  1D03               	skipz
  2597  0162  295B               	goto	u635
  2598  0163                     l1596:
  2599  0163  3001               	movlw	1
  2600  0164  02FD               	subwf	___lldiv@counter,f
  2601  0165  1D03               	btfss	3,2
  2602  0166  2968               	goto	u641
  2603  0167  2969               	goto	u640
  2604  0168                     u641:
  2605  0168  2930               	goto	l1586
  2606  0169                     u640:
  2607  0169                     l1598:
  2608  0169  087C               	movf	___lldiv@quotient+3,w
  2609  016A  00F3               	movwf	?___lldiv+3
  2610  016B  087B               	movf	___lldiv@quotient+2,w
  2611  016C  00F2               	movwf	?___lldiv+2
  2612  016D  087A               	movf	___lldiv@quotient+1,w
  2613  016E  00F1               	movwf	?___lldiv+1
  2614  016F  0879               	movf	___lldiv@quotient,w
  2615  0170  00F0               	movwf	?___lldiv
  2616  0171                     l384:
  2617  0171  0008               	return
  2618  0172                     __end_of___lldiv:
  2619                           
  2620                           	psect	text10
  2621  01D9                     __ptext10:	
  2622 ;; *************** function _conver1 *****************
  2623 ;; Defined at:
  2624 ;;		line 257 in file "main.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;		None
  2627 ;; Auto vars:     Size  Location     Type
  2628 ;;  temporal       16    5[BANK0 ] unsigned char [16]
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  1    wreg      PTR const unsigned char 
  2631 ;; Registers used:
  2632 ;;		wreg, status,2, status,0, pclath, cstack
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2638 ;;      Params:         0       0       0       0       0
  2639 ;;      Locals:         0      16       0       0       0
  2640 ;;      Temps:          0       3       0       0       0
  2641 ;;      Totals:         0      19       0       0       0
  2642 ;;Total ram usage:       19 bytes
  2643 ;; Hardware stack levels used: 1
  2644 ;; Hardware stack levels required when called: 1
  2645 ;; This function calls:
  2646 ;;		___awdiv
  2647 ;;		___awmod
  2648 ;; This function is called by:
  2649 ;;		_main
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652                           
  2653                           
  2654                           ;psect for function _conver1
  2655  01D9                     _conver1:
  2656  01D9                     l1958:	
  2657                           ;incstack = 0
  2658                           ; Regs used in _conver1: [wreg+status,2+status,0+pclath+cstack]
  2659                           
  2660                           
  2661                           ;main.c: 259:     char temporal[16];;main.c: 260:     temporal[0] = C1;
  2662  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  2663  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  2664  01DB  084B               	movf	_C1,w
  2665  01DC  00A2               	movwf	??_conver1
  2666  01DD  0822               	movf	??_conver1,w
  2667  01DE  00A5               	movwf	conver1@temporal
  2668                           
  2669                           ;main.c: 261:     temporal[1] = C2;
  2670  01DF  084A               	movf	_C2,w
  2671  01E0  00A2               	movwf	??_conver1
  2672  01E1  0822               	movf	??_conver1,w
  2673  01E2  00A6               	movwf	conver1@temporal+1
  2674                           
  2675                           ;main.c: 262:     temporal[2] = C3;
  2676  01E3  0849               	movf	_C3,w
  2677  01E4  00A2               	movwf	??_conver1
  2678  01E5  0822               	movf	??_conver1,w
  2679  01E6  00A7               	movwf	conver1@temporal+2
  2680                           
  2681                           ;main.c: 263:     temporal[3] = 0x2E;
  2682  01E7  302E               	movlw	46
  2683  01E8  00A2               	movwf	??_conver1
  2684  01E9  0822               	movf	??_conver1,w
  2685  01EA  00A8               	movwf	conver1@temporal+3
  2686                           
  2687                           ;main.c: 264:     temporal[4] = 0x20;
  2688  01EB  3020               	movlw	32
  2689  01EC  00A2               	movwf	??_conver1
  2690  01ED  0822               	movf	??_conver1,w
  2691  01EE  00A9               	movwf	conver1@temporal+4
  2692                           
  2693                           ;main.c: 265:     temporal[5] = DH;
  2694  01EF  0847               	movf	_DH,w
  2695  01F0  00A2               	movwf	??_conver1
  2696  01F1  0822               	movf	??_conver1,w
  2697  01F2  00AA               	movwf	conver1@temporal+5
  2698                           
  2699                           ;main.c: 266:     temporal[6] = UH;
  2700  01F3  0848               	movf	_UH,w
  2701  01F4  00A2               	movwf	??_conver1
  2702  01F5  0822               	movf	??_conver1,w
  2703  01F6  00AB               	movwf	conver1@temporal+6
  2704                           
  2705                           ;main.c: 267:     temporal[7] = 0x3A;
  2706  01F7  303A               	movlw	58
  2707  01F8  00A2               	movwf	??_conver1
  2708  01F9  0822               	movf	??_conver1,w
  2709  01FA  00AC               	movwf	conver1@temporal+7
  2710                           
  2711                           ;main.c: 268:     temporal[8] = DM;
  2712  01FB  0845               	movf	_DM,w
  2713  01FC  00A2               	movwf	??_conver1
  2714  01FD  0822               	movf	??_conver1,w
  2715  01FE  00AD               	movwf	conver1@temporal+8
  2716                           
  2717                           ;main.c: 269:     temporal[9] = UM;
  2718  01FF  0846               	movf	_UM,w
  2719  0200  00A2               	movwf	??_conver1
  2720  0201  0822               	movf	??_conver1,w
  2721  0202  00AE               	movwf	conver1@temporal+9
  2722                           
  2723                           ;main.c: 270:     temporal[10] = 0x20;
  2724  0203  3020               	movlw	32
  2725  0204  00A2               	movwf	??_conver1
  2726  0205  0822               	movf	??_conver1,w
  2727  0206  00AF               	movwf	conver1@temporal+10
  2728  0207                     l1960:
  2729                           
  2730                           ;main.c: 271:     temporal[11] = ((temperatura/10)%10+0x30);
  2731  0207  300A               	movlw	10
  2732  0208  00F9               	movwf	___awmod@divisor
  2733  0209  3000               	movlw	0
  2734  020A  00FA               	movwf	___awmod@divisor+1
  2735  020B  300A               	movlw	10
  2736  020C  00F0               	movwf	___awdiv@divisor
  2737  020D  3000               	movlw	0
  2738  020E  00F1               	movwf	___awdiv@divisor+1
  2739  020F  0842               	movf	_temperatura,w
  2740  0210  00A2               	movwf	??_conver1
  2741  0211  01A3               	clrf	??_conver1+1
  2742  0212  0822               	movf	??_conver1,w
  2743  0213  00F2               	movwf	___awdiv@dividend
  2744  0214  0823               	movf	??_conver1+1,w
  2745  0215  00F3               	movwf	___awdiv@dividend+1
  2746  0216  120A  118A  2172  120A  118A  	fcall	___awdiv
  2747  021B  0871               	movf	?___awdiv+1,w
  2748  021C  00FC               	movwf	___awmod@dividend+1
  2749  021D  0870               	movf	?___awdiv,w
  2750  021E  00FB               	movwf	___awmod@dividend
  2751  021F  120A  118A  20B1  120A  118A  	fcall	___awmod
  2752  0224  0879               	movf	?___awmod,w
  2753  0225  3E30               	addlw	48
  2754  0226  1283               	bcf	3,5	;RP0=0, select bank0
  2755  0227  1303               	bcf	3,6	;RP1=0, select bank0
  2756  0228  00A4               	movwf	??_conver1+2
  2757  0229  0824               	movf	??_conver1+2,w
  2758  022A  00B0               	movwf	conver1@temporal+11
  2759  022B                     l1962:
  2760                           
  2761                           ;main.c: 272:     temporal[12] = ((temperatura%10)+0x30);
  2762  022B  300A               	movlw	10
  2763  022C  00F9               	movwf	___awmod@divisor
  2764  022D  3000               	movlw	0
  2765  022E  00FA               	movwf	___awmod@divisor+1
  2766  022F  0842               	movf	_temperatura,w
  2767  0230  00A2               	movwf	??_conver1
  2768  0231  01A3               	clrf	??_conver1+1
  2769  0232  0822               	movf	??_conver1,w
  2770  0233  00FB               	movwf	___awmod@dividend
  2771  0234  0823               	movf	??_conver1+1,w
  2772  0235  00FC               	movwf	___awmod@dividend+1
  2773  0236  120A  118A  20B1  120A  118A  	fcall	___awmod
  2774  023B  0879               	movf	?___awmod,w
  2775  023C  3E30               	addlw	48
  2776  023D  1283               	bcf	3,5	;RP0=0, select bank0
  2777  023E  1303               	bcf	3,6	;RP1=0, select bank0
  2778  023F  00A4               	movwf	??_conver1+2
  2779  0240  0824               	movf	??_conver1+2,w
  2780  0241  00B1               	movwf	conver1@temporal+12
  2781                           
  2782                           ;main.c: 273:     temporal[13] = 0xDF;
  2783  0242  30DF               	movlw	223
  2784  0243  00A2               	movwf	??_conver1
  2785  0244  0822               	movf	??_conver1,w
  2786  0245  00B2               	movwf	conver1@temporal+13
  2787                           
  2788                           ;main.c: 274:     temporal[14] = 0x43;
  2789  0246  3043               	movlw	67
  2790  0247  00A2               	movwf	??_conver1
  2791  0248  0822               	movf	??_conver1,w
  2792  0249  00B3               	movwf	conver1@temporal+14
  2793                           
  2794                           ;main.c: 275:     temporal[15] = 0x20;
  2795  024A  3020               	movlw	32
  2796  024B  00A2               	movwf	??_conver1
  2797  024C  0822               	movf	??_conver1,w
  2798  024D  00B4               	movwf	conver1@temporal+15
  2799                           
  2800                           ;main.c: 276:     return temporal;
  2801  024E  3025               	movlw	(low (conver1@temporal| 0))& (0+255)
  2802  024F                     l156:
  2803  024F  0008               	return
  2804  0250                     __end_of_conver1:
  2805                           
  2806                           	psect	text11
  2807  00B1                     __ptext11:	
  2808 ;; *************** function ___awmod *****************
  2809 ;; Defined at:
  2810 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;  divisor         2    9[COMMON] int 
  2813 ;;  dividend        2   11[COMMON] int 
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;  sign            1    1[BANK0 ] unsigned char 
  2816 ;;  counter         1    0[BANK0 ] unsigned char 
  2817 ;; Return value:  Size  Location     Type
  2818 ;;                  2    9[COMMON] int 
  2819 ;; Registers used:
  2820 ;;		wreg, status,2, status,0
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2826 ;;      Params:         4       0       0       0       0
  2827 ;;      Locals:         0       2       0       0       0
  2828 ;;      Temps:          1       0       0       0       0
  2829 ;;      Totals:         5       2       0       0       0
  2830 ;;Total ram usage:        7 bytes
  2831 ;; Hardware stack levels used: 1
  2832 ;; This function calls:
  2833 ;;		Nothing
  2834 ;; This function is called by:
  2835 ;;		_conver1
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           
  2840                           ;psect for function ___awmod
  2841  00B1                     ___awmod:
  2842  00B1                     l1812:	
  2843                           ;incstack = 0
  2844                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2845                           
  2846  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  2847  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  2848  00B3  01A1               	clrf	___awmod@sign
  2849  00B4                     l1814:
  2850  00B4  1FFC               	btfss	___awmod@dividend+1,7
  2851  00B5  28B7               	goto	u771
  2852  00B6  28B8               	goto	u770
  2853  00B7                     u771:
  2854  00B7  28BF               	goto	l1820
  2855  00B8                     u770:
  2856  00B8                     l1816:
  2857  00B8  09FB               	comf	___awmod@dividend,f
  2858  00B9  09FC               	comf	___awmod@dividend+1,f
  2859  00BA  0AFB               	incf	___awmod@dividend,f
  2860  00BB  1903               	skipnz
  2861  00BC  0AFC               	incf	___awmod@dividend+1,f
  2862  00BD                     l1818:
  2863  00BD  01A1               	clrf	___awmod@sign
  2864  00BE  0AA1               	incf	___awmod@sign,f
  2865  00BF                     l1820:
  2866  00BF  1FFA               	btfss	___awmod@divisor+1,7
  2867  00C0  28C2               	goto	u781
  2868  00C1  28C3               	goto	u780
  2869  00C2                     u781:
  2870  00C2  28C8               	goto	l1824
  2871  00C3                     u780:
  2872  00C3                     l1822:
  2873  00C3  09F9               	comf	___awmod@divisor,f
  2874  00C4  09FA               	comf	___awmod@divisor+1,f
  2875  00C5  0AF9               	incf	___awmod@divisor,f
  2876  00C6  1903               	skipnz
  2877  00C7  0AFA               	incf	___awmod@divisor+1,f
  2878  00C8                     l1824:
  2879  00C8  0879               	movf	___awmod@divisor,w
  2880  00C9  047A               	iorwf	___awmod@divisor+1,w
  2881  00CA  1903               	btfsc	3,2
  2882  00CB  28CD               	goto	u791
  2883  00CC  28CE               	goto	u790
  2884  00CD                     u791:
  2885  00CD  28FD               	goto	l1842
  2886  00CE                     u790:
  2887  00CE                     l1826:
  2888  00CE  01A0               	clrf	___awmod@counter
  2889  00CF  0AA0               	incf	___awmod@counter,f
  2890  00D0  28DC               	goto	l1832
  2891  00D1                     l1828:
  2892  00D1  3001               	movlw	1
  2893  00D2                     u805:
  2894  00D2  1003               	clrc
  2895  00D3  0DF9               	rlf	___awmod@divisor,f
  2896  00D4  0DFA               	rlf	___awmod@divisor+1,f
  2897  00D5  3EFF               	addlw	-1
  2898  00D6  1D03               	skipz
  2899  00D7  28D2               	goto	u805
  2900  00D8                     l1830:
  2901  00D8  3001               	movlw	1
  2902  00D9  00FD               	movwf	??___awmod
  2903  00DA  087D               	movf	??___awmod,w
  2904  00DB  07A0               	addwf	___awmod@counter,f
  2905  00DC                     l1832:
  2906  00DC  1FFA               	btfss	___awmod@divisor+1,7
  2907  00DD  28DF               	goto	u811
  2908  00DE  28E0               	goto	u810
  2909  00DF                     u811:
  2910  00DF  28D1               	goto	l1828
  2911  00E0                     u810:
  2912  00E0                     l1834:
  2913  00E0  087A               	movf	___awmod@divisor+1,w
  2914  00E1  027C               	subwf	___awmod@dividend+1,w
  2915  00E2  1D03               	skipz
  2916  00E3  28E6               	goto	u825
  2917  00E4  0879               	movf	___awmod@divisor,w
  2918  00E5  027B               	subwf	___awmod@dividend,w
  2919  00E6                     u825:
  2920  00E6  1C03               	skipc
  2921  00E7  28E9               	goto	u821
  2922  00E8  28EA               	goto	u820
  2923  00E9                     u821:
  2924  00E9  28F0               	goto	l1838
  2925  00EA                     u820:
  2926  00EA                     l1836:
  2927  00EA  0879               	movf	___awmod@divisor,w
  2928  00EB  02FB               	subwf	___awmod@dividend,f
  2929  00EC  087A               	movf	___awmod@divisor+1,w
  2930  00ED  1C03               	skipc
  2931  00EE  03FC               	decf	___awmod@dividend+1,f
  2932  00EF  02FC               	subwf	___awmod@dividend+1,f
  2933  00F0                     l1838:
  2934  00F0  3001               	movlw	1
  2935  00F1                     u835:
  2936  00F1  1003               	clrc
  2937  00F2  0CFA               	rrf	___awmod@divisor+1,f
  2938  00F3  0CF9               	rrf	___awmod@divisor,f
  2939  00F4  3EFF               	addlw	-1
  2940  00F5  1D03               	skipz
  2941  00F6  28F1               	goto	u835
  2942  00F7                     l1840:
  2943  00F7  3001               	movlw	1
  2944  00F8  02A0               	subwf	___awmod@counter,f
  2945  00F9  1D03               	btfss	3,2
  2946  00FA  28FC               	goto	u841
  2947  00FB  28FD               	goto	u840
  2948  00FC                     u841:
  2949  00FC  28E0               	goto	l1834
  2950  00FD                     u840:
  2951  00FD                     l1842:
  2952  00FD  0821               	movf	___awmod@sign,w
  2953  00FE  1903               	btfsc	3,2
  2954  00FF  2901               	goto	u851
  2955  0100  2902               	goto	u850
  2956  0101                     u851:
  2957  0101  2907               	goto	l1846
  2958  0102                     u850:
  2959  0102                     l1844:
  2960  0102  09FB               	comf	___awmod@dividend,f
  2961  0103  09FC               	comf	___awmod@dividend+1,f
  2962  0104  0AFB               	incf	___awmod@dividend,f
  2963  0105  1903               	skipnz
  2964  0106  0AFC               	incf	___awmod@dividend+1,f
  2965  0107                     l1846:
  2966  0107  087C               	movf	___awmod@dividend+1,w
  2967  0108  00FA               	movwf	?___awmod+1
  2968  0109  087B               	movf	___awmod@dividend,w
  2969  010A  00F9               	movwf	?___awmod
  2970  010B                     l514:
  2971  010B  0008               	return
  2972  010C                     __end_of___awmod:
  2973                           
  2974                           	psect	text12
  2975  0172                     __ptext12:	
  2976 ;; *************** function ___awdiv *****************
  2977 ;; Defined at:
  2978 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;  divisor         2    0[COMMON] int 
  2981 ;;  dividend        2    2[COMMON] int 
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;  quotient        2    7[COMMON] int 
  2984 ;;  sign            1    6[COMMON] unsigned char 
  2985 ;;  counter         1    5[COMMON] unsigned char 
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  2    0[COMMON] int 
  2988 ;; Registers used:
  2989 ;;		wreg, status,2, status,0
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2995 ;;      Params:         4       0       0       0       0
  2996 ;;      Locals:         4       0       0       0       0
  2997 ;;      Temps:          1       0       0       0       0
  2998 ;;      Totals:         9       0       0       0       0
  2999 ;;Total ram usage:        9 bytes
  3000 ;; Hardware stack levels used: 1
  3001 ;; This function calls:
  3002 ;;		Nothing
  3003 ;; This function is called by:
  3004 ;;		_conver1
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008                           
  3009                           ;psect for function ___awdiv
  3010  0172                     ___awdiv:
  3011  0172                     l1768:	
  3012                           ;incstack = 0
  3013                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3014                           
  3015  0172  01F6               	clrf	___awdiv@sign
  3016  0173                     l1770:
  3017  0173  1FF1               	btfss	___awdiv@divisor+1,7
  3018  0174  2976               	goto	u671
  3019  0175  2977               	goto	u670
  3020  0176                     u671:
  3021  0176  297E               	goto	l1776
  3022  0177                     u670:
  3023  0177                     l1772:
  3024  0177  09F0               	comf	___awdiv@divisor,f
  3025  0178  09F1               	comf	___awdiv@divisor+1,f
  3026  0179  0AF0               	incf	___awdiv@divisor,f
  3027  017A  1903               	skipnz
  3028  017B  0AF1               	incf	___awdiv@divisor+1,f
  3029  017C                     l1774:
  3030  017C  01F6               	clrf	___awdiv@sign
  3031  017D  0AF6               	incf	___awdiv@sign,f
  3032  017E                     l1776:
  3033  017E  1FF3               	btfss	___awdiv@dividend+1,7
  3034  017F  2981               	goto	u681
  3035  0180  2982               	goto	u680
  3036  0181                     u681:
  3037  0181  298B               	goto	l1782
  3038  0182                     u680:
  3039  0182                     l1778:
  3040  0182  09F2               	comf	___awdiv@dividend,f
  3041  0183  09F3               	comf	___awdiv@dividend+1,f
  3042  0184  0AF2               	incf	___awdiv@dividend,f
  3043  0185  1903               	skipnz
  3044  0186  0AF3               	incf	___awdiv@dividend+1,f
  3045  0187                     l1780:
  3046  0187  3001               	movlw	1
  3047  0188  00F4               	movwf	??___awdiv
  3048  0189  0874               	movf	??___awdiv,w
  3049  018A  06F6               	xorwf	___awdiv@sign,f
  3050  018B                     l1782:
  3051  018B  01F7               	clrf	___awdiv@quotient
  3052  018C  01F8               	clrf	___awdiv@quotient+1
  3053  018D                     l1784:
  3054  018D  0870               	movf	___awdiv@divisor,w
  3055  018E  0471               	iorwf	___awdiv@divisor+1,w
  3056  018F  1903               	btfsc	3,2
  3057  0190  2992               	goto	u691
  3058  0191  2993               	goto	u690
  3059  0192                     u691:
  3060  0192  29CA               	goto	l1804
  3061  0193                     u690:
  3062  0193                     l1786:
  3063  0193  01F5               	clrf	___awdiv@counter
  3064  0194  0AF5               	incf	___awdiv@counter,f
  3065  0195  29A1               	goto	l1792
  3066  0196                     l1788:
  3067  0196  3001               	movlw	1
  3068  0197                     u705:
  3069  0197  1003               	clrc
  3070  0198  0DF0               	rlf	___awdiv@divisor,f
  3071  0199  0DF1               	rlf	___awdiv@divisor+1,f
  3072  019A  3EFF               	addlw	-1
  3073  019B  1D03               	skipz
  3074  019C  2997               	goto	u705
  3075  019D                     l1790:
  3076  019D  3001               	movlw	1
  3077  019E  00F4               	movwf	??___awdiv
  3078  019F  0874               	movf	??___awdiv,w
  3079  01A0  07F5               	addwf	___awdiv@counter,f
  3080  01A1                     l1792:
  3081  01A1  1FF1               	btfss	___awdiv@divisor+1,7
  3082  01A2  29A4               	goto	u711
  3083  01A3  29A5               	goto	u710
  3084  01A4                     u711:
  3085  01A4  2996               	goto	l1788
  3086  01A5                     u710:
  3087  01A5                     l1794:
  3088  01A5  3001               	movlw	1
  3089  01A6                     u725:
  3090  01A6  1003               	clrc
  3091  01A7  0DF7               	rlf	___awdiv@quotient,f
  3092  01A8  0DF8               	rlf	___awdiv@quotient+1,f
  3093  01A9  3EFF               	addlw	-1
  3094  01AA  1D03               	skipz
  3095  01AB  29A6               	goto	u725
  3096  01AC  0871               	movf	___awdiv@divisor+1,w
  3097  01AD  0273               	subwf	___awdiv@dividend+1,w
  3098  01AE  1D03               	skipz
  3099  01AF  29B2               	goto	u735
  3100  01B0  0870               	movf	___awdiv@divisor,w
  3101  01B1  0272               	subwf	___awdiv@dividend,w
  3102  01B2                     u735:
  3103  01B2  1C03               	skipc
  3104  01B3  29B5               	goto	u731
  3105  01B4  29B6               	goto	u730
  3106  01B5                     u731:
  3107  01B5  29BD               	goto	l1800
  3108  01B6                     u730:
  3109  01B6                     l1796:
  3110  01B6  0870               	movf	___awdiv@divisor,w
  3111  01B7  02F2               	subwf	___awdiv@dividend,f
  3112  01B8  0871               	movf	___awdiv@divisor+1,w
  3113  01B9  1C03               	skipc
  3114  01BA  03F3               	decf	___awdiv@dividend+1,f
  3115  01BB  02F3               	subwf	___awdiv@dividend+1,f
  3116  01BC                     l1798:
  3117  01BC  1477               	bsf	___awdiv@quotient,0
  3118  01BD                     l1800:
  3119  01BD  3001               	movlw	1
  3120  01BE                     u745:
  3121  01BE  1003               	clrc
  3122  01BF  0CF1               	rrf	___awdiv@divisor+1,f
  3123  01C0  0CF0               	rrf	___awdiv@divisor,f
  3124  01C1  3EFF               	addlw	-1
  3125  01C2  1D03               	skipz
  3126  01C3  29BE               	goto	u745
  3127  01C4                     l1802:
  3128  01C4  3001               	movlw	1
  3129  01C5  02F5               	subwf	___awdiv@counter,f
  3130  01C6  1D03               	btfss	3,2
  3131  01C7  29C9               	goto	u751
  3132  01C8  29CA               	goto	u750
  3133  01C9                     u751:
  3134  01C9  29A5               	goto	l1794
  3135  01CA                     u750:
  3136  01CA                     l1804:
  3137  01CA  0876               	movf	___awdiv@sign,w
  3138  01CB  1903               	btfsc	3,2
  3139  01CC  29CE               	goto	u761
  3140  01CD  29CF               	goto	u760
  3141  01CE                     u761:
  3142  01CE  29D4               	goto	l1808
  3143  01CF                     u760:
  3144  01CF                     l1806:
  3145  01CF  09F7               	comf	___awdiv@quotient,f
  3146  01D0  09F8               	comf	___awdiv@quotient+1,f
  3147  01D1  0AF7               	incf	___awdiv@quotient,f
  3148  01D2  1903               	skipnz
  3149  01D3  0AF8               	incf	___awdiv@quotient+1,f
  3150  01D4                     l1808:
  3151  01D4  0878               	movf	___awdiv@quotient+1,w
  3152  01D5  00F1               	movwf	?___awdiv+1
  3153  01D6  0877               	movf	___awdiv@quotient,w
  3154  01D7  00F0               	movwf	?___awdiv
  3155  01D8                     l501:
  3156  01D8  0008               	return
  3157  01D9                     __end_of___awdiv:
  3158                           
  3159                           	psect	text13
  3160  0250                     __ptext13:	
  3161 ;; *************** function _conver *****************
  3162 ;; Defined at:
  3163 ;;		line 214 in file "main.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;		None
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;  temporal       16   16[BANK0 ] unsigned char [16]
  3168 ;;  temporal       16    0[BANK0 ] unsigned char [16]
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  1    wreg      PTR const unsigned char 
  3171 ;; Registers used:
  3172 ;;		wreg, status,2, status,0
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3178 ;;      Params:         0       0       0       0       0
  3179 ;;      Locals:         0      32       0       0       0
  3180 ;;      Temps:          1       0       0       0       0
  3181 ;;      Totals:         1      32       0       0       0
  3182 ;;Total ram usage:       33 bytes
  3183 ;; Hardware stack levels used: 1
  3184 ;; This function calls:
  3185 ;;		Nothing
  3186 ;; This function is called by:
  3187 ;;		_main
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           
  3192                           ;psect for function _conver
  3193  0250                     _conver:
  3194  0250                     l1974:	
  3195                           ;incstack = 0
  3196                           ; Regs used in _conver: [wreg+status,2+status,0]
  3197                           
  3198                           
  3199                           ;main.c: 215:     if (CERRADO==0){
  3200  0250  1283               	bcf	3,5	;RP0=0, select bank0
  3201  0251  1303               	bcf	3,6	;RP1=0, select bank0
  3202  0252  0844               	movf	_CERRADO,w
  3203  0253  1D03               	btfss	3,2
  3204  0254  2A56               	goto	u891
  3205  0255  2A57               	goto	u890
  3206  0256                     u891:
  3207  0256  2A99               	goto	l1982
  3208  0257                     u890:
  3209  0257                     l1976:
  3210                           
  3211                           ;main.c: 216:         char temporal[16];;main.c: 217:         temporal[0] = 0x50;
  3212  0257  3050               	movlw	80
  3213  0258  00F0               	movwf	??_conver
  3214  0259  0870               	movf	??_conver,w
  3215  025A  00A0               	movwf	conver@temporal
  3216                           
  3217                           ;main.c: 218:         temporal[1] = 0x41;
  3218  025B  3041               	movlw	65
  3219  025C  00F0               	movwf	??_conver
  3220  025D  0870               	movf	??_conver,w
  3221  025E  00A1               	movwf	conver@temporal+1
  3222                           
  3223                           ;main.c: 219:         temporal[2] = 0x52;
  3224  025F  3052               	movlw	82
  3225  0260  00F0               	movwf	??_conver
  3226  0261  0870               	movf	??_conver,w
  3227  0262  00A2               	movwf	conver@temporal+2
  3228                           
  3229                           ;main.c: 220:         temporal[3] = 0x51;
  3230  0263  3051               	movlw	81
  3231  0264  00F0               	movwf	??_conver
  3232  0265  0870               	movf	??_conver,w
  3233  0266  00A3               	movwf	conver@temporal+3
  3234                           
  3235                           ;main.c: 221:         temporal[4] = 0x55;
  3236  0267  3055               	movlw	85
  3237  0268  00F0               	movwf	??_conver
  3238  0269  0870               	movf	??_conver,w
  3239  026A  00A4               	movwf	conver@temporal+4
  3240                           
  3241                           ;main.c: 222:         temporal[5] = 0x45;
  3242  026B  3045               	movlw	69
  3243  026C  00F0               	movwf	??_conver
  3244  026D  0870               	movf	??_conver,w
  3245  026E  00A5               	movwf	conver@temporal+5
  3246                           
  3247                           ;main.c: 223:         temporal[6] = 0x4F;
  3248  026F  304F               	movlw	79
  3249  0270  00F0               	movwf	??_conver
  3250  0271  0870               	movf	??_conver,w
  3251  0272  00A6               	movwf	conver@temporal+6
  3252                           
  3253                           ;main.c: 224:         temporal[7] = 0x53;
  3254  0273  3053               	movlw	83
  3255  0274  00F0               	movwf	??_conver
  3256  0275  0870               	movf	??_conver,w
  3257  0276  00A7               	movwf	conver@temporal+7
  3258                           
  3259                           ;main.c: 225:         temporal[8] = 0x3A;
  3260  0277  303A               	movlw	58
  3261  0278  00F0               	movwf	??_conver
  3262  0279  0870               	movf	??_conver,w
  3263  027A  00A8               	movwf	conver@temporal+8
  3264                           
  3265                           ;main.c: 226:         temporal[9] = 0X20;
  3266  027B  3020               	movlw	32
  3267  027C  00F0               	movwf	??_conver
  3268  027D  0870               	movf	??_conver,w
  3269  027E  00A9               	movwf	conver@temporal+9
  3270                           
  3271                           ;main.c: 227:         temporal[10] = 0x30;
  3272  027F  3030               	movlw	48
  3273  0280  00F0               	movwf	??_conver
  3274  0281  0870               	movf	??_conver,w
  3275  0282  00AA               	movwf	conver@temporal+10
  3276                           
  3277                           ;main.c: 228:         temporal[11] = NUM;
  3278  0283  0851               	movf	_NUM,w
  3279  0284  00F0               	movwf	??_conver
  3280  0285  0870               	movf	??_conver,w
  3281  0286  00AB               	movwf	conver@temporal+11
  3282                           
  3283                           ;main.c: 229:         temporal[12] = 0x20;
  3284  0287  3020               	movlw	32
  3285  0288  00F0               	movwf	??_conver
  3286  0289  0870               	movf	??_conver,w
  3287  028A  00AC               	movwf	conver@temporal+12
  3288                           
  3289                           ;main.c: 230:         temporal[13] = 0x20;
  3290  028B  3020               	movlw	32
  3291  028C  00F0               	movwf	??_conver
  3292  028D  0870               	movf	??_conver,w
  3293  028E  00AD               	movwf	conver@temporal+13
  3294                           
  3295                           ;main.c: 231:         temporal[14] = 0x20;
  3296  028F  3020               	movlw	32
  3297  0290  00F0               	movwf	??_conver
  3298  0291  0870               	movf	??_conver,w
  3299  0292  00AE               	movwf	conver@temporal+14
  3300                           
  3301                           ;main.c: 232:         temporal[15] = 0x20;
  3302  0293  3020               	movlw	32
  3303  0294  00F0               	movwf	??_conver
  3304  0295  0870               	movf	??_conver,w
  3305  0296  00AF               	movwf	conver@temporal+15
  3306                           
  3307                           ;main.c: 233:         return temporal;
  3308  0297  3020               	movlw	(low (conver@temporal| 0))& (0+255)
  3309  0298  2ADA               	goto	l152
  3310  0299                     l1982:
  3311                           
  3312                           ;main.c: 236:         char temporal[16];;main.c: 237:         temporal[0] = 0x43;
  3313  0299  3043               	movlw	67
  3314  029A  00F0               	movwf	??_conver
  3315  029B  0870               	movf	??_conver,w
  3316  029C  00B0               	movwf	conver@temporal_196
  3317                           
  3318                           ;main.c: 238:         temporal[1] = 0x45;
  3319  029D  3045               	movlw	69
  3320  029E  00F0               	movwf	??_conver
  3321  029F  0870               	movf	??_conver,w
  3322  02A0  00B1               	movwf	conver@temporal_196+1
  3323                           
  3324                           ;main.c: 239:         temporal[2] = 0x52;
  3325  02A1  3052               	movlw	82
  3326  02A2  00F0               	movwf	??_conver
  3327  02A3  0870               	movf	??_conver,w
  3328  02A4  00B2               	movwf	conver@temporal_196+2
  3329                           
  3330                           ;main.c: 240:         temporal[3] = 0x52;
  3331  02A5  3052               	movlw	82
  3332  02A6  00F0               	movwf	??_conver
  3333  02A7  0870               	movf	??_conver,w
  3334  02A8  00B3               	movwf	conver@temporal_196+3
  3335                           
  3336                           ;main.c: 241:         temporal[4] = 0x41;
  3337  02A9  3041               	movlw	65
  3338  02AA  00F0               	movwf	??_conver
  3339  02AB  0870               	movf	??_conver,w
  3340  02AC  00B4               	movwf	conver@temporal_196+4
  3341                           
  3342                           ;main.c: 242:         temporal[5] = 0x44;
  3343  02AD  3044               	movlw	68
  3344  02AE  00F0               	movwf	??_conver
  3345  02AF  0870               	movf	??_conver,w
  3346  02B0  00B5               	movwf	conver@temporal_196+5
  3347                           
  3348                           ;main.c: 243:         temporal[6] = 0x4F;
  3349  02B1  304F               	movlw	79
  3350  02B2  00F0               	movwf	??_conver
  3351  02B3  0870               	movf	??_conver,w
  3352  02B4  00B6               	movwf	conver@temporal_196+6
  3353                           
  3354                           ;main.c: 244:         temporal[7] = 0x20;
  3355  02B5  3020               	movlw	32
  3356  02B6  00F0               	movwf	??_conver
  3357  02B7  0870               	movf	??_conver,w
  3358  02B8  00B7               	movwf	conver@temporal_196+7
  3359                           
  3360                           ;main.c: 245:         temporal[8] = 0x20;
  3361  02B9  3020               	movlw	32
  3362  02BA  00F0               	movwf	??_conver
  3363  02BB  0870               	movf	??_conver,w
  3364  02BC  00B8               	movwf	conver@temporal_196+8
  3365                           
  3366                           ;main.c: 246:         temporal[9] = 0X20;
  3367  02BD  3020               	movlw	32
  3368  02BE  00F0               	movwf	??_conver
  3369  02BF  0870               	movf	??_conver,w
  3370  02C0  00B9               	movwf	conver@temporal_196+9
  3371                           
  3372                           ;main.c: 247:         temporal[10] = 0x20;
  3373  02C1  3020               	movlw	32
  3374  02C2  00F0               	movwf	??_conver
  3375  02C3  0870               	movf	??_conver,w
  3376  02C4  00BA               	movwf	conver@temporal_196+10
  3377                           
  3378                           ;main.c: 248:         temporal[11] = 0x20;
  3379  02C5  3020               	movlw	32
  3380  02C6  00F0               	movwf	??_conver
  3381  02C7  0870               	movf	??_conver,w
  3382  02C8  00BB               	movwf	conver@temporal_196+11
  3383                           
  3384                           ;main.c: 249:         temporal[12] = 0x20;
  3385  02C9  3020               	movlw	32
  3386  02CA  00F0               	movwf	??_conver
  3387  02CB  0870               	movf	??_conver,w
  3388  02CC  00BC               	movwf	conver@temporal_196+12
  3389                           
  3390                           ;main.c: 250:         temporal[13] = 0x20;
  3391  02CD  3020               	movlw	32
  3392  02CE  00F0               	movwf	??_conver
  3393  02CF  0870               	movf	??_conver,w
  3394  02D0  00BD               	movwf	conver@temporal_196+13
  3395                           
  3396                           ;main.c: 251:         temporal[14] = 0x20;
  3397  02D1  3020               	movlw	32
  3398  02D2  00F0               	movwf	??_conver
  3399  02D3  0870               	movf	??_conver,w
  3400  02D4  00BE               	movwf	conver@temporal_196+14
  3401                           
  3402                           ;main.c: 252:         temporal[15] = 0x20;
  3403  02D5  3020               	movlw	32
  3404  02D6  00F0               	movwf	??_conver
  3405  02D7  0870               	movf	??_conver,w
  3406  02D8  00BF               	movwf	conver@temporal_196+15
  3407                           
  3408                           ;main.c: 253:         return temporal;
  3409  02D9  3030               	movlw	(low (conver@temporal_196| 0))& (0+255)
  3410  02DA                     l152:
  3411  02DA  0008               	return
  3412  02DB                     __end_of_conver:
  3413                           
  3414                           	psect	text14
  3415  0F8D                     __ptext14:	
  3416 ;; *************** function _Lcd_Write_String *****************
  3417 ;; Defined at:
  3418 ;;		line 54 in file "LCD.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;  a               1    wreg     PTR unsigned char 
  3421 ;;		 -> conver1@temporal(16), conver@temporal_196(16), conver@temporal(16), 
  3422 ;; Auto vars:     Size  Location     Type
  3423 ;;  a               1    6[COMMON] PTR unsigned char 
  3424 ;;		 -> conver1@temporal(16), conver@temporal_196(16), conver@temporal(16), 
  3425 ;;  i               2    4[COMMON] int 
  3426 ;; Return value:  Size  Location     Type
  3427 ;;                  1    wreg      void 
  3428 ;; Registers used:
  3429 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3435 ;;      Params:         0       0       0       0       0
  3436 ;;      Locals:         3       0       0       0       0
  3437 ;;      Temps:          1       0       0       0       0
  3438 ;;      Totals:         4       0       0       0       0
  3439 ;;Total ram usage:        4 bytes
  3440 ;; Hardware stack levels used: 1
  3441 ;; Hardware stack levels required when called: 2
  3442 ;; This function calls:
  3443 ;;		_Lcd_Write_Char
  3444 ;; This function is called by:
  3445 ;;		_main
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           
  3450                           ;psect for function _Lcd_Write_String
  3451  0F8D                     _Lcd_Write_String:
  3452                           
  3453                           ;incstack = 0
  3454                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3455                           ;Lcd_Write_String@a stored from wreg
  3456  0F8D  00F6               	movwf	Lcd_Write_String@a
  3457  0F8E                     l1966:
  3458                           
  3459                           ;LCD.c: 55:     int i;;LCD.c: 56:     for (i = 0; a[i] != '\0'; i++)
  3460  0F8E  01F4               	clrf	Lcd_Write_String@i
  3461  0F8F  01F5               	clrf	Lcd_Write_String@i+1
  3462  0F90  2FA2               	goto	l1972
  3463  0F91                     l1968:
  3464                           
  3465                           ;LCD.c: 57:         Lcd_Write_Char(a[i]);
  3466  0F91  0874               	movf	Lcd_Write_String@i,w
  3467  0F92  0776               	addwf	Lcd_Write_String@a,w
  3468  0F93  00F3               	movwf	??_Lcd_Write_String
  3469  0F94  0873               	movf	??_Lcd_Write_String,w
  3470  0F95  0084               	movwf	4
  3471  0F96  0800               	movf	0,w
  3472  0F97  120A  158A  2748  120A  158A  	fcall	_Lcd_Write_Char
  3473  0F9C                     l1970:
  3474  0F9C  3001               	movlw	1
  3475  0F9D  07F4               	addwf	Lcd_Write_String@i,f
  3476  0F9E  1803               	skipnc
  3477  0F9F  0AF5               	incf	Lcd_Write_String@i+1,f
  3478  0FA0  3000               	movlw	0
  3479  0FA1  07F5               	addwf	Lcd_Write_String@i+1,f
  3480  0FA2                     l1972:
  3481  0FA2  0874               	movf	Lcd_Write_String@i,w
  3482  0FA3  0776               	addwf	Lcd_Write_String@a,w
  3483  0FA4  00F3               	movwf	??_Lcd_Write_String
  3484  0FA5  0873               	movf	??_Lcd_Write_String,w
  3485  0FA6  0084               	movwf	4
  3486  0FA7  1383               	bcf	3,7	;select IRP bank0
  3487  0FA8  0800               	movf	0,w
  3488  0FA9  1D03               	btfss	3,2
  3489  0FAA  2FAC               	goto	u881
  3490  0FAB  2FAD               	goto	u880
  3491  0FAC                     u881:
  3492  0FAC  2F91               	goto	l1968
  3493  0FAD                     u880:
  3494  0FAD                     l240:
  3495  0FAD  0008               	return
  3496  0FAE                     __end_of_Lcd_Write_String:
  3497                           
  3498                           	psect	text15
  3499  0F48                     __ptext15:	
  3500 ;; *************** function _Lcd_Write_Char *****************
  3501 ;; Defined at:
  3502 ;;		line 45 in file "LCD.c"
  3503 ;; Parameters:    Size  Location     Type
  3504 ;;  a               1    wreg     unsigned char 
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;  a               1    2[COMMON] unsigned char 
  3507 ;; Return value:  Size  Location     Type
  3508 ;;                  1    wreg      void 
  3509 ;; Registers used:
  3510 ;;		wreg, status,2, status,0, pclath, cstack
  3511 ;; Tracked objects:
  3512 ;;		On entry : 0/0
  3513 ;;		On exit  : 0/0
  3514 ;;		Unchanged: 0/0
  3515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3516 ;;      Params:         0       0       0       0       0
  3517 ;;      Locals:         1       0       0       0       0
  3518 ;;      Temps:          1       0       0       0       0
  3519 ;;      Totals:         2       0       0       0       0
  3520 ;;Total ram usage:        2 bytes
  3521 ;; Hardware stack levels used: 1
  3522 ;; Hardware stack levels required when called: 1
  3523 ;; This function calls:
  3524 ;;		_Lcd_Port
  3525 ;; This function is called by:
  3526 ;;		_Lcd_Write_String
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530                           
  3531                           ;psect for function _Lcd_Write_Char
  3532  0F48                     _Lcd_Write_Char:
  3533                           
  3534                           ;incstack = 0
  3535                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3536                           ;Lcd_Write_Char@a stored from wreg
  3537  0F48  00F2               	movwf	Lcd_Write_Char@a
  3538  0F49                     l1756:
  3539                           
  3540                           ;LCD.c: 46:     Lcd_Port(a);
  3541  0F49  0872               	movf	Lcd_Write_Char@a,w
  3542  0F4A  120A  158A  2711  120A  158A  	fcall	_Lcd_Port
  3543  0F4F                     l1758:
  3544                           
  3545                           ;LCD.c: 47:     PORTEbits.RE1 = 1;
  3546  0F4F  1283               	bcf	3,5	;RP0=0, select bank0
  3547  0F50  1303               	bcf	3,6	;RP1=0, select bank0
  3548  0F51  1489               	bsf	9,1	;volatile
  3549  0F52                     l1760:
  3550                           
  3551                           ;LCD.c: 48:     PORTEbits.RE2 = 0;
  3552  0F52  1109               	bcf	9,2	;volatile
  3553  0F53                     l1762:
  3554                           
  3555                           ;LCD.c: 49:     PORTEbits.RE0 = 1;
  3556  0F53  1409               	bsf	9,0	;volatile
  3557  0F54                     l1764:
  3558                           
  3559                           ;LCD.c: 50:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3560  0F54  300D               	movlw	13
  3561  0F55  00F1               	movwf	??_Lcd_Write_Char
  3562  0F56                     u1297:
  3563  0F56  0BF1               	decfsz	??_Lcd_Write_Char,f
  3564  0F57  2F56               	goto	u1297
  3565  0F58                     l1766:
  3566                           
  3567                           ;LCD.c: 51:     PORTEbits.RE0 = 0;
  3568  0F58  1283               	bcf	3,5	;RP0=0, select bank0
  3569  0F59  1303               	bcf	3,6	;RP1=0, select bank0
  3570  0F5A  1009               	bcf	9,0	;volatile
  3571  0F5B                     l234:
  3572  0F5B  0008               	return
  3573  0F5C                     __end_of_Lcd_Write_Char:
  3574                           
  3575                           	psect	text16
  3576  0FAE                     __ptext16:	
  3577 ;; *************** function _Lcd_Set_Cursor *****************
  3578 ;; Defined at:
  3579 ;;		line 20 in file "LCD.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;  a               1    wreg     unsigned char 
  3582 ;;  b               1    4[COMMON] unsigned char 
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;  a               1    6[COMMON] unsigned char 
  3585 ;;  temp            1    7[COMMON] unsigned char 
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  1    wreg      void 
  3588 ;; Registers used:
  3589 ;;		wreg, status,2, status,0, pclath, cstack
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3595 ;;      Params:         1       0       0       0       0
  3596 ;;      Locals:         2       0       0       0       0
  3597 ;;      Temps:          1       0       0       0       0
  3598 ;;      Totals:         4       0       0       0       0
  3599 ;;Total ram usage:        4 bytes
  3600 ;; Hardware stack levels used: 1
  3601 ;; Hardware stack levels required when called: 2
  3602 ;; This function calls:
  3603 ;;		_Lcd_Cmd
  3604 ;; This function is called by:
  3605 ;;		_main
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           
  3610                           ;psect for function _Lcd_Set_Cursor
  3611  0FAE                     _Lcd_Set_Cursor:
  3612                           
  3613                           ;incstack = 0
  3614                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3615                           ;Lcd_Set_Cursor@a stored from wreg
  3616  0FAE  00F6               	movwf	Lcd_Set_Cursor@a
  3617  0FAF                     l1946:
  3618                           
  3619                           ;LCD.c: 21:     char temp;;LCD.c: 22:     if (a == 1) {
  3620  0FAF  0376               	decf	Lcd_Set_Cursor@a,w
  3621  0FB0  1D03               	btfss	3,2
  3622  0FB1  2FB3               	goto	u861
  3623  0FB2  2FB4               	goto	u860
  3624  0FB3                     u861:
  3625  0FB3  2FC0               	goto	l1952
  3626  0FB4                     u860:
  3627  0FB4                     l1948:
  3628                           
  3629                           ;LCD.c: 23:         temp = 0x80 + b - 1;
  3630  0FB4  0874               	movf	Lcd_Set_Cursor@b,w
  3631  0FB5  3E7F               	addlw	127
  3632  0FB6  00F5               	movwf	??_Lcd_Set_Cursor
  3633  0FB7  0875               	movf	??_Lcd_Set_Cursor,w
  3634  0FB8  00F7               	movwf	Lcd_Set_Cursor@temp
  3635  0FB9                     l1950:
  3636                           
  3637                           ;LCD.c: 24:         Lcd_Cmd(temp);
  3638  0FB9  0877               	movf	Lcd_Set_Cursor@temp,w
  3639  0FBA  120A  158A  275C  120A  158A  	fcall	_Lcd_Cmd
  3640                           
  3641                           ;LCD.c: 25:     } else if (a == 2) {
  3642  0FBF  2FD1               	goto	l228
  3643  0FC0                     l1952:
  3644  0FC0  3002               	movlw	2
  3645  0FC1  0676               	xorwf	Lcd_Set_Cursor@a,w
  3646  0FC2  1D03               	btfss	3,2
  3647  0FC3  2FC5               	goto	u871
  3648  0FC4  2FC6               	goto	u870
  3649  0FC5                     u871:
  3650  0FC5  2FD1               	goto	l228
  3651  0FC6                     u870:
  3652  0FC6                     l1954:
  3653                           
  3654                           ;LCD.c: 26:         temp = 0xC0 + b - 1;
  3655  0FC6  0874               	movf	Lcd_Set_Cursor@b,w
  3656  0FC7  3EBF               	addlw	191
  3657  0FC8  00F5               	movwf	??_Lcd_Set_Cursor
  3658  0FC9  0875               	movf	??_Lcd_Set_Cursor,w
  3659  0FCA  00F7               	movwf	Lcd_Set_Cursor@temp
  3660  0FCB                     l1956:
  3661                           
  3662                           ;LCD.c: 27:         Lcd_Cmd(temp);
  3663  0FCB  0877               	movf	Lcd_Set_Cursor@temp,w
  3664  0FCC  120A  158A  275C  120A  158A  	fcall	_Lcd_Cmd
  3665  0FD1                     l228:
  3666  0FD1  0008               	return
  3667  0FD2                     __end_of_Lcd_Set_Cursor:
  3668                           
  3669                           	psect	text17
  3670  0F74                     __ptext17:	
  3671 ;; *************** function _Lcd_Init *****************
  3672 ;; Defined at:
  3673 ;;		line 31 in file "LCD.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;		None
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;		None
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1    wreg      void 
  3680 ;; Registers used:
  3681 ;;		wreg, status,2, status,0, pclath, cstack
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3687 ;;      Params:         0       0       0       0       0
  3688 ;;      Locals:         0       0       0       0       0
  3689 ;;      Temps:          0       0       0       0       0
  3690 ;;      Totals:         0       0       0       0       0
  3691 ;;Total ram usage:        0 bytes
  3692 ;; Hardware stack levels used: 1
  3693 ;; Hardware stack levels required when called: 2
  3694 ;; This function calls:
  3695 ;;		_Lcd_Cmd
  3696 ;; This function is called by:
  3697 ;;		_main
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           
  3701                           
  3702                           ;psect for function _Lcd_Init
  3703  0F74                     _Lcd_Init:
  3704  0F74                     l1944:	
  3705                           ;incstack = 0
  3706                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3707                           
  3708                           
  3709                           ;LCD.c: 39:     Lcd_Cmd(0x38);
  3710  0F74  3038               	movlw	56
  3711  0F75  120A  158A  275C  120A  158A  	fcall	_Lcd_Cmd
  3712                           
  3713                           ;LCD.c: 40:     Lcd_Cmd(0x06);
  3714  0F7A  3006               	movlw	6
  3715  0F7B  120A  158A  275C  120A  158A  	fcall	_Lcd_Cmd
  3716                           
  3717                           ;LCD.c: 41:     Lcd_Cmd(0x0c);
  3718  0F80  300C               	movlw	12
  3719  0F81  120A  158A  275C  120A  158A  	fcall	_Lcd_Cmd
  3720                           
  3721                           ;LCD.c: 42:     Lcd_Cmd(0x80);
  3722  0F86  3080               	movlw	128
  3723  0F87  120A  158A  275C  120A  158A  	fcall	_Lcd_Cmd
  3724  0F8C                     l231:
  3725  0F8C  0008               	return
  3726  0F8D                     __end_of_Lcd_Init:
  3727                           
  3728                           	psect	text18
  3729  0F5C                     __ptext18:	
  3730 ;; *************** function _Lcd_Cmd *****************
  3731 ;; Defined at:
  3732 ;;		line 7 in file "LCD.c"
  3733 ;; Parameters:    Size  Location     Type
  3734 ;;  a               1    wreg     unsigned char 
  3735 ;; Auto vars:     Size  Location     Type
  3736 ;;  a               1    3[COMMON] unsigned char 
  3737 ;; Return value:  Size  Location     Type
  3738 ;;                  1    wreg      void 
  3739 ;; Registers used:
  3740 ;;		wreg, status,2, status,0, pclath, cstack
  3741 ;; Tracked objects:
  3742 ;;		On entry : 0/0
  3743 ;;		On exit  : 0/0
  3744 ;;		Unchanged: 0/0
  3745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3746 ;;      Params:         0       0       0       0       0
  3747 ;;      Locals:         1       0       0       0       0
  3748 ;;      Temps:          2       0       0       0       0
  3749 ;;      Totals:         3       0       0       0       0
  3750 ;;Total ram usage:        3 bytes
  3751 ;; Hardware stack levels used: 1
  3752 ;; Hardware stack levels required when called: 1
  3753 ;; This function calls:
  3754 ;;		_Lcd_Port
  3755 ;; This function is called by:
  3756 ;;		_Lcd_Set_Cursor
  3757 ;;		_Lcd_Init
  3758 ;;		_Lcd_Clear
  3759 ;;		_Lcd_Shift_Right
  3760 ;;		_Lcd_Shift_Left
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764                           
  3765                           ;psect for function _Lcd_Cmd
  3766  0F5C                     _Lcd_Cmd:
  3767                           
  3768                           ;incstack = 0
  3769                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3770                           ;Lcd_Cmd@a stored from wreg
  3771  0F5C  00F3               	movwf	Lcd_Cmd@a
  3772  0F5D                     l1744:
  3773                           
  3774                           ;LCD.c: 8:     Lcd_Port(a);
  3775  0F5D  0873               	movf	Lcd_Cmd@a,w
  3776  0F5E  120A  158A  2711  120A  158A  	fcall	_Lcd_Port
  3777  0F63                     l1746:
  3778                           
  3779                           ;LCD.c: 9:     PORTEbits.RE1 = 0;
  3780  0F63  1283               	bcf	3,5	;RP0=0, select bank0
  3781  0F64  1303               	bcf	3,6	;RP1=0, select bank0
  3782  0F65  1089               	bcf	9,1	;volatile
  3783  0F66                     l1748:
  3784                           
  3785                           ;LCD.c: 10:     PORTEbits.RE2 = 0;
  3786  0F66  1109               	bcf	9,2	;volatile
  3787  0F67                     l1750:
  3788                           
  3789                           ;LCD.c: 11:     PORTEbits.RE0 = 1;
  3790  0F67  1409               	bsf	9,0	;volatile
  3791  0F68                     l1752:
  3792                           
  3793                           ;LCD.c: 12:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3794  0F68  3007               	movlw	7
  3795  0F69  00F2               	movwf	??_Lcd_Cmd+1
  3796  0F6A  307D               	movlw	125
  3797  0F6B  00F1               	movwf	??_Lcd_Cmd
  3798  0F6C                     u1307:
  3799  0F6C  0BF1               	decfsz	??_Lcd_Cmd,f
  3800  0F6D  2F6C               	goto	u1307
  3801  0F6E  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3802  0F6F  2F6C               	goto	u1307
  3803  0F70                     l1754:
  3804                           
  3805                           ;LCD.c: 13:     PORTEbits.RE0 = 0;
  3806  0F70  1283               	bcf	3,5	;RP0=0, select bank0
  3807  0F71  1303               	bcf	3,6	;RP1=0, select bank0
  3808  0F72  1009               	bcf	9,0	;volatile
  3809  0F73                     l219:
  3810  0F73  0008               	return
  3811  0F74                     __end_of_Lcd_Cmd:
  3812                           
  3813                           	psect	text19
  3814  0F11                     __ptext19:	
  3815 ;; *************** function _Lcd_Port *****************
  3816 ;; Defined at:
  3817 ;;		line 3 in file "LCD.c"
  3818 ;; Parameters:    Size  Location     Type
  3819 ;;  a               1    wreg     unsigned char 
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;  a               1    0[COMMON] unsigned char 
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  1    wreg      void 
  3824 ;; Registers used:
  3825 ;;		wreg
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3831 ;;      Params:         0       0       0       0       0
  3832 ;;      Locals:         1       0       0       0       0
  3833 ;;      Temps:          0       0       0       0       0
  3834 ;;      Totals:         1       0       0       0       0
  3835 ;;Total ram usage:        1 bytes
  3836 ;; Hardware stack levels used: 1
  3837 ;; This function calls:
  3838 ;;		Nothing
  3839 ;; This function is called by:
  3840 ;;		_Lcd_Cmd
  3841 ;;		_Lcd_Write_Char
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845                           
  3846                           ;psect for function _Lcd_Port
  3847  0F11                     _Lcd_Port:
  3848                           
  3849                           ;incstack = 0
  3850                           ; Regs used in _Lcd_Port: [wreg]
  3851                           ;Lcd_Port@a stored from wreg
  3852  0F11  00F0               	movwf	Lcd_Port@a
  3853  0F12                     l1576:
  3854                           
  3855                           ;LCD.c: 4:     PORTD = a;
  3856  0F12  0870               	movf	Lcd_Port@a,w
  3857  0F13  1283               	bcf	3,5	;RP0=0, select bank0
  3858  0F14  1303               	bcf	3,6	;RP1=0, select bank0
  3859  0F15  0088               	movwf	8	;volatile
  3860  0F16                     l216:
  3861  0F16  0008               	return
  3862  0F17                     __end_of_Lcd_Port:
  3863                           
  3864                           	psect	text20
  3865  046F                     __ptext20:	
  3866 ;; *************** function _LECT1 *****************
  3867 ;; Defined at:
  3868 ;;		line 279 in file "main.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;		None
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;		None
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  1    wreg      void 
  3875 ;; Registers used:
  3876 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3882 ;;      Params:         0       0       0       0       0
  3883 ;;      Locals:         0       0       0       0       0
  3884 ;;      Temps:          1       0       0       0       0
  3885 ;;      Totals:         1       0       0       0       0
  3886 ;;Total ram usage:        1 bytes
  3887 ;; Hardware stack levels used: 1
  3888 ;; Hardware stack levels required when called: 1
  3889 ;; This function calls:
  3890 ;;		_num_ascii
  3891 ;; This function is called by:
  3892 ;;		_main
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           
  3897                           ;psect for function _LECT1
  3898  046F                     _LECT1:
  3899  046F                     l1986:	
  3900                           ;incstack = 0
  3901                           ; Regs used in _LECT1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3902                           
  3903                           
  3904                           ;main.c: 280:     NUM = num_ascii(PARKH);
  3905  046F  1283               	bcf	3,5	;RP0=0, select bank0
  3906  0470  1303               	bcf	3,6	;RP1=0, select bank0
  3907  0471  0852               	movf	_PARKH,w
  3908  0472  120A  118A  2072  120A  118A  	fcall	_num_ascii
  3909  0477  00F3               	movwf	??_LECT1
  3910  0478  0873               	movf	??_LECT1,w
  3911  0479  1283               	bcf	3,5	;RP0=0, select bank0
  3912  047A  1303               	bcf	3,6	;RP1=0, select bank0
  3913  047B  00D1               	movwf	_NUM
  3914  047C                     l1988:
  3915                           
  3916                           ;main.c: 281:     if (DIA == 1){
  3917  047C  034F               	decf	_DIA,w
  3918  047D  1D03               	btfss	3,2
  3919  047E  2C80               	goto	u901
  3920  047F  2C81               	goto	u900
  3921  0480                     u901:
  3922  0480  2C8E               	goto	l1992
  3923  0481                     u900:
  3924  0481                     l1990:
  3925                           
  3926                           ;main.c: 282:         C1 = 0x4C;
  3927  0481  304C               	movlw	76
  3928  0482  00F3               	movwf	??_LECT1
  3929  0483  0873               	movf	??_LECT1,w
  3930  0484  00CB               	movwf	_C1
  3931                           
  3932                           ;main.c: 283:         C2 = 0x75;
  3933  0485  3075               	movlw	117
  3934  0486  00F3               	movwf	??_LECT1
  3935  0487  0873               	movf	??_LECT1,w
  3936  0488  00CA               	movwf	_C2
  3937                           
  3938                           ;main.c: 284:         C3 = 0x6E;
  3939  0489  306E               	movlw	110
  3940  048A  00F3               	movwf	??_LECT1
  3941  048B  0873               	movf	??_LECT1,w
  3942  048C  00C9               	movwf	_C3
  3943                           
  3944                           ;main.c: 285:     }
  3945  048D  2D02               	goto	l160
  3946  048E                     l1992:
  3947  048E  3002               	movlw	2
  3948  048F  064F               	xorwf	_DIA,w
  3949  0490  1D03               	btfss	3,2
  3950  0491  2C93               	goto	u911
  3951  0492  2C94               	goto	u910
  3952  0493                     u911:
  3953  0493  2CA1               	goto	l1996
  3954  0494                     u910:
  3955  0494                     l1994:
  3956                           
  3957                           ;main.c: 287:         C1 = 0x4D;
  3958  0494  304D               	movlw	77
  3959  0495  00F3               	movwf	??_LECT1
  3960  0496  0873               	movf	??_LECT1,w
  3961  0497  00CB               	movwf	_C1
  3962                           
  3963                           ;main.c: 288:         C2 = 0x61;
  3964  0498  3061               	movlw	97
  3965  0499  00F3               	movwf	??_LECT1
  3966  049A  0873               	movf	??_LECT1,w
  3967  049B  00CA               	movwf	_C2
  3968                           
  3969                           ;main.c: 289:         C3 = 0x72;
  3970  049C  3072               	movlw	114
  3971  049D  00F3               	movwf	??_LECT1
  3972  049E  0873               	movf	??_LECT1,w
  3973  049F  00C9               	movwf	_C3
  3974                           
  3975                           ;main.c: 290:     }
  3976  04A0  2D02               	goto	l160
  3977  04A1                     l1996:
  3978  04A1  3003               	movlw	3
  3979  04A2  064F               	xorwf	_DIA,w
  3980  04A3  1D03               	btfss	3,2
  3981  04A4  2CA6               	goto	u921
  3982  04A5  2CA7               	goto	u920
  3983  04A6                     u921:
  3984  04A6  2CB4               	goto	l2000
  3985  04A7                     u920:
  3986  04A7                     l1998:
  3987                           
  3988                           ;main.c: 292:         C1 = 0x4D;
  3989  04A7  304D               	movlw	77
  3990  04A8  00F3               	movwf	??_LECT1
  3991  04A9  0873               	movf	??_LECT1,w
  3992  04AA  00CB               	movwf	_C1
  3993                           
  3994                           ;main.c: 293:         C2 = 0x69;
  3995  04AB  3069               	movlw	105
  3996  04AC  00F3               	movwf	??_LECT1
  3997  04AD  0873               	movf	??_LECT1,w
  3998  04AE  00CA               	movwf	_C2
  3999                           
  4000                           ;main.c: 294:         C3 = 0x65;
  4001  04AF  3065               	movlw	101
  4002  04B0  00F3               	movwf	??_LECT1
  4003  04B1  0873               	movf	??_LECT1,w
  4004  04B2  00C9               	movwf	_C3
  4005                           
  4006                           ;main.c: 295:     }
  4007  04B3  2D02               	goto	l160
  4008  04B4                     l2000:
  4009  04B4  3004               	movlw	4
  4010  04B5  064F               	xorwf	_DIA,w
  4011  04B6  1D03               	btfss	3,2
  4012  04B7  2CB9               	goto	u931
  4013  04B8  2CBA               	goto	u930
  4014  04B9                     u931:
  4015  04B9  2CC7               	goto	l2004
  4016  04BA                     u930:
  4017  04BA                     l2002:
  4018                           
  4019                           ;main.c: 297:         C1 = 0x4A;
  4020  04BA  304A               	movlw	74
  4021  04BB  00F3               	movwf	??_LECT1
  4022  04BC  0873               	movf	??_LECT1,w
  4023  04BD  00CB               	movwf	_C1
  4024                           
  4025                           ;main.c: 298:         C2 = 0x75;
  4026  04BE  3075               	movlw	117
  4027  04BF  00F3               	movwf	??_LECT1
  4028  04C0  0873               	movf	??_LECT1,w
  4029  04C1  00CA               	movwf	_C2
  4030                           
  4031                           ;main.c: 299:         C3 = 0x65;
  4032  04C2  3065               	movlw	101
  4033  04C3  00F3               	movwf	??_LECT1
  4034  04C4  0873               	movf	??_LECT1,w
  4035  04C5  00C9               	movwf	_C3
  4036                           
  4037                           ;main.c: 300:     }
  4038  04C6  2D02               	goto	l160
  4039  04C7                     l2004:
  4040  04C7  3005               	movlw	5
  4041  04C8  064F               	xorwf	_DIA,w
  4042  04C9  1D03               	btfss	3,2
  4043  04CA  2CCC               	goto	u941
  4044  04CB  2CCD               	goto	u940
  4045  04CC                     u941:
  4046  04CC  2CDA               	goto	l2008
  4047  04CD                     u940:
  4048  04CD                     l2006:
  4049                           
  4050                           ;main.c: 302:         C1 = 0x56;
  4051  04CD  3056               	movlw	86
  4052  04CE  00F3               	movwf	??_LECT1
  4053  04CF  0873               	movf	??_LECT1,w
  4054  04D0  00CB               	movwf	_C1
  4055                           
  4056                           ;main.c: 303:         C2 = 0x69;
  4057  04D1  3069               	movlw	105
  4058  04D2  00F3               	movwf	??_LECT1
  4059  04D3  0873               	movf	??_LECT1,w
  4060  04D4  00CA               	movwf	_C2
  4061                           
  4062                           ;main.c: 304:         C3 = 0x65;
  4063  04D5  3065               	movlw	101
  4064  04D6  00F3               	movwf	??_LECT1
  4065  04D7  0873               	movf	??_LECT1,w
  4066  04D8  00C9               	movwf	_C3
  4067                           
  4068                           ;main.c: 305:     }
  4069  04D9  2D02               	goto	l160
  4070  04DA                     l2008:
  4071  04DA  3006               	movlw	6
  4072  04DB  064F               	xorwf	_DIA,w
  4073  04DC  1D03               	btfss	3,2
  4074  04DD  2CDF               	goto	u951
  4075  04DE  2CE0               	goto	u950
  4076  04DF                     u951:
  4077  04DF  2CED               	goto	l2012
  4078  04E0                     u950:
  4079  04E0                     l2010:
  4080                           
  4081                           ;main.c: 307:         C1 = 0x53;
  4082  04E0  3053               	movlw	83
  4083  04E1  00F3               	movwf	??_LECT1
  4084  04E2  0873               	movf	??_LECT1,w
  4085  04E3  00CB               	movwf	_C1
  4086                           
  4087                           ;main.c: 308:         C2 = 0x61;
  4088  04E4  3061               	movlw	97
  4089  04E5  00F3               	movwf	??_LECT1
  4090  04E6  0873               	movf	??_LECT1,w
  4091  04E7  00CA               	movwf	_C2
  4092                           
  4093                           ;main.c: 309:         C3 = 0x62;
  4094  04E8  3062               	movlw	98
  4095  04E9  00F3               	movwf	??_LECT1
  4096  04EA  0873               	movf	??_LECT1,w
  4097  04EB  00C9               	movwf	_C3
  4098                           
  4099                           ;main.c: 310:     }
  4100  04EC  2D02               	goto	l160
  4101  04ED                     l2012:
  4102  04ED  3007               	movlw	7
  4103  04EE  064F               	xorwf	_DIA,w
  4104  04EF  1D03               	btfss	3,2
  4105  04F0  2CF2               	goto	u961
  4106  04F1  2CF3               	goto	u960
  4107  04F2                     u961:
  4108  04F2  2D02               	goto	l166
  4109  04F3                     u960:
  4110  04F3                     l2014:
  4111                           
  4112                           ;main.c: 312:         C1 = 0x44;
  4113  04F3  3044               	movlw	68
  4114  04F4  00F3               	movwf	??_LECT1
  4115  04F5  0873               	movf	??_LECT1,w
  4116  04F6  00CB               	movwf	_C1
  4117                           
  4118                           ;main.c: 313:         C2 = 0x6F;
  4119  04F7  306F               	movlw	111
  4120  04F8  00F3               	movwf	??_LECT1
  4121  04F9  0873               	movf	??_LECT1,w
  4122  04FA  00CA               	movwf	_C2
  4123                           
  4124                           ;main.c: 314:         C3 = 0x6D;
  4125  04FB  306D               	movlw	109
  4126  04FC  00F3               	movwf	??_LECT1
  4127  04FD  0873               	movf	??_LECT1,w
  4128  04FE  00C9               	movwf	_C3
  4129  04FF                     l2016:
  4130                           
  4131                           ;main.c: 315:         CERRADO = 1;
  4132  04FF  01C4               	clrf	_CERRADO
  4133  0500  0AC4               	incf	_CERRADO,f
  4134  0501  2D02               	goto	l160
  4135  0502                     l166:
  4136  0502                     l160:
  4137                           
  4138                           ;main.c: 317:     if (HORA<10){
  4139  0502  300A               	movlw	10
  4140  0503  024E               	subwf	_HORA,w
  4141  0504  1803               	skipnc
  4142  0505  2D07               	goto	u971
  4143  0506  2D08               	goto	u970
  4144  0507                     u971:
  4145  0507  2D2B               	goto	l2034
  4146  0508                     u970:
  4147  0508                     l2018:
  4148                           
  4149                           ;main.c: 318:         DH = 0x30;
  4150  0508  3030               	movlw	48
  4151  0509  00F3               	movwf	??_LECT1
  4152  050A  0873               	movf	??_LECT1,w
  4153  050B  00C7               	movwf	_DH
  4154  050C                     l2020:
  4155                           
  4156                           ;main.c: 319:         UH = num_ascii(HORA);
  4157  050C  084E               	movf	_HORA,w
  4158  050D  120A  118A  2072  120A  118A  	fcall	_num_ascii
  4159  0512  00F3               	movwf	??_LECT1
  4160  0513  0873               	movf	??_LECT1,w
  4161  0514  1283               	bcf	3,5	;RP0=0, select bank0
  4162  0515  1303               	bcf	3,6	;RP1=0, select bank0
  4163  0516  00C8               	movwf	_UH
  4164  0517                     l2022:
  4165                           
  4166                           ;main.c: 320:         if (HORA<7){
  4167  0517  3007               	movlw	7
  4168  0518  024E               	subwf	_HORA,w
  4169  0519  1803               	skipnc
  4170  051A  2D1C               	goto	u981
  4171  051B  2D1D               	goto	u980
  4172  051C                     u981:
  4173  051C  2D22               	goto	l2028
  4174  051D                     u980:
  4175  051D                     l2024:
  4176                           
  4177                           ;main.c: 321:             PORTB = 0b00111111;
  4178  051D  303F               	movlw	63
  4179  051E  0086               	movwf	6	;volatile
  4180  051F                     l2026:
  4181                           
  4182                           ;main.c: 322:             CERRADO = 1;
  4183  051F  01C4               	clrf	_CERRADO
  4184  0520  0AC4               	incf	_CERRADO,f
  4185                           
  4186                           ;main.c: 323:         }
  4187  0521  2D7B               	goto	l2068
  4188  0522                     l2028:
  4189                           
  4190                           ;main.c: 325:             PORTB = 0;
  4191  0522  0186               	clrf	6	;volatile
  4192  0523                     l2030:
  4193                           
  4194                           ;main.c: 326:             if (DIA!=7){
  4195  0523  3007               	movlw	7
  4196  0524  064F               	xorwf	_DIA,w
  4197  0525  1903               	btfsc	3,2
  4198  0526  2D28               	goto	u991
  4199  0527  2D29               	goto	u990
  4200  0528                     u991:
  4201  0528  2D7B               	goto	l2068
  4202  0529                     u990:
  4203  0529                     l2032:
  4204                           
  4205                           ;main.c: 327:                 CERRADO = 0;
  4206  0529  01C4               	clrf	_CERRADO
  4207  052A  2D7B               	goto	l2068
  4208  052B                     l2034:
  4209  052B  301A               	movlw	26
  4210  052C  024E               	subwf	_HORA,w
  4211  052D  1803               	skipnc
  4212  052E  2D30               	goto	u1001
  4213  052F  2D31               	goto	u1000
  4214  0530                     u1001:
  4215  0530  2D57               	goto	l2052
  4216  0531                     u1000:
  4217  0531                     l2036:
  4218                           
  4219                           ;main.c: 332:         DH = 0x31;
  4220  0531  3031               	movlw	49
  4221  0532  00F3               	movwf	??_LECT1
  4222  0533  0873               	movf	??_LECT1,w
  4223  0534  00C7               	movwf	_DH
  4224  0535                     l2038:
  4225                           
  4226                           ;main.c: 333:         con = HORA-16;
  4227  0535  084E               	movf	_HORA,w
  4228  0536  3EF0               	addlw	240
  4229  0537  00F3               	movwf	??_LECT1
  4230  0538  0873               	movf	??_LECT1,w
  4231  0539  00C3               	movwf	_con
  4232  053A                     l2040:
  4233                           
  4234                           ;main.c: 334:         UH = num_ascii(con);
  4235  053A  0843               	movf	_con,w
  4236  053B  120A  118A  2072  120A  118A  	fcall	_num_ascii
  4237  0540  00F3               	movwf	??_LECT1
  4238  0541  0873               	movf	??_LECT1,w
  4239  0542  1283               	bcf	3,5	;RP0=0, select bank0
  4240  0543  1303               	bcf	3,6	;RP1=0, select bank0
  4241  0544  00C8               	movwf	_UH
  4242  0545                     l2042:
  4243                           
  4244                           ;main.c: 335:         if (DIA!=7){
  4245  0545  3007               	movlw	7
  4246  0546  064F               	xorwf	_DIA,w
  4247  0547  1903               	btfsc	3,2
  4248  0548  2D4A               	goto	u1011
  4249  0549  2D4B               	goto	u1010
  4250  054A                     u1011:
  4251  054A  2D4C               	goto	l2046
  4252  054B                     u1010:
  4253  054B                     l2044:
  4254                           
  4255                           ;main.c: 336:             CERRADO = 0;
  4256  054B  01C4               	clrf	_CERRADO
  4257  054C                     l2046:
  4258                           
  4259                           ;main.c: 338:         if (con>7){
  4260  054C  3008               	movlw	8
  4261  054D  0243               	subwf	_con,w
  4262  054E  1C03               	skipc
  4263  054F  2D51               	goto	u1021
  4264  0550  2D52               	goto	u1020
  4265  0551                     u1021:
  4266  0551  2D55               	goto	l2050
  4267  0552                     u1020:
  4268  0552                     l2048:
  4269                           
  4270                           ;main.c: 339:             PORTB = 0b00111111;
  4271  0552  303F               	movlw	63
  4272  0553  0086               	movwf	6	;volatile
  4273                           
  4274                           ;main.c: 340:         }
  4275  0554  2D7B               	goto	l2068
  4276  0555                     l2050:
  4277                           
  4278                           ;main.c: 342:             PORTB = 0;
  4279  0555  0186               	clrf	6	;volatile
  4280  0556  2D7B               	goto	l2068
  4281  0557                     l2052:
  4282                           
  4283                           ;main.c: 346:         DH = 0x32;
  4284  0557  3032               	movlw	50
  4285  0558  00F3               	movwf	??_LECT1
  4286  0559  0873               	movf	??_LECT1,w
  4287  055A  00C7               	movwf	_DH
  4288  055B                     l2054:
  4289                           
  4290                           ;main.c: 347:         con = HORA-32;
  4291  055B  084E               	movf	_HORA,w
  4292  055C  3EE0               	addlw	224
  4293  055D  00F3               	movwf	??_LECT1
  4294  055E  0873               	movf	??_LECT1,w
  4295  055F  00C3               	movwf	_con
  4296  0560                     l2056:
  4297                           
  4298                           ;main.c: 348:         UH = num_ascii(con);
  4299  0560  0843               	movf	_con,w
  4300  0561  120A  118A  2072  120A  118A  	fcall	_num_ascii
  4301  0566  00F3               	movwf	??_LECT1
  4302  0567  0873               	movf	??_LECT1,w
  4303  0568  1283               	bcf	3,5	;RP0=0, select bank0
  4304  0569  1303               	bcf	3,6	;RP1=0, select bank0
  4305  056A  00C8               	movwf	_UH
  4306  056B                     l2058:
  4307                           
  4308                           ;main.c: 349:         PORTB = 0b00111111;
  4309  056B  303F               	movlw	63
  4310  056C  0086               	movwf	6	;volatile
  4311  056D                     l2060:
  4312                           
  4313                           ;main.c: 350:         if (con>1){
  4314  056D  3002               	movlw	2
  4315  056E  0243               	subwf	_con,w
  4316  056F  1C03               	skipc
  4317  0570  2D72               	goto	u1031
  4318  0571  2D73               	goto	u1030
  4319  0572                     u1031:
  4320  0572  2D74               	goto	l2064
  4321  0573                     u1030:
  4322  0573  2D1F               	goto	l2026
  4323  0574                     l2064:
  4324                           
  4325                           ;main.c: 354:             if (DIA!=7){
  4326  0574  3007               	movlw	7
  4327  0575  064F               	xorwf	_DIA,w
  4328  0576  1903               	btfsc	3,2
  4329  0577  2D79               	goto	u1041
  4330  0578  2D7A               	goto	u1040
  4331  0579                     u1041:
  4332  0579  2D7B               	goto	l2068
  4333  057A                     u1040:
  4334  057A  2D29               	goto	l2032
  4335  057B                     l2068:
  4336                           
  4337                           ;main.c: 359:     if (MIN<10){
  4338  057B  300A               	movlw	10
  4339  057C  024D               	subwf	_MIN,w
  4340  057D  1803               	skipnc
  4341  057E  2D80               	goto	u1051
  4342  057F  2D81               	goto	u1050
  4343  0580                     u1051:
  4344  0580  2D91               	goto	l2074
  4345  0581                     u1050:
  4346  0581                     l2070:
  4347                           
  4348                           ;main.c: 360:         DM = 0x30;
  4349  0581  3030               	movlw	48
  4350  0582  00F3               	movwf	??_LECT1
  4351  0583  0873               	movf	??_LECT1,w
  4352  0584  00C5               	movwf	_DM
  4353  0585                     l2072:
  4354                           
  4355                           ;main.c: 361:         UM = num_ascii(MIN);
  4356  0585  084D               	movf	_MIN,w
  4357  0586  120A  118A  2072  120A  118A  	fcall	_num_ascii
  4358  058B  00F3               	movwf	??_LECT1
  4359  058C  0873               	movf	??_LECT1,w
  4360  058D  1283               	bcf	3,5	;RP0=0, select bank0
  4361  058E  1303               	bcf	3,6	;RP1=0, select bank0
  4362  058F  00C6               	movwf	_UM
  4363                           
  4364                           ;main.c: 362:     }
  4365  0590  2E18               	goto	l196
  4366  0591                     l2074:
  4367  0591  301A               	movlw	26
  4368  0592  024D               	subwf	_MIN,w
  4369  0593  1803               	skipnc
  4370  0594  2D96               	goto	u1061
  4371  0595  2D97               	goto	u1060
  4372  0596                     u1061:
  4373  0596  2DAC               	goto	l2082
  4374  0597                     u1060:
  4375  0597                     l2076:
  4376                           
  4377                           ;main.c: 364:         DM = 0x31;
  4378  0597  3031               	movlw	49
  4379  0598  00F3               	movwf	??_LECT1
  4380  0599  0873               	movf	??_LECT1,w
  4381  059A  00C5               	movwf	_DM
  4382  059B                     l2078:
  4383                           
  4384                           ;main.c: 365:         con = MIN-16;
  4385  059B  084D               	movf	_MIN,w
  4386  059C  3EF0               	addlw	240
  4387  059D  00F3               	movwf	??_LECT1
  4388  059E  0873               	movf	??_LECT1,w
  4389  059F  00C3               	movwf	_con
  4390  05A0                     l2080:
  4391                           
  4392                           ;main.c: 366:         UM = num_ascii(con);
  4393  05A0  0843               	movf	_con,w
  4394  05A1  120A  118A  2072  120A  118A  	fcall	_num_ascii
  4395  05A6  00F3               	movwf	??_LECT1
  4396  05A7  0873               	movf	??_LECT1,w
  4397  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  4398  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  4399  05AA  00C6               	movwf	_UM
  4400                           
  4401                           ;main.c: 367:     }
  4402  05AB  2E18               	goto	l196
  4403  05AC                     l2082:
  4404  05AC  302A               	movlw	42
  4405  05AD  024D               	subwf	_MIN,w
  4406  05AE  1803               	skipnc
  4407  05AF  2DB1               	goto	u1071
  4408  05B0  2DB2               	goto	u1070
  4409  05B1                     u1071:
  4410  05B1  2DC7               	goto	l2090
  4411  05B2                     u1070:
  4412  05B2                     l2084:
  4413                           
  4414                           ;main.c: 369:         DM = 0x32;
  4415  05B2  3032               	movlw	50
  4416  05B3  00F3               	movwf	??_LECT1
  4417  05B4  0873               	movf	??_LECT1,w
  4418  05B5  00C5               	movwf	_DM
  4419  05B6                     l2086:
  4420                           
  4421                           ;main.c: 370:         con = MIN-32;
  4422  05B6  084D               	movf	_MIN,w
  4423  05B7  3EE0               	addlw	224
  4424  05B8  00F3               	movwf	??_LECT1
  4425  05B9  0873               	movf	??_LECT1,w
  4426  05BA  00C3               	movwf	_con
  4427  05BB                     l2088:
  4428                           
  4429                           ;main.c: 371:         UM = num_ascii(con);
  4430  05BB  0843               	movf	_con,w
  4431  05BC  120A  118A  2072  120A  118A  	fcall	_num_ascii
  4432  05C1  00F3               	movwf	??_LECT1
  4433  05C2  0873               	movf	??_LECT1,w
  4434  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  4435  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  4436  05C5  00C6               	movwf	_UM
  4437                           
  4438                           ;main.c: 372:     }
  4439  05C6  2E18               	goto	l196
  4440  05C7                     l2090:
  4441  05C7  303A               	movlw	58
  4442  05C8  024D               	subwf	_MIN,w
  4443  05C9  1803               	skipnc
  4444  05CA  2DCC               	goto	u1081
  4445  05CB  2DCD               	goto	u1080
  4446  05CC                     u1081:
  4447  05CC  2DE2               	goto	l2098
  4448  05CD                     u1080:
  4449  05CD                     l2092:
  4450                           
  4451                           ;main.c: 374:         DM = 0x33;
  4452  05CD  3033               	movlw	51
  4453  05CE  00F3               	movwf	??_LECT1
  4454  05CF  0873               	movf	??_LECT1,w
  4455  05D0  00C5               	movwf	_DM
  4456  05D1                     l2094:
  4457                           
  4458                           ;main.c: 375:         con = MIN-32-16;
  4459  05D1  084D               	movf	_MIN,w
  4460  05D2  3ED0               	addlw	208
  4461  05D3  00F3               	movwf	??_LECT1
  4462  05D4  0873               	movf	??_LECT1,w
  4463  05D5  00C3               	movwf	_con
  4464  05D6                     l2096:
  4465                           
  4466                           ;main.c: 376:         UM = num_ascii(con);
  4467  05D6  0843               	movf	_con,w
  4468  05D7  120A  118A  2072  120A  118A  	fcall	_num_ascii
  4469  05DC  00F3               	movwf	??_LECT1
  4470  05DD  0873               	movf	??_LECT1,w
  4471  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  4472  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  4473  05E0  00C6               	movwf	_UM
  4474                           
  4475                           ;main.c: 377:     }
  4476  05E1  2E18               	goto	l196
  4477  05E2                     l2098:
  4478  05E2  304A               	movlw	74
  4479  05E3  024D               	subwf	_MIN,w
  4480  05E4  1803               	skipnc
  4481  05E5  2DE7               	goto	u1091
  4482  05E6  2DE8               	goto	u1090
  4483  05E7                     u1091:
  4484  05E7  2DFD               	goto	l2106
  4485  05E8                     u1090:
  4486  05E8                     l2100:
  4487                           
  4488                           ;main.c: 379:         DM = 0x34;
  4489  05E8  3034               	movlw	52
  4490  05E9  00F3               	movwf	??_LECT1
  4491  05EA  0873               	movf	??_LECT1,w
  4492  05EB  00C5               	movwf	_DM
  4493  05EC                     l2102:
  4494                           
  4495                           ;main.c: 380:         con = MIN-64;
  4496  05EC  084D               	movf	_MIN,w
  4497  05ED  3EC0               	addlw	192
  4498  05EE  00F3               	movwf	??_LECT1
  4499  05EF  0873               	movf	??_LECT1,w
  4500  05F0  00C3               	movwf	_con
  4501  05F1                     l2104:
  4502                           
  4503                           ;main.c: 381:         UM = num_ascii(con);
  4504  05F1  0843               	movf	_con,w
  4505  05F2  120A  118A  2072  120A  118A  	fcall	_num_ascii
  4506  05F7  00F3               	movwf	??_LECT1
  4507  05F8  0873               	movf	??_LECT1,w
  4508  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  4509  05FA  1303               	bcf	3,6	;RP1=0, select bank0
  4510  05FB  00C6               	movwf	_UM
  4511                           
  4512                           ;main.c: 382:     }
  4513  05FC  2E18               	goto	l196
  4514  05FD                     l2106:
  4515  05FD  305A               	movlw	90
  4516  05FE  024D               	subwf	_MIN,w
  4517  05FF  1803               	skipnc
  4518  0600  2E02               	goto	u1101
  4519  0601  2E03               	goto	u1100
  4520  0602                     u1101:
  4521  0602  2E18               	goto	l190
  4522  0603                     u1100:
  4523  0603                     l2108:
  4524                           
  4525                           ;main.c: 384:         DM = 0x35;
  4526  0603  3035               	movlw	53
  4527  0604  00F3               	movwf	??_LECT1
  4528  0605  0873               	movf	??_LECT1,w
  4529  0606  00C5               	movwf	_DM
  4530  0607                     l2110:
  4531                           
  4532                           ;main.c: 385:         con = MIN-64-16;
  4533  0607  084D               	movf	_MIN,w
  4534  0608  3EB0               	addlw	176
  4535  0609  00F3               	movwf	??_LECT1
  4536  060A  0873               	movf	??_LECT1,w
  4537  060B  00C3               	movwf	_con
  4538  060C                     l2112:
  4539                           
  4540                           ;main.c: 386:         UM = num_ascii(con);
  4541  060C  0843               	movf	_con,w
  4542  060D  120A  118A  2072  120A  118A  	fcall	_num_ascii
  4543  0612  00F3               	movwf	??_LECT1
  4544  0613  0873               	movf	??_LECT1,w
  4545  0614  1283               	bcf	3,5	;RP0=0, select bank0
  4546  0615  1303               	bcf	3,6	;RP1=0, select bank0
  4547  0616  00C6               	movwf	_UM
  4548  0617  2E18               	goto	l196
  4549  0618                     l190:
  4550  0618                     l196:
  4551  0618  0008               	return
  4552  0619                     __end_of_LECT1:
  4553                           
  4554                           	psect	text21
  4555  0072                     __ptext21:	
  4556 ;; *************** function _num_ascii *****************
  4557 ;; Defined at:
  4558 ;;		line 3 in file "ASCII.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;  num             1    wreg     unsigned char 
  4561 ;; Auto vars:     Size  Location     Type
  4562 ;;  num             1    2[COMMON] unsigned char 
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  1    wreg      unsigned char 
  4565 ;; Registers used:
  4566 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4572 ;;      Params:         0       0       0       0       0
  4573 ;;      Locals:         1       0       0       0       0
  4574 ;;      Temps:          2       0       0       0       0
  4575 ;;      Totals:         3       0       0       0       0
  4576 ;;Total ram usage:        3 bytes
  4577 ;; Hardware stack levels used: 1
  4578 ;; This function calls:
  4579 ;;		Nothing
  4580 ;; This function is called by:
  4581 ;;		_LECT1
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           
  4586                           ;psect for function _num_ascii
  4587  0072                     _num_ascii:
  4588                           
  4589                           ;incstack = 0
  4590                           ; Regs used in _num_ascii: [wreg-fsr0h+status,2+status,0]
  4591                           ;num_ascii@num stored from wreg
  4592  0072  00F2               	movwf	num_ascii@num
  4593  0073                     l1668:
  4594                           
  4595                           ;ASCII.c: 4:  switch(num){
  4596  0073  2888               	goto	l1738
  4597  0074                     l1670:
  4598                           
  4599                           ;ASCII.c: 6:   return 0x30;
  4600  0074  3030               	movlw	48
  4601  0075  28B0               	goto	l251
  4602  0076                     l1682:
  4603                           
  4604                           ;ASCII.c: 14:   return 0x31;
  4605  0076  3031               	movlw	49
  4606  0077  28B0               	goto	l251
  4607  0078                     l1688:
  4608                           
  4609                           ;ASCII.c: 18:   return 0x32;
  4610  0078  3032               	movlw	50
  4611  0079  28B0               	goto	l251
  4612  007A                     l1694:
  4613                           
  4614                           ;ASCII.c: 22:   return 0x33;
  4615  007A  3033               	movlw	51
  4616  007B  28B0               	goto	l251
  4617  007C                     l1700:
  4618                           
  4619                           ;ASCII.c: 26:   return 0x34;
  4620  007C  3034               	movlw	52
  4621  007D  28B0               	goto	l251
  4622  007E                     l1706:
  4623                           
  4624                           ;ASCII.c: 30:   return 0x35;
  4625  007E  3035               	movlw	53
  4626  007F  28B0               	goto	l251
  4627  0080                     l1712:
  4628                           
  4629                           ;ASCII.c: 34:   return 0x36;
  4630  0080  3036               	movlw	54
  4631  0081  28B0               	goto	l251
  4632  0082                     l1718:
  4633                           
  4634                           ;ASCII.c: 38:   return 0x37;
  4635  0082  3037               	movlw	55
  4636  0083  28B0               	goto	l251
  4637  0084                     l1724:
  4638                           
  4639                           ;ASCII.c: 42:   return 0x38;
  4640  0084  3038               	movlw	56
  4641  0085  28B0               	goto	l251
  4642  0086                     l1730:
  4643                           
  4644                           ;ASCII.c: 46:   return 0x39;
  4645  0086  3039               	movlw	57
  4646  0087  28B0               	goto	l251
  4647  0088                     l1738:
  4648  0088  0872               	movf	num_ascii@num,w
  4649  0089  00F0               	movwf	??_num_ascii
  4650  008A  01F1               	clrf	??_num_ascii+1
  4651                           
  4652                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4653                           ; Switch size 1, requested type "simple"
  4654                           ; Number of cases is 1, Range of values is 0 to 0
  4655                           ; switch strategies available:
  4656                           ; Name         Instructions Cycles
  4657                           ; simple_byte            4     3 (average)
  4658                           ; direct_byte           11     8 (fixed)
  4659                           ; jumptable            260     6 (fixed)
  4660                           ;	Chosen strategy is simple_byte
  4661  008B  0871               	movf	??_num_ascii+1,w
  4662  008C  3A00               	xorlw	0	; case 0
  4663  008D  1903               	skipnz
  4664  008E  2890               	goto	l2278
  4665  008F  2874               	goto	l1670
  4666  0090                     l2278:
  4667                           
  4668                           ; Switch size 1, requested type "simple"
  4669                           ; Number of cases is 10, Range of values is 0 to 9
  4670                           ; switch strategies available:
  4671                           ; Name         Instructions Cycles
  4672                           ; simple_byte           31    16 (average)
  4673                           ; direct_byte           38     8 (fixed)
  4674                           ; jumptable            260     6 (fixed)
  4675                           ;	Chosen strategy is simple_byte
  4676  0090  0870               	movf	??_num_ascii,w
  4677  0091  3A00               	xorlw	0	; case 0
  4678  0092  1903               	skipnz
  4679  0093  2874               	goto	l1670
  4680  0094  3A01               	xorlw	1	; case 1
  4681  0095  1903               	skipnz
  4682  0096  2876               	goto	l1682
  4683  0097  3A03               	xorlw	3	; case 2
  4684  0098  1903               	skipnz
  4685  0099  2878               	goto	l1688
  4686  009A  3A01               	xorlw	1	; case 3
  4687  009B  1903               	skipnz
  4688  009C  287A               	goto	l1694
  4689  009D  3A07               	xorlw	7	; case 4
  4690  009E  1903               	skipnz
  4691  009F  287C               	goto	l1700
  4692  00A0  3A01               	xorlw	1	; case 5
  4693  00A1  1903               	skipnz
  4694  00A2  287E               	goto	l1706
  4695  00A3  3A03               	xorlw	3	; case 6
  4696  00A4  1903               	skipnz
  4697  00A5  2880               	goto	l1712
  4698  00A6  3A01               	xorlw	1	; case 7
  4699  00A7  1903               	skipnz
  4700  00A8  2882               	goto	l1718
  4701  00A9  3A0F               	xorlw	15	; case 8
  4702  00AA  1903               	skipnz
  4703  00AB  2884               	goto	l1724
  4704  00AC  3A01               	xorlw	1	; case 9
  4705  00AD  1903               	skipnz
  4706  00AE  2886               	goto	l1730
  4707  00AF  2874               	goto	l1670
  4708  00B0                     l251:
  4709  00B0  0008               	return
  4710  00B1                     __end_of_num_ascii:
  4711  007E                     btemp	set	126	;btemp
  4712  007E                     wtemp0	set	126
  4713                           
  4714                           	psect	config
  4715                           
  4716                           ;Config register CONFIG1 @ 0x2007
  4717                           ;	Oscillator Selection bits
  4718                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4719                           ;	Watchdog Timer Enable bit
  4720                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4721                           ;	Power-up Timer Enable bit
  4722                           ;	PWRTE = OFF, PWRT disabled
  4723                           ;	RE3/MCLR pin function select bit
  4724                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4725                           ;	Code Protection bit
  4726                           ;	CP = OFF, Program memory code protection is disabled
  4727                           ;	Data Code Protection bit
  4728                           ;	CPD = OFF, Data memory code protection is disabled
  4729                           ;	Brown Out Reset Selection bits
  4730                           ;	BOREN = OFF, BOR disabled
  4731                           ;	Internal External Switchover bit
  4732                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4733                           ;	Fail-Safe Clock Monitor Enabled bit
  4734                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4735                           ;	Low Voltage Programming Enable bit
  4736                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4737                           ;	In-Circuit Debugger Mode bit
  4738                           ;	DEBUG = 0x1, unprogrammed default
  4739  2007                     	org	8199
  4740  2007  20D4               	dw	8404
  4741                           
  4742                           ;Config register CONFIG2 @ 0x2008
  4743                           ;	Brown-out Reset Selection bit
  4744                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4745                           ;	Flash Program Memory Self Write Enable bits
  4746                           ;	WRT = OFF, Write protection off
  4747  2008                     	org	8200
  4748  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     34      51
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> conver1@temporal(BANK0[16]), conver@temporal_196(BANK0[16]), conver@temporal(BANK0[16]), 

    sp__conver	PTR const unsigned char  size(1) Largest target is 16
		 -> conver@temporal_196(BANK0[16]), conver@temporal(BANK0[16]), 

    sp__conver1	PTR const unsigned char  size(1) Largest target is 16
		 -> conver1@temporal(BANK0[16]), 


Critical Paths under _main in COMMON

    _I2C_Master_Init->___lldiv
    _conver1->___awmod
    ___awmod->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _LECT1->_num_ascii

Critical Paths under _main in BANK0

    _main->_conver
    _setup->_I2C_Master_Init
    _conver1->___awmod

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9451
                                             32 BANK0      2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                              _LECT1
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                             _conver
                            _conver1
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0    3541
                                              8 BANK0      2     2      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _osc_config
 ---------------------------------------------------------------------------------
 (2) _osc_config                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    2378
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     729
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _conver1                                             19    19      0    1437
                                              2 BANK0     19    19      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _conver                                              33    33      0     770
                                              0 COMMON     1     1      0
                                              0 BANK0     32    32      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     200
                                              3 COMMON     4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     330
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LECT1                                                1     1      0      22
                                              3 COMMON     1     1      0
                          _num_ascii
 ---------------------------------------------------------------------------------
 (2) _num_ascii                                            3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _LECT1
     _num_ascii
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _conver
   _conver1
     ___awdiv
     ___awmod
       ___awdiv (ARG)
   _setup
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Read
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _osc_config

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      41       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     22      33       5       63.7%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      41      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Aug 24 20:16:10 2021

                       _C1 004B                         _C2 004A                         _C3 0049  
                       l32 0F3B                         l50 0FF7                         l35 0F47  
                       l51 0FFA                         l52 0FFF                         l44 0F30  
                       _DH 0047                         l29 0071                         l38 0F27  
                       l47 0F3A                         _DM 0045                         _UH 0048  
                       _UM 0046               ___awdiv@sign 0076                         fsr 0004  
                      l231 0F8C                        l207 0039                        l160 0502  
                      l216 0F16                        l240 0FAD                        l152 02DA  
                      l234 0F5B                        l251 00B0                        l219 0F73  
                      l228 0FD1                        l156 024F                        l148 046E  
                      l501 01D8                        l190 0618                        l166 0502  
                      l514 010B                        l196 0618                        l384 0171  
                      _DIA 004F                        _GIE 005F                        _MIN 004D  
                      u600 0130                        u601 012F                        u620 014B  
                      u621 014A                        u710 01A5                        u711 01A4  
                      u615 0132                        u640 0169                        u560 0F41  
                      u705 0197                        u641 0168                        u625 0147  
                      u561 0F40                        u730 01B6                        u810 00E0  
                      u650 0051                        u570 0F47                        u731 01B5  
                      u811 00DF                        u635 015B                        u571 0F46  
                      u900 0481                        u820 00EA                        u580 011C  
                      u660 0FF3                        u901 0480                        u725 01A6  
                      u821 00E9                        u805 00D2                        u581 011B  
                      u661 0FF2                        u910 0494                        u750 01CA  
                      u670 0177                        u911 0493                        u751 01C9  
                      u735 01B2                        u671 0176                        u655 004C  
                      u920 04A7                        u760 01CF                        u680 0182  
                      u840 00FD                        u921 04A6                        u761 01CE  
                      u745 01BE                        u681 0181                        u841 00FC  
                      u825 00E6                        u930 04BA                        u690 0193  
                      u850 0102                        u770 00B8                        u931 04B9  
                      u691 0192                        u851 0101                        u835 00F1  
                      u771 00B7                        u595 0121                        u940 04CD  
                      u860 0FB4                        u780 00C3                        u941 04CC  
                      u861 0FB3                        u781 00C2                        u950 04E0  
                      u870 0FC6                        u790 00CE                        u951 04DF  
                      u871 0FC5                        u791 00CD                        _NUM 0051  
                      u960 04F3                        u880 0FAD                        u961 04F2  
                      u881 0FAC                        u970 0508                        u890 0257  
                      u971 0507                        u891 0256                        u980 051D  
                      u981 051C                        u990 0529                        u991 0528  
                      _con 0043                        fsr0 0004                        indf 0000  
             ___awmod@sign 0021                       l2000 04B4                       l2010 04E0  
                     l2002 04BA                       l2100 05E8                       l2020 050C  
                     l2012 04ED                       l2004 04C7                       l2110 0607  
                     l2102 05EC                       l2030 0523                       l2022 0517  
                     l2014 04F3                       l2006 04CD                       l2112 060C  
                     l2104 05F1                       l2040 053A                       l2032 0529  
                     l2024 051D                       l2016 04FF                       l2008 04DA  
                     l2200 0770                       l2120 061E                       l2106 05FD  
                     l2050 0555                       l2042 0545                       l2026 051F  
                     l2018 0508                       l2034 052B                       l2210 079C  
                     l2202 0775                       l2130 064C                       l2122 0623  
                     l2108 0603                       l2060 056D                       l2044 054B  
                     l2036 0531                       l2052 0557                       l2028 0522  
                     l2220 07C3                       l2212 07A1                       l2204 077E  
                     l2140 0672                       l2132 0651                       l2124 0635  
                     l2070 0581                       l2054 055B                       l2046 054C  
                     l2038 0535                       l2222 07C8                       l2214 07AA  
                     l2206 078C                       l2150 069E                       l2142 0677  
                     l2134 065A                       l2126 063D                       l2118 0619  
                     l2080 05A0                       l2072 0585                       l2064 0574  
                     l2056 0560                       l2048 0552                       l2224 07D1  
                     l2216 07B3                       l2208 0791                       l2160 06CA  
                     l2152 06A3                       l2144 0680                       l2136 0662  
                     l2128 0647                       l2090 05C7                       l2082 05AC  
                     l2074 0591                       l2058 056B                       l1610 006F  
                     l1602 003A                       l2226 07DF                       l2218 07B8  
                     l2170 06F6                       l2162 06CF                       l2154 06AC  
                     l2146 068E                       l2138 0667                       l1700 007C  
                     l2092 05CD                       l2084 05B2                       l2076 0597  
                     l2068 057B                       l1612 0070                       l1604 003E  
                     l1620 0F2D                       l2228 07E4                       l2180 071D  
                     l2172 06FB                       l2164 06D8                       l2156 06BA  
                     l2148 0693                       l2094 05D1                       l2086 05B6  
                     l2078 059B                       l1606 0041                       l1630 0FDF  
                     l1614 0F1F                       l1622 0F31                       l2190 0749  
                     l2182 0722                       l2174 0704                       l2166 06E6  
                     l2158 06BF                       l1712 0080                       l2096 05D6  
                     l2088 05BB                       l1800 01BD                       l1608 006E  
                     l1632 0FE8                       l1616 0F24                       l1624 0F36  
                     l2192 074E                       l2184 072B                       l2176 070D  
                     l2168 06EB                       l1730 0086                       l1706 007E  
                     l2098 05E2                       l1802 01C4                       l1634 0FED  
                     l1626 0FD2                       l1618 0F28                       l1650 0013  
                     l1642 0004                       l2194 0757                       l2186 0739  
                     l2178 0712                       l1724 0084                       l1804 01CA  
                     l1820 00BF                       l1812 00B1                       l1580 011C  
                     l1572 0F3B                       l1636 0FF3                       l1628 0FD7  
                     l2276 002B                       l1652 0015                       l1644 0005  
                     l1900 03B7                       l2196 0760                       l2188 073E  
                     l2278 0090                       l1718 0082                       l1670 0074  
                     l1750 0F67                       l1806 01CF                       l1830 00D8  
                     l1822 00C3                       l1814 00B4                       l1590 014B  
                     l1582 011F                       l1574 0F41                       l1638 0FFB  
                     l1654 001B                       l1646 000B                       l1662 0023  
                     l1910 03DB                       l1902 03BC                       l2198 0765  
                     l1576 0F12                       l1752 0F68                       l1744 0F5D  
                     l1760 0F52                       l1808 01D4                       l1840 00F7  
                     l1832 00DC                       l1824 00C8                       l1816 00B8  
                     l1592 0159                       l1584 012C                       l1656 001D  
                     l1648 000D                       l1920 0407                       l1912 03E6  
                     l1904 03C5                       l1682 0076                       l1738 0088  
                     l1754 0F70                       l1746 0F63                       l1762 0F53  
                     l1770 0173                       l1834 00E0                       l1826 00CE  
                     l1842 00FD                       l1818 00BD                       l1594 015A  
                     l1586 0130                       l1578 010C                       l1658 0021  
                     l1930 0432                       l1922 0412                       l1914 03EB  
                     l1906 03CD                       l1850 02DB                       l1668 0073  
                     l1748 0F66                       l1764 0F54                       l1756 0F49  
                     l1780 0187                       l1772 0177                       l1844 0102  
                     l1836 00EA                       l1828 00D1                       l1596 0163  
                     l1588 0139                       l1940 045E                       l1932 0437  
                     l1924 0417                       l1916 03F4                       l1908 03D6  
                     l1860 030D                       l1852 02EA                       l1694 007A  
                     l1950 0FB9                       l1766 0F58                       l1758 0F4F  
                     l1790 019D                       l1782 018B                       l1774 017C  
                     l1846 0107                       l1838 00F0                       l1598 0169  
                     l1942 0463                       l1934 0442                       l1926 0420  
                     l1918 0402                       l1870 0334                       l1862 0316  
                     l1854 02F0                       l1688 0078                       l1944 0F74  
                     l1952 0FC0                       l1792 01A1                       l1784 018D  
                     l1776 017E                       l1768 0172                       l1960 0207  
                     l1936 0447                       l1928 0429                       l1880 0360  
                     l1872 033D                       l1864 031F                       l1856 02FF  
                     l1954 0FC6                       l1946 0FAF                       l1970 0F9C  
                     l1794 01A5                       l1786 0193                       l1778 0182  
                     l1962 022B                       l1938 0450                       l1890 038B  
                     l1882 0369                       l1874 034B                       l1866 0324  
                     l1858 0304                       l1956 0FCB                       l1948 0FB4  
                     l1972 0FA2                       l1796 01B6                       l1788 0196  
                     l1892 0390                       l1884 0372                       l1876 0350  
                     l1868 032F                       l1990 0481                       l1966 0F8E  
                     l1982 0299                       l1974 0250                       l1798 01BC  
                     l1958 01D9                       l1894 0399                       l1886 037B  
                     l1878 035B                       l1992 048E                       l1968 0F91  
                     l1976 0257                       l1896 03A7                       l1888 0380  
                     l1994 0494                       l1986 046F                       l1898 03AC  
                     l1996 04A1                       l1988 047C                       l1998 04A7  
                     u1000 0531                       u1001 0530                       u1010 054B  
                     u1011 054A                       u1100 0603                       u1020 0552  
                     u1101 0602                       u1021 0551                       u1030 0573  
                     u1031 0572                       u1040 057A                       u1041 0579  
                     u1050 0581                       u1051 0580                       u1060 0597  
                     u1061 0596                       u1117 066D                       u1070 05B2  
                     u1071 05B1                       u1207 07EA                       u1127 0699  
                     u1080 05CD                       u1081 05CC                       u1217 032A  
                     u1137 06C5                       u1090 05E8                       u1091 05E7  
                     u1307 0F6C                       u1227 0356                       u1147 06F1  
                     u1237 0386                       u1157 0718                       u1247 03B2  
                     u1167 0744                       u1257 03E1                       u1177 076B  
                     u1267 040D                       u1187 0797                       u1277 043D  
                     u1197 07BE                       u1287 0469                       u1297 0F56  
                     _HORA 004E                       _PEIE 005E                       _TEMP 004C  
        ?_Lcd_Write_String 0070                       _main 0619                       btemp 007E  
                     start 0000         ??_Lcd_Write_String 0073             osc_config@freq 0072  
          __end_of_Lcd_Cmd 0F74            conver1@temporal 0025           ?_I2C_Master_Init 0020  
         ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070            __end_of___awdiv 01D9            __end_of___awmod 010C  
                    _ANSEL 0188            __end_of___lldiv 0172            ___awdiv@divisor 0070  
                    _LECT1 046F                      _PARKH 0052            ___awdiv@counter 0075  
                    _PORTA 0005                      _PORTB 0006                      _PORTD 0008  
  __size_of_Lcd_Set_Cursor 0024                      _TRISA 0085                      _TRISB 0086  
                    _TRISD 0088                      _SSPIE 0463                      _TRISE 0089  
                    _SSPIF 0063            __end_of_conver1 0250                      _setup 02DB  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 0F8D  
         __end_of_Lcd_Port 0F17            __initialization 07F3               __end_of_main 07F3  
                   ??_main 0040                     ?_LECT1 0070          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072  
                   _BASURA 0050           ___awdiv@dividend 0072                     ?_setup 0070  
                   _ANSELH 0189                  ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0014  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013                  ??___awdiv 0074  
                ??___awmod 007D                  ??___lldiv 0078                     _conver 0250  
         ___awdiv@quotient 0077            ___awmod@divisor 0079            ___awmod@counter 0020  
                ??_conver1 0022         conver@temporal_196 0030            Lcd_Set_Cursor@a 0076  
          Lcd_Set_Cursor@b 0074    __end_of__initialization 07FC              __end_of_LECT1 0619  
           __pcstackCOMMON 0070              __end_of_setup 046F                    ??_LECT1 0073  
           _Lcd_Set_Cursor 0FAE                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_setup 0028                 __pbssBANK0 0042                 __pmaintext 0619  
                  ?_conver 0070  __size_of_Lcd_Write_String 0021     __end_of_Lcd_Set_Cursor 0FD2  
                  _CERRADO 0044         __size_of_num_ascii 003F                 ??_Lcd_Init 0074  
               ??_Lcd_Port 0070                    _SSPCON2 0091                    _SSPSTAT 0094  
           _Lcd_Write_Char 0F48                    _Lcd_Cmd 0F5C                    ___awdiv 0172  
                  ___awmod 00B1                    ___lldiv 010C            __size_of_conver 008B  
          ?_Lcd_Set_Cursor 0074                    __ptext1 02DB                    __ptext2 0003  
                  __ptext3 0F31                    __ptext4 0F28                    __ptext5 0F1F  
                  __ptext6 0FD2                    __ptext7 0F3B                    __ptext8 003A  
                  __ptext9 010C                    _conver1 01D9           ___awmod@dividend 007B  
 __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D  
 __size_of_I2C_Master_Stop 0009                    clrloop0 0F18     __end_of_Lcd_Write_Char 0F5C  
     end_of_initialization 07FC                 _osc_config 0003          __end_of_num_ascii 00B1  
__size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070  
          ___lldiv@counter 007D           I2C_Master_Init@c 0020           I2C_Master_Read@a 0070  
                Lcd_Port@a 0070                  _PORTEbits 0009                  _TRISCbits 0087  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0076          Lcd_Write_String@i 0074  
         _Lcd_Write_String 0F8D             __end_of_conver 02DB        start_initialization 07F3  
        __size_of_Lcd_Init 0019          __size_of_Lcd_Port 0006          ??_I2C_Master_Init 0024  
        ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070  
              ?_osc_config 0070                   ??_conver 0070            Lcd_Write_Char@a 0072  
                ___latbits 0002              __pcstackBANK0 0020                   ?_Lcd_Cmd 0070  
         _I2C_Master_Start 0F1F           _I2C_Master_Write 0F31           ??_Lcd_Set_Cursor 0075  
                 ?___awdiv 0070                   ?___awmod 0079                   ?___lldiv 0070  
                 ?_conver1 0070             __size_of_LECT1 01AA        __size_of_osc_config 0037  
           conver@temporal 0020             __size_of_setup 0194                  clear_ram0 0F17  
                 Lcd_Cmd@a 0073                  _num_ascii 0072           ??_Lcd_Write_Char 0071  
                 _Lcd_Init 0F74                   _Lcd_Port 0F11        I2C_Master_Read@temp 0074  
 __end_of_Lcd_Write_String 0FAE           __size_of_Lcd_Cmd 0018                 ?_num_ascii 0070  
         __size_of___awdiv 0067           __size_of___awmod 005B           __size_of___lldiv 0066  
         __size_of_conver1 0077            _I2C_Master_Init 003A            _I2C_Master_Read 0FD2  
          _I2C_Master_Wait 0F3B            _I2C_Master_Stop 0F28                   __ptext10 01D9  
                 __ptext11 00B1                   __ptext20 046F                   __ptext12 0172  
                 __ptext21 0072                   __ptext13 0250                   __ptext14 0F8D  
                 __ptext15 0F48                   __ptext16 0FAE                   __ptext17 0F74  
                 __ptext18 0F5C                   __ptext19 0F11               ??_osc_config 0070  
            __size_of_main 01DA   __end_of_I2C_Master_Start 0F28   __end_of_I2C_Master_Write 0F3B  
       __end_of_osc_config 003A           ___lldiv@dividend 0074               num_ascii@num 0072  
               _OSCCONbits 008F                ??_num_ascii 0070    __end_of_I2C_Master_Init 0072  
  __end_of_I2C_Master_Read 1000    __end_of_I2C_Master_Wait 0F48    __end_of_I2C_Master_Stop 0F31  
       Lcd_Set_Cursor@temp 0077                _temperatura 0042           ___lldiv@quotient 0079  
        I2C_Master_Write@d 0070                _SSPCON2bits 0091  
