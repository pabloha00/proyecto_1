

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Aug 20 20:19:16 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	clrtext,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  0105                     	;# 
   130  0107                     	;# 
   131  0108                     	;# 
   132  0109                     	;# 
   133  010C                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  0185                     	;# 
   139  0187                     	;# 
   140  0188                     	;# 
   141  0189                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  0105                     	;# 
   208  0107                     	;# 
   209  0108                     	;# 
   210  0109                     	;# 
   211  010C                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0187                     	;# 
   218  0188                     	;# 
   219  0189                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  000E                     	;# 
   237  000E                     	;# 
   238  000F                     	;# 
   239  0010                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0014                     	;# 
   244  0015                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0017                     	;# 
   248  0018                     	;# 
   249  0019                     	;# 
   250  001A                     	;# 
   251  001B                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001D                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  0081                     	;# 
   258  0085                     	;# 
   259  0086                     	;# 
   260  0087                     	;# 
   261  0088                     	;# 
   262  0089                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  008F                     	;# 
   267  0090                     	;# 
   268  0091                     	;# 
   269  0092                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0094                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0097                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  009F                     	;# 
   285  0105                     	;# 
   286  0107                     	;# 
   287  0108                     	;# 
   288  0109                     	;# 
   289  010C                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  0185                     	;# 
   295  0187                     	;# 
   296  0188                     	;# 
   297  0189                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0088                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  008F                     	;# 
   345  0090                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0095                     	;# 
   353  0096                     	;# 
   354  0097                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  0105                     	;# 
   364  0107                     	;# 
   365  0108                     	;# 
   366  0109                     	;# 
   367  010C                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  0185                     	;# 
   373  0187                     	;# 
   374  0188                     	;# 
   375  0189                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0008                     	;# 
   387  0009                     	;# 
   388  000A                     	;# 
   389  000B                     	;# 
   390  000C                     	;# 
   391  000D                     	;# 
   392  000E                     	;# 
   393  000E                     	;# 
   394  000F                     	;# 
   395  0010                     	;# 
   396  0011                     	;# 
   397  0012                     	;# 
   398  0013                     	;# 
   399  0014                     	;# 
   400  0015                     	;# 
   401  0015                     	;# 
   402  0016                     	;# 
   403  0017                     	;# 
   404  0018                     	;# 
   405  0019                     	;# 
   406  001A                     	;# 
   407  001B                     	;# 
   408  001B                     	;# 
   409  001C                     	;# 
   410  001D                     	;# 
   411  001E                     	;# 
   412  001F                     	;# 
   413  0081                     	;# 
   414  0085                     	;# 
   415  0086                     	;# 
   416  0087                     	;# 
   417  0088                     	;# 
   418  0089                     	;# 
   419  008C                     	;# 
   420  008D                     	;# 
   421  008E                     	;# 
   422  008F                     	;# 
   423  0090                     	;# 
   424  0091                     	;# 
   425  0092                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0094                     	;# 
   430  0095                     	;# 
   431  0096                     	;# 
   432  0097                     	;# 
   433  0098                     	;# 
   434  0099                     	;# 
   435  009A                     	;# 
   436  009B                     	;# 
   437  009C                     	;# 
   438  009D                     	;# 
   439  009E                     	;# 
   440  009F                     	;# 
   441  0105                     	;# 
   442  0107                     	;# 
   443  0108                     	;# 
   444  0109                     	;# 
   445  010C                     	;# 
   446  010C                     	;# 
   447  010D                     	;# 
   448  010E                     	;# 
   449  010F                     	;# 
   450  0185                     	;# 
   451  0187                     	;# 
   452  0188                     	;# 
   453  0189                     	;# 
   454  018C                     	;# 
   455  018D                     	;# 
   456  0000                     	;# 
   457  0001                     	;# 
   458  0002                     	;# 
   459  0003                     	;# 
   460  0004                     	;# 
   461  0005                     	;# 
   462  0006                     	;# 
   463  0007                     	;# 
   464  0008                     	;# 
   465  0009                     	;# 
   466  000A                     	;# 
   467  000B                     	;# 
   468  000C                     	;# 
   469  000D                     	;# 
   470  000E                     	;# 
   471  000E                     	;# 
   472  000F                     	;# 
   473  0010                     	;# 
   474  0011                     	;# 
   475  0012                     	;# 
   476  0013                     	;# 
   477  0014                     	;# 
   478  0015                     	;# 
   479  0015                     	;# 
   480  0016                     	;# 
   481  0017                     	;# 
   482  0018                     	;# 
   483  0019                     	;# 
   484  001A                     	;# 
   485  001B                     	;# 
   486  001B                     	;# 
   487  001C                     	;# 
   488  001D                     	;# 
   489  001E                     	;# 
   490  001F                     	;# 
   491  0081                     	;# 
   492  0085                     	;# 
   493  0086                     	;# 
   494  0087                     	;# 
   495  0088                     	;# 
   496  0089                     	;# 
   497  008C                     	;# 
   498  008D                     	;# 
   499  008E                     	;# 
   500  008F                     	;# 
   501  0090                     	;# 
   502  0091                     	;# 
   503  0092                     	;# 
   504  0093                     	;# 
   505  0093                     	;# 
   506  0093                     	;# 
   507  0094                     	;# 
   508  0095                     	;# 
   509  0096                     	;# 
   510  0097                     	;# 
   511  0098                     	;# 
   512  0099                     	;# 
   513  009A                     	;# 
   514  009B                     	;# 
   515  009C                     	;# 
   516  009D                     	;# 
   517  009E                     	;# 
   518  009F                     	;# 
   519  0105                     	;# 
   520  0107                     	;# 
   521  0108                     	;# 
   522  0109                     	;# 
   523  010C                     	;# 
   524  010C                     	;# 
   525  010D                     	;# 
   526  010E                     	;# 
   527  010F                     	;# 
   528  0185                     	;# 
   529  0187                     	;# 
   530  0188                     	;# 
   531  0189                     	;# 
   532  018C                     	;# 
   533  018D                     	;# 
   534  0009                     _PORTEbits	set	9
   535  0006                     _PORTBbits	set	6
   536  0008                     _PORTD	set	8
   537  0006                     _PORTB	set	6
   538  0005                     _PORTA	set	5
   539  0013                     _SSPBUF	set	19
   540  0014                     _SSPCON	set	20
   541  0063                     _SSPIF	set	99
   542  005E                     _PEIE	set	94
   543  005F                     _GIE	set	95
   544  008F                     _OSCCONbits	set	143
   545  0089                     _TRISE	set	137
   546  0088                     _TRISD	set	136
   547  0086                     _TRISB	set	134
   548  0085                     _TRISA	set	133
   549  0091                     _SSPCON2bits	set	145
   550  0087                     _TRISCbits	set	135
   551  0094                     _SSPSTAT	set	148
   552  0093                     _SSPADD	set	147
   553  0091                     _SSPCON2	set	145
   554  0463                     _SSPIE	set	1123
   555  043C                     _TRISC4	set	1084
   556  043B                     _TRISC3	set	1083
   557  0189                     _ANSELH	set	393
   558  0188                     _ANSEL	set	392
   559                           
   560                           	psect	cinit
   561  07F3                     start_initialization:	
   562                           ; #config settings
   563                           
   564  07F3                     __initialization:
   565                           
   566                           ; Clear objects allocated to BANK0
   567  07F3  1383               	bcf	3,7	;select IRP bank0
   568  07F4  3032               	movlw	low __pbssBANK0
   569  07F5  0084               	movwf	4
   570  07F6  3042               	movlw	low (__pbssBANK0+16)
   571  07F7  120A  118A  2052  120A  118A  	fcall	clear_ram0
   572  07FC                     end_of_initialization:	
   573                           ;End of C runtime variable initialization code
   574                           
   575  07FC                     __end_of__initialization:
   576  07FC  0183               	clrf	3
   577  07FD  120A  118A  2E19   	ljmp	_main	;jump to C main() function
   578                           
   579                           	psect	bssBANK0
   580  0032                     __pbssBANK0:
   581  0032                     _con:
   582  0032                     	ds	1
   583  0033                     _CERRADO:
   584  0033                     	ds	1
   585  0034                     _DM:
   586  0034                     	ds	1
   587  0035                     _UM:
   588  0035                     	ds	1
   589  0036                     _DH:
   590  0036                     	ds	1
   591  0037                     _UH:
   592  0037                     	ds	1
   593  0038                     _C3:
   594  0038                     	ds	1
   595  0039                     _C2:
   596  0039                     	ds	1
   597  003A                     _C1:
   598  003A                     	ds	1
   599  003B                     _TEMP:
   600  003B                     	ds	1
   601  003C                     _MIN:
   602  003C                     	ds	1
   603  003D                     _HORA:
   604  003D                     	ds	1
   605  003E                     _DIA:
   606  003E                     	ds	1
   607  003F                     _BASURA:
   608  003F                     	ds	1
   609  0040                     _NUM:
   610  0040                     	ds	1
   611  0041                     _PARKH:
   612  0041                     	ds	1
   613                           
   614                           	psect	clrtext
   615  0052                     clear_ram0:	
   616                           ;	Called with FSR containing the base address, and
   617                           ;	W with the last address+1
   618                           
   619  0052  0064               	clrwdt	;clear the watchdog before getting into this loop
   620  0053                     clrloop0:
   621  0053  0180               	clrf	0	;clear RAM location pointed to by FSR
   622  0054  0A84               	incf	4,f	;increment pointer
   623  0055  0604               	xorwf	4,w	;XOR with final address
   624  0056  1903               	btfsc	3,2	;have we reached the end yet?
   625  0057  3400               	retlw	0	;all done for this memory range, return
   626  0058  0604               	xorwf	4,w	;XOR again to restore value
   627  0059  2853               	goto	clrloop0	;do the next byte
   628                           
   629                           	psect	cstackCOMMON
   630  0070                     __pcstackCOMMON:
   631  0070                     ?_setup:
   632  0070                     ?_Lcd_Init:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ?_Lcd_Write_String:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ?_conver1:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ??_conver1:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?_conver:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ??_conver:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ?_LECT1:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ?_osc_config:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ??_osc_config:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_num_ascii:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ??_num_ascii:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_I2C_Master_Wait:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ??_I2C_Master_Wait:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ?_I2C_Master_Start:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ??_I2C_Master_Start:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?_I2C_Master_Stop:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ??_I2C_Master_Stop:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_I2C_Master_Write:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?_main:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?_Lcd_Port:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ??_Lcd_Port:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_Lcd_Cmd:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_Lcd_Write_Char:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_I2C_Master_Read:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?___lldiv:	
   705                           ; 2 bytes @ 0x0
   706                           
   707  0070                     Lcd_Port@a:	
   708                           ; 4 bytes @ 0x0
   709                           
   710  0070                     I2C_Master_Write@d:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     I2C_Master_Read@a:	
   714                           ; 2 bytes @ 0x0
   715                           
   716  0070                     ___lldiv@divisor:	
   717                           ; 2 bytes @ 0x0
   718                           
   719                           
   720                           ; 4 bytes @ 0x0
   721  0070                     	ds	1
   722  0071                     ??_Lcd_Cmd:
   723  0071                     ??_Lcd_Write_Char:	
   724                           ; 1 bytes @ 0x1
   725                           
   726                           
   727                           ; 1 bytes @ 0x1
   728  0071                     	ds	1
   729  0072                     ??_I2C_Master_Write:
   730  0072                     ??_I2C_Master_Read:	
   731                           ; 1 bytes @ 0x2
   732                           
   733  0072                     osc_config@freq:	
   734                           ; 1 bytes @ 0x2
   735                           
   736  0072                     Lcd_Write_Char@a:	
   737                           ; 1 bytes @ 0x2
   738                           
   739  0072                     num_ascii@num:	
   740                           ; 1 bytes @ 0x2
   741                           
   742                           
   743                           ; 1 bytes @ 0x2
   744  0072                     	ds	1
   745  0073                     ??_Lcd_Write_String:
   746  0073                     ??_LECT1:	
   747                           ; 1 bytes @ 0x3
   748                           
   749  0073                     Lcd_Cmd@a:	
   750                           ; 1 bytes @ 0x3
   751                           
   752                           
   753                           ; 1 bytes @ 0x3
   754  0073                     	ds	1
   755  0074                     ??_Lcd_Init:
   756  0074                     ?_Lcd_Set_Cursor:	
   757                           ; 1 bytes @ 0x4
   758                           
   759  0074                     Lcd_Set_Cursor@b:	
   760                           ; 1 bytes @ 0x4
   761                           
   762  0074                     I2C_Master_Read@temp:	
   763                           ; 1 bytes @ 0x4
   764                           
   765  0074                     Lcd_Write_String@i:	
   766                           ; 2 bytes @ 0x4
   767                           
   768  0074                     ___lldiv@dividend:	
   769                           ; 2 bytes @ 0x4
   770                           
   771                           
   772                           ; 4 bytes @ 0x4
   773  0074                     	ds	1
   774  0075                     ??_Lcd_Set_Cursor:
   775                           
   776                           ; 1 bytes @ 0x5
   777  0075                     	ds	1
   778  0076                     Lcd_Set_Cursor@a:
   779  0076                     Lcd_Write_String@a:	
   780                           ; 1 bytes @ 0x6
   781                           
   782                           
   783                           ; 1 bytes @ 0x6
   784  0076                     	ds	1
   785  0077                     Lcd_Set_Cursor@temp:
   786                           
   787                           ; 1 bytes @ 0x7
   788  0077                     	ds	1
   789  0078                     ??___lldiv:
   790                           
   791                           ; 1 bytes @ 0x8
   792  0078                     	ds	1
   793  0079                     ___lldiv@quotient:
   794                           
   795                           ; 4 bytes @ 0x9
   796  0079                     	ds	4
   797  007D                     ___lldiv@counter:
   798                           
   799                           ; 1 bytes @ 0xD
   800  007D                     	ds	1
   801                           
   802                           	psect	cstackBANK0
   803  0020                     __pcstackBANK0:
   804  0020                     ?_I2C_Master_Init:
   805  0020                     I2C_Master_Init@c:	
   806                           ; 1 bytes @ 0x0
   807                           
   808  0020                     conver@temporal:	
   809                           ; 4 bytes @ 0x0
   810                           
   811  0020                     conver1@temporal:	
   812                           ; 16 bytes @ 0x0
   813                           
   814                           
   815                           ; 16 bytes @ 0x0
   816  0020                     	ds	4
   817  0024                     ??_I2C_Master_Init:
   818                           
   819                           ; 1 bytes @ 0x4
   820  0024                     	ds	4
   821  0028                     ??_setup:
   822                           
   823                           ; 1 bytes @ 0x8
   824  0028                     	ds	8
   825  0030                     ??_main:
   826                           
   827                           ; 1 bytes @ 0x10
   828  0030                     	ds	2
   829                           
   830                           	psect	maintext
   831  0619                     __pmaintext:	
   832 ;;
   833 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   834 ;;
   835 ;; *************** function _main *****************
   836 ;; Defined at:
   837 ;;		line 70 in file "main.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;		None
   840 ;; Auto vars:     Size  Location     Type
   841 ;;		None
   842 ;; Return value:  Size  Location     Type
   843 ;;                  1    wreg      void 
   844 ;; Registers used:
   845 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   846 ;; Tracked objects:
   847 ;;		On entry : B00/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   851 ;;      Params:         0       0       0       0       0
   852 ;;      Locals:         0       0       0       0       0
   853 ;;      Temps:          0       2       0       0       0
   854 ;;      Totals:         0       2       0       0       0
   855 ;;Total ram usage:        2 bytes
   856 ;; Hardware stack levels required when called: 3
   857 ;; This function calls:
   858 ;;		_I2C_Master_Read
   859 ;;		_I2C_Master_Start
   860 ;;		_I2C_Master_Stop
   861 ;;		_I2C_Master_Write
   862 ;;		_LECT1
   863 ;;		_Lcd_Init
   864 ;;		_Lcd_Set_Cursor
   865 ;;		_Lcd_Write_String
   866 ;;		_conver
   867 ;;		_conver1
   868 ;;		_setup
   869 ;; This function is called by:
   870 ;;		Startup code after reset
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           
   875                           ;psect for function _main
   876  0619                     _main:
   877  0619                     l1920:	
   878                           ;incstack = 0
   879                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   880                           
   881                           
   882                           ;main.c: 71:     setup();
   883  0619  120A  118A  22D7  120A  118A  	fcall	_setup
   884  061E                     l1922:
   885                           
   886                           ;main.c: 72:     Lcd_Init();
   887  061E  120A  118A  20AF  120A  118A  	fcall	_Lcd_Init
   888  0623                     l1924:
   889                           
   890                           ;main.c: 74:         Lcd_Set_Cursor(1,1);
   891  0623  01F4               	clrf	Lcd_Set_Cursor@b
   892  0624  0AF4               	incf	Lcd_Set_Cursor@b,f
   893  0625  3001               	movlw	1
   894  0626  120A  118A  20E9  120A  118A  	fcall	_Lcd_Set_Cursor
   895                           
   896                           ;main.c: 75:         Lcd_Write_String(conver1());
   897  062B  120A  118A  222D  120A  118A  	fcall	_conver1
   898  0630  120A  118A  20C8  120A  118A  	fcall	_Lcd_Write_String
   899  0635                     l1926:
   900                           
   901                           ;main.c: 76:         Lcd_Set_Cursor(2,1);
   902  0635  01F4               	clrf	Lcd_Set_Cursor@b
   903  0636  0AF4               	incf	Lcd_Set_Cursor@b,f
   904  0637  3002               	movlw	2
   905  0638  120A  118A  20E9  120A  118A  	fcall	_Lcd_Set_Cursor
   906  063D                     l1928:
   907                           
   908                           ;main.c: 77:         Lcd_Write_String(conver());
   909  063D  120A  118A  21E9  120A  118A  	fcall	_conver
   910  0642  120A  118A  20C8  120A  118A  	fcall	_Lcd_Write_String
   911  0647                     l1930:
   912                           
   913                           ;main.c: 78:         LECT1();
   914  0647  120A  118A  246B  120A  118A  	fcall	_LECT1
   915  064C                     l1932:
   916                           
   917                           ;main.c: 80:         I2C_Master_Start();
   918  064C  120A  118A  205A  120A  118A  	fcall	_I2C_Master_Start
   919  0651                     l1934:
   920                           
   921                           ;main.c: 81:         I2C_Master_Write(0x50);
   922  0651  3050               	movlw	80
   923  0652  00F0               	movwf	I2C_Master_Write@d
   924  0653  3000               	movlw	0
   925  0654  00F1               	movwf	I2C_Master_Write@d+1
   926  0655  120A  118A  206C  120A  118A  	fcall	_I2C_Master_Write
   927  065A                     l1936:
   928                           
   929                           ;main.c: 82:         I2C_Master_Write(0);
   930  065A  3000               	movlw	0
   931  065B  00F0               	movwf	I2C_Master_Write@d
   932  065C  00F1               	movwf	I2C_Master_Write@d+1
   933  065D  120A  118A  206C  120A  118A  	fcall	_I2C_Master_Write
   934  0662                     l1938:
   935                           
   936                           ;main.c: 83:         I2C_Master_Stop();
   937  0662  120A  118A  2063  120A  118A  	fcall	_I2C_Master_Stop
   938  0667                     l1940:
   939                           
   940                           ;main.c: 84:         _delay((unsigned long)((10)*(8000000/4000.0)));
   941  0667  301A               	movlw	26
   942  0668  1283               	bcf	3,5	;RP0=0, select bank0
   943  0669  1303               	bcf	3,6	;RP1=0, select bank0
   944  066A  00B1               	movwf	??_main+1
   945  066B  30F7               	movlw	247
   946  066C  00B0               	movwf	??_main
   947  066D                     u717:
   948  066D  0BB0               	decfsz	??_main,f
   949  066E  2E6D               	goto	u717
   950  066F  0BB1               	decfsz	??_main+1,f
   951  0670  2E6D               	goto	u717
   952  0671  2E72               	nop2
   953  0672                     l1942:
   954                           
   955                           ;main.c: 86:         I2C_Master_Start();
   956  0672  120A  118A  205A  120A  118A  	fcall	_I2C_Master_Start
   957  0677                     l1944:
   958                           
   959                           ;main.c: 87:         I2C_Master_Write(0x51);
   960  0677  3051               	movlw	81
   961  0678  00F0               	movwf	I2C_Master_Write@d
   962  0679  3000               	movlw	0
   963  067A  00F1               	movwf	I2C_Master_Write@d+1
   964  067B  120A  118A  206C  120A  118A  	fcall	_I2C_Master_Write
   965  0680                     l1946:
   966                           
   967                           ;main.c: 88:         PARKH = I2C_Master_Read(0);
   968  0680  3000               	movlw	0
   969  0681  00F0               	movwf	I2C_Master_Read@a
   970  0682  00F1               	movwf	I2C_Master_Read@a+1
   971  0683  120A  118A  210D  120A  118A  	fcall	_I2C_Master_Read
   972  0688  0870               	movf	?_I2C_Master_Read,w
   973  0689  1283               	bcf	3,5	;RP0=0, select bank0
   974  068A  1303               	bcf	3,6	;RP1=0, select bank0
   975  068B  00B0               	movwf	??_main
   976  068C  0830               	movf	??_main,w
   977  068D  00C1               	movwf	_PARKH
   978  068E                     l1948:
   979                           
   980                           ;main.c: 89:         I2C_Master_Stop();
   981  068E  120A  118A  2063  120A  118A  	fcall	_I2C_Master_Stop
   982  0693                     l1950:
   983                           
   984                           ;main.c: 90:         _delay((unsigned long)((10)*(8000000/4000.0)));
   985  0693  301A               	movlw	26
   986  0694  1283               	bcf	3,5	;RP0=0, select bank0
   987  0695  1303               	bcf	3,6	;RP1=0, select bank0
   988  0696  00B1               	movwf	??_main+1
   989  0697  30F7               	movlw	247
   990  0698  00B0               	movwf	??_main
   991  0699                     u727:
   992  0699  0BB0               	decfsz	??_main,f
   993  069A  2E99               	goto	u727
   994  069B  0BB1               	decfsz	??_main+1,f
   995  069C  2E99               	goto	u727
   996  069D  2E9E               	nop2
   997  069E                     l1952:
   998                           
   999                           ;main.c: 92:         I2C_Master_Start();
  1000  069E  120A  118A  205A  120A  118A  	fcall	_I2C_Master_Start
  1001  06A3                     l1954:
  1002                           
  1003                           ;main.c: 93:         I2C_Master_Write(0x60);
  1004  06A3  3060               	movlw	96
  1005  06A4  00F0               	movwf	I2C_Master_Write@d
  1006  06A5  3000               	movlw	0
  1007  06A6  00F1               	movwf	I2C_Master_Write@d+1
  1008  06A7  120A  118A  206C  120A  118A  	fcall	_I2C_Master_Write
  1009  06AC                     l1956:
  1010                           
  1011                           ;main.c: 94:         I2C_Master_Write(CERRADO);
  1012  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  1013  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  1014  06AE  0833               	movf	_CERRADO,w
  1015  06AF  00B0               	movwf	??_main
  1016  06B0  01B1               	clrf	??_main+1
  1017  06B1  0830               	movf	??_main,w
  1018  06B2  00F0               	movwf	I2C_Master_Write@d
  1019  06B3  0831               	movf	??_main+1,w
  1020  06B4  00F1               	movwf	I2C_Master_Write@d+1
  1021  06B5  120A  118A  206C  120A  118A  	fcall	_I2C_Master_Write
  1022  06BA                     l1958:
  1023                           
  1024                           ;main.c: 95:         I2C_Master_Stop();
  1025  06BA  120A  118A  2063  120A  118A  	fcall	_I2C_Master_Stop
  1026  06BF                     l1960:
  1027                           
  1028                           ;main.c: 96:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1029  06BF  301A               	movlw	26
  1030  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  1031  06C1  1303               	bcf	3,6	;RP1=0, select bank0
  1032  06C2  00B1               	movwf	??_main+1
  1033  06C3  30F7               	movlw	247
  1034  06C4  00B0               	movwf	??_main
  1035  06C5                     u737:
  1036  06C5  0BB0               	decfsz	??_main,f
  1037  06C6  2EC5               	goto	u737
  1038  06C7  0BB1               	decfsz	??_main+1,f
  1039  06C8  2EC5               	goto	u737
  1040  06C9  2ECA               	nop2
  1041  06CA                     l1962:
  1042                           
  1043                           ;main.c: 98:         I2C_Master_Start();
  1044  06CA  120A  118A  205A  120A  118A  	fcall	_I2C_Master_Start
  1045  06CF                     l1964:
  1046                           
  1047                           ;main.c: 99:         I2C_Master_Write(0x61);
  1048  06CF  3061               	movlw	97
  1049  06D0  00F0               	movwf	I2C_Master_Write@d
  1050  06D1  3000               	movlw	0
  1051  06D2  00F1               	movwf	I2C_Master_Write@d+1
  1052  06D3  120A  118A  206C  120A  118A  	fcall	_I2C_Master_Write
  1053  06D8                     l1966:
  1054                           
  1055                           ;main.c: 100:         BASURA = I2C_Master_Read(0);
  1056  06D8  3000               	movlw	0
  1057  06D9  00F0               	movwf	I2C_Master_Read@a
  1058  06DA  00F1               	movwf	I2C_Master_Read@a+1
  1059  06DB  120A  118A  210D  120A  118A  	fcall	_I2C_Master_Read
  1060  06E0  0870               	movf	?_I2C_Master_Read,w
  1061  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  1062  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  1063  06E3  00B0               	movwf	??_main
  1064  06E4  0830               	movf	??_main,w
  1065  06E5  00BF               	movwf	_BASURA
  1066  06E6                     l1968:
  1067                           
  1068                           ;main.c: 101:         I2C_Master_Stop();
  1069  06E6  120A  118A  2063  120A  118A  	fcall	_I2C_Master_Stop
  1070  06EB                     l1970:
  1071                           
  1072                           ;main.c: 102:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1073  06EB  301A               	movlw	26
  1074  06EC  1283               	bcf	3,5	;RP0=0, select bank0
  1075  06ED  1303               	bcf	3,6	;RP1=0, select bank0
  1076  06EE  00B1               	movwf	??_main+1
  1077  06EF  30F7               	movlw	247
  1078  06F0  00B0               	movwf	??_main
  1079  06F1                     u747:
  1080  06F1  0BB0               	decfsz	??_main,f
  1081  06F2  2EF1               	goto	u747
  1082  06F3  0BB1               	decfsz	??_main+1,f
  1083  06F4  2EF1               	goto	u747
  1084  06F5  2EF6               	nop2
  1085  06F6                     l1972:
  1086                           
  1087                           ;main.c: 104:         I2C_Master_Start();
  1088  06F6  120A  118A  205A  120A  118A  	fcall	_I2C_Master_Start
  1089  06FB                     l1974:
  1090                           
  1091                           ;main.c: 105:         I2C_Master_Write(0xD0);
  1092  06FB  30D0               	movlw	208
  1093  06FC  00F0               	movwf	I2C_Master_Write@d
  1094  06FD  3000               	movlw	0
  1095  06FE  00F1               	movwf	I2C_Master_Write@d+1
  1096  06FF  120A  118A  206C  120A  118A  	fcall	_I2C_Master_Write
  1097  0704                     l1976:
  1098                           
  1099                           ;main.c: 106:         I2C_Master_Write(0x02);
  1100  0704  3002               	movlw	2
  1101  0705  00F0               	movwf	I2C_Master_Write@d
  1102  0706  3000               	movlw	0
  1103  0707  00F1               	movwf	I2C_Master_Write@d+1
  1104  0708  120A  118A  206C  120A  118A  	fcall	_I2C_Master_Write
  1105  070D                     l1978:
  1106                           
  1107                           ;main.c: 107:         I2C_Master_Stop();
  1108  070D  120A  118A  2063  120A  118A  	fcall	_I2C_Master_Stop
  1109  0712                     l1980:
  1110                           
  1111                           ;main.c: 108:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1112  0712  301A               	movlw	26
  1113  0713  1283               	bcf	3,5	;RP0=0, select bank0
  1114  0714  1303               	bcf	3,6	;RP1=0, select bank0
  1115  0715  00B1               	movwf	??_main+1
  1116  0716  30F7               	movlw	247
  1117  0717  00B0               	movwf	??_main
  1118  0718                     u757:
  1119  0718  0BB0               	decfsz	??_main,f
  1120  0719  2F18               	goto	u757
  1121  071A  0BB1               	decfsz	??_main+1,f
  1122  071B  2F18               	goto	u757
  1123  071C  2F1D               	nop2
  1124  071D                     l1982:
  1125                           
  1126                           ;main.c: 110:         I2C_Master_Start();
  1127  071D  120A  118A  205A  120A  118A  	fcall	_I2C_Master_Start
  1128  0722                     l1984:
  1129                           
  1130                           ;main.c: 111:         I2C_Master_Write(0xD1);
  1131  0722  30D1               	movlw	209
  1132  0723  00F0               	movwf	I2C_Master_Write@d
  1133  0724  3000               	movlw	0
  1134  0725  00F1               	movwf	I2C_Master_Write@d+1
  1135  0726  120A  118A  206C  120A  118A  	fcall	_I2C_Master_Write
  1136  072B                     l1986:
  1137                           
  1138                           ;main.c: 112:         HORA = I2C_Master_Read(0);
  1139  072B  3000               	movlw	0
  1140  072C  00F0               	movwf	I2C_Master_Read@a
  1141  072D  00F1               	movwf	I2C_Master_Read@a+1
  1142  072E  120A  118A  210D  120A  118A  	fcall	_I2C_Master_Read
  1143  0733  0870               	movf	?_I2C_Master_Read,w
  1144  0734  1283               	bcf	3,5	;RP0=0, select bank0
  1145  0735  1303               	bcf	3,6	;RP1=0, select bank0
  1146  0736  00B0               	movwf	??_main
  1147  0737  0830               	movf	??_main,w
  1148  0738  00BD               	movwf	_HORA
  1149  0739                     l1988:
  1150                           
  1151                           ;main.c: 113:         I2C_Master_Stop();
  1152  0739  120A  118A  2063  120A  118A  	fcall	_I2C_Master_Stop
  1153  073E                     l1990:
  1154                           
  1155                           ;main.c: 114:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1156  073E  301A               	movlw	26
  1157  073F  1283               	bcf	3,5	;RP0=0, select bank0
  1158  0740  1303               	bcf	3,6	;RP1=0, select bank0
  1159  0741  00B1               	movwf	??_main+1
  1160  0742  30F7               	movlw	247
  1161  0743  00B0               	movwf	??_main
  1162  0744                     u767:
  1163  0744  0BB0               	decfsz	??_main,f
  1164  0745  2F44               	goto	u767
  1165  0746  0BB1               	decfsz	??_main+1,f
  1166  0747  2F44               	goto	u767
  1167  0748  2F49               	nop2
  1168  0749                     l1992:
  1169                           
  1170                           ;main.c: 116:         I2C_Master_Start();
  1171  0749  120A  118A  205A  120A  118A  	fcall	_I2C_Master_Start
  1172  074E                     l1994:
  1173                           
  1174                           ;main.c: 117:         I2C_Master_Write(0xD0);
  1175  074E  30D0               	movlw	208
  1176  074F  00F0               	movwf	I2C_Master_Write@d
  1177  0750  3000               	movlw	0
  1178  0751  00F1               	movwf	I2C_Master_Write@d+1
  1179  0752  120A  118A  206C  120A  118A  	fcall	_I2C_Master_Write
  1180  0757                     l1996:
  1181                           
  1182                           ;main.c: 118:         I2C_Master_Write(0x03);
  1183  0757  3003               	movlw	3
  1184  0758  00F0               	movwf	I2C_Master_Write@d
  1185  0759  3000               	movlw	0
  1186  075A  00F1               	movwf	I2C_Master_Write@d+1
  1187  075B  120A  118A  206C  120A  118A  	fcall	_I2C_Master_Write
  1188  0760                     l1998:
  1189                           
  1190                           ;main.c: 119:         I2C_Master_Stop();
  1191  0760  120A  118A  2063  120A  118A  	fcall	_I2C_Master_Stop
  1192  0765                     l2000:
  1193                           
  1194                           ;main.c: 120:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1195  0765  301A               	movlw	26
  1196  0766  1283               	bcf	3,5	;RP0=0, select bank0
  1197  0767  1303               	bcf	3,6	;RP1=0, select bank0
  1198  0768  00B1               	movwf	??_main+1
  1199  0769  30F7               	movlw	247
  1200  076A  00B0               	movwf	??_main
  1201  076B                     u777:
  1202  076B  0BB0               	decfsz	??_main,f
  1203  076C  2F6B               	goto	u777
  1204  076D  0BB1               	decfsz	??_main+1,f
  1205  076E  2F6B               	goto	u777
  1206  076F  2F70               	nop2
  1207  0770                     l2002:
  1208                           
  1209                           ;main.c: 122:         I2C_Master_Start();
  1210  0770  120A  118A  205A  120A  118A  	fcall	_I2C_Master_Start
  1211  0775                     l2004:
  1212                           
  1213                           ;main.c: 123:         I2C_Master_Write(0xD1);
  1214  0775  30D1               	movlw	209
  1215  0776  00F0               	movwf	I2C_Master_Write@d
  1216  0777  3000               	movlw	0
  1217  0778  00F1               	movwf	I2C_Master_Write@d+1
  1218  0779  120A  118A  206C  120A  118A  	fcall	_I2C_Master_Write
  1219  077E                     l2006:
  1220                           
  1221                           ;main.c: 124:         DIA = I2C_Master_Read(0);
  1222  077E  3000               	movlw	0
  1223  077F  00F0               	movwf	I2C_Master_Read@a
  1224  0780  00F1               	movwf	I2C_Master_Read@a+1
  1225  0781  120A  118A  210D  120A  118A  	fcall	_I2C_Master_Read
  1226  0786  0870               	movf	?_I2C_Master_Read,w
  1227  0787  1283               	bcf	3,5	;RP0=0, select bank0
  1228  0788  1303               	bcf	3,6	;RP1=0, select bank0
  1229  0789  00B0               	movwf	??_main
  1230  078A  0830               	movf	??_main,w
  1231  078B  00BE               	movwf	_DIA
  1232  078C                     l2008:
  1233                           
  1234                           ;main.c: 125:         I2C_Master_Stop();
  1235  078C  120A  118A  2063  120A  118A  	fcall	_I2C_Master_Stop
  1236  0791                     l2010:
  1237                           
  1238                           ;main.c: 126:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1239  0791  301A               	movlw	26
  1240  0792  1283               	bcf	3,5	;RP0=0, select bank0
  1241  0793  1303               	bcf	3,6	;RP1=0, select bank0
  1242  0794  00B1               	movwf	??_main+1
  1243  0795  30F7               	movlw	247
  1244  0796  00B0               	movwf	??_main
  1245  0797                     u787:
  1246  0797  0BB0               	decfsz	??_main,f
  1247  0798  2F97               	goto	u787
  1248  0799  0BB1               	decfsz	??_main+1,f
  1249  079A  2F97               	goto	u787
  1250  079B  2F9C               	nop2
  1251  079C                     l2012:
  1252                           
  1253                           ;main.c: 128:         I2C_Master_Start();
  1254  079C  120A  118A  205A  120A  118A  	fcall	_I2C_Master_Start
  1255  07A1                     l2014:
  1256                           
  1257                           ;main.c: 129:         I2C_Master_Write(0xD0);
  1258  07A1  30D0               	movlw	208
  1259  07A2  00F0               	movwf	I2C_Master_Write@d
  1260  07A3  3000               	movlw	0
  1261  07A4  00F1               	movwf	I2C_Master_Write@d+1
  1262  07A5  120A  118A  206C  120A  118A  	fcall	_I2C_Master_Write
  1263  07AA                     l2016:
  1264                           
  1265                           ;main.c: 130:         I2C_Master_Write(0x01);
  1266  07AA  3001               	movlw	1
  1267  07AB  00F0               	movwf	I2C_Master_Write@d
  1268  07AC  3000               	movlw	0
  1269  07AD  00F1               	movwf	I2C_Master_Write@d+1
  1270  07AE  120A  118A  206C  120A  118A  	fcall	_I2C_Master_Write
  1271  07B3                     l2018:
  1272                           
  1273                           ;main.c: 131:         I2C_Master_Stop();
  1274  07B3  120A  118A  2063  120A  118A  	fcall	_I2C_Master_Stop
  1275  07B8                     l2020:
  1276                           
  1277                           ;main.c: 132:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1278  07B8  301A               	movlw	26
  1279  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  1280  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  1281  07BB  00B1               	movwf	??_main+1
  1282  07BC  30F7               	movlw	247
  1283  07BD  00B0               	movwf	??_main
  1284  07BE                     u797:
  1285  07BE  0BB0               	decfsz	??_main,f
  1286  07BF  2FBE               	goto	u797
  1287  07C0  0BB1               	decfsz	??_main+1,f
  1288  07C1  2FBE               	goto	u797
  1289  07C2  2FC3               	nop2
  1290  07C3                     l2022:
  1291                           
  1292                           ;main.c: 134:         I2C_Master_Start();
  1293  07C3  120A  118A  205A  120A  118A  	fcall	_I2C_Master_Start
  1294  07C8                     l2024:
  1295                           
  1296                           ;main.c: 135:         I2C_Master_Write(0xD1);
  1297  07C8  30D1               	movlw	209
  1298  07C9  00F0               	movwf	I2C_Master_Write@d
  1299  07CA  3000               	movlw	0
  1300  07CB  00F1               	movwf	I2C_Master_Write@d+1
  1301  07CC  120A  118A  206C  120A  118A  	fcall	_I2C_Master_Write
  1302  07D1                     l2026:
  1303                           
  1304                           ;main.c: 136:         MIN = I2C_Master_Read(0);
  1305  07D1  3000               	movlw	0
  1306  07D2  00F0               	movwf	I2C_Master_Read@a
  1307  07D3  00F1               	movwf	I2C_Master_Read@a+1
  1308  07D4  120A  118A  210D  120A  118A  	fcall	_I2C_Master_Read
  1309  07D9  0870               	movf	?_I2C_Master_Read,w
  1310  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  1311  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  1312  07DC  00B0               	movwf	??_main
  1313  07DD  0830               	movf	??_main,w
  1314  07DE  00BC               	movwf	_MIN
  1315  07DF                     l2028:
  1316                           
  1317                           ;main.c: 137:         I2C_Master_Stop();
  1318  07DF  120A  118A  2063  120A  118A  	fcall	_I2C_Master_Stop
  1319  07E4                     l2030:
  1320                           
  1321                           ;main.c: 138:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1322  07E4  301A               	movlw	26
  1323  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  1324  07E6  1303               	bcf	3,6	;RP1=0, select bank0
  1325  07E7  00B1               	movwf	??_main+1
  1326  07E8  30F7               	movlw	247
  1327  07E9  00B0               	movwf	??_main
  1328  07EA                     u807:
  1329  07EA  0BB0               	decfsz	??_main,f
  1330  07EB  2FEA               	goto	u807
  1331  07EC  0BB1               	decfsz	??_main+1,f
  1332  07ED  2FEA               	goto	u807
  1333  07EE  2FEF               	nop2
  1334  07EF  2E23               	goto	l1924
  1335  07F0  120A  118A  2800   	ljmp	start
  1336  07F3                     __end_of_main:
  1337                           
  1338                           	psect	text1
  1339  02D7                     __ptext1:	
  1340 ;; *************** function _setup *****************
  1341 ;; Defined at:
  1342 ;;		line 158 in file "main.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;		None
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;		None
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  1    wreg      void 
  1349 ;; Registers used:
  1350 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1356 ;;      Params:         0       0       0       0       0
  1357 ;;      Locals:         0       0       0       0       0
  1358 ;;      Temps:          0       2       0       0       0
  1359 ;;      Totals:         0       2       0       0       0
  1360 ;;Total ram usage:        2 bytes
  1361 ;; Hardware stack levels used: 1
  1362 ;; Hardware stack levels required when called: 2
  1363 ;; This function calls:
  1364 ;;		_I2C_Master_Init
  1365 ;;		_I2C_Master_Read
  1366 ;;		_I2C_Master_Start
  1367 ;;		_I2C_Master_Stop
  1368 ;;		_I2C_Master_Write
  1369 ;;		_osc_config
  1370 ;; This function is called by:
  1371 ;;		_main
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           
  1376                           ;psect for function _setup
  1377  02D7                     _setup:
  1378  02D7                     l1668:	
  1379                           ;incstack = 0
  1380                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1381                           
  1382                           
  1383                           ;main.c: 159:     ANSEL = 0;
  1384  02D7  1683               	bsf	3,5	;RP0=1, select bank3
  1385  02D8  1703               	bsf	3,6	;RP1=1, select bank3
  1386  02D9  0188               	clrf	8	;volatile
  1387                           
  1388                           ;main.c: 160:     ANSELH = 0;
  1389  02DA  0189               	clrf	9	;volatile
  1390                           
  1391                           ;main.c: 161:     TRISA = 0;
  1392  02DB  1683               	bsf	3,5	;RP0=1, select bank1
  1393  02DC  1303               	bcf	3,6	;RP1=0, select bank1
  1394  02DD  0185               	clrf	5	;volatile
  1395                           
  1396                           ;main.c: 162:     TRISB = 0;
  1397  02DE  0186               	clrf	6	;volatile
  1398                           
  1399                           ;main.c: 163:     TRISD = 0;
  1400  02DF  0188               	clrf	8	;volatile
  1401                           
  1402                           ;main.c: 164:     TRISE = 0;
  1403  02E0  0189               	clrf	9	;volatile
  1404                           
  1405                           ;main.c: 165:     PORTA = 0;
  1406  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  1407  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  1408  02E3  0185               	clrf	5	;volatile
  1409                           
  1410                           ;main.c: 166:     PORTB = 0;
  1411  02E4  0186               	clrf	6	;volatile
  1412                           
  1413                           ;main.c: 167:     PORTD = 0;
  1414  02E5  0188               	clrf	8	;volatile
  1415  02E6                     l1670:
  1416                           
  1417                           ;main.c: 168:     osc_config(8);
  1418  02E6  3008               	movlw	8
  1419  02E7  120A  118A  213B  120A  118A  	fcall	_osc_config
  1420  02EC                     l1672:
  1421                           
  1422                           ;main.c: 169:     I2C_Master_Init(100000);
  1423  02EC  3000               	movlw	0
  1424  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  1425  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  1426  02EF  00A3               	movwf	I2C_Master_Init@c+3
  1427  02F0  3001               	movlw	1
  1428  02F1  00A2               	movwf	I2C_Master_Init@c+2
  1429  02F2  3086               	movlw	134
  1430  02F3  00A1               	movwf	I2C_Master_Init@c+1
  1431  02F4  30A0               	movlw	160
  1432  02F5  00A0               	movwf	I2C_Master_Init@c
  1433  02F6  120A  118A  2172  120A  118A  	fcall	_I2C_Master_Init
  1434  02FB                     l1674:
  1435                           
  1436                           ;main.c: 171:     I2C_Master_Start();
  1437  02FB  120A  118A  205A  120A  118A  	fcall	_I2C_Master_Start
  1438  0300                     l1676:
  1439                           
  1440                           ;main.c: 172:         I2C_Master_Write(0xD0);
  1441  0300  30D0               	movlw	208
  1442  0301  00F0               	movwf	I2C_Master_Write@d
  1443  0302  3000               	movlw	0
  1444  0303  00F1               	movwf	I2C_Master_Write@d+1
  1445  0304  120A  118A  206C  120A  118A  	fcall	_I2C_Master_Write
  1446  0309                     l1678:
  1447                           
  1448                           ;main.c: 173:         I2C_Master_Write(0x02);
  1449  0309  3002               	movlw	2
  1450  030A  00F0               	movwf	I2C_Master_Write@d
  1451  030B  3000               	movlw	0
  1452  030C  00F1               	movwf	I2C_Master_Write@d+1
  1453  030D  120A  118A  206C  120A  118A  	fcall	_I2C_Master_Write
  1454  0312                     l1680:
  1455                           
  1456                           ;main.c: 174:         I2C_Master_Write(0x06);
  1457  0312  3006               	movlw	6
  1458  0313  00F0               	movwf	I2C_Master_Write@d
  1459  0314  3000               	movlw	0
  1460  0315  00F1               	movwf	I2C_Master_Write@d+1
  1461  0316  120A  118A  206C  120A  118A  	fcall	_I2C_Master_Write
  1462  031B                     l1682:
  1463                           
  1464                           ;main.c: 175:         I2C_Master_Stop();
  1465  031B  120A  118A  2063  120A  118A  	fcall	_I2C_Master_Stop
  1466  0320                     l1684:
  1467                           
  1468                           ;main.c: 176:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1469  0320  301A               	movlw	26
  1470  0321  1283               	bcf	3,5	;RP0=0, select bank0
  1471  0322  1303               	bcf	3,6	;RP1=0, select bank0
  1472  0323  00A9               	movwf	??_setup+1
  1473  0324  30F7               	movlw	247
  1474  0325  00A8               	movwf	??_setup
  1475  0326                     u817:
  1476  0326  0BA8               	decfsz	??_setup,f
  1477  0327  2B26               	goto	u817
  1478  0328  0BA9               	decfsz	??_setup+1,f
  1479  0329  2B26               	goto	u817
  1480  032A  2B2B               	nop2
  1481  032B                     l1686:
  1482                           
  1483                           ;main.c: 178:         I2C_Master_Start();
  1484  032B  120A  118A  205A  120A  118A  	fcall	_I2C_Master_Start
  1485  0330                     l1688:
  1486                           
  1487                           ;main.c: 179:         I2C_Master_Write(0xD1);
  1488  0330  30D1               	movlw	209
  1489  0331  00F0               	movwf	I2C_Master_Write@d
  1490  0332  3000               	movlw	0
  1491  0333  00F1               	movwf	I2C_Master_Write@d+1
  1492  0334  120A  118A  206C  120A  118A  	fcall	_I2C_Master_Write
  1493  0339                     l1690:
  1494                           
  1495                           ;main.c: 180:         BASURA = I2C_Master_Read(0);
  1496  0339  3000               	movlw	0
  1497  033A  00F0               	movwf	I2C_Master_Read@a
  1498  033B  00F1               	movwf	I2C_Master_Read@a+1
  1499  033C  120A  118A  210D  120A  118A  	fcall	_I2C_Master_Read
  1500  0341  0870               	movf	?_I2C_Master_Read,w
  1501  0342  1283               	bcf	3,5	;RP0=0, select bank0
  1502  0343  1303               	bcf	3,6	;RP1=0, select bank0
  1503  0344  00A8               	movwf	??_setup
  1504  0345  0828               	movf	??_setup,w
  1505  0346  00BF               	movwf	_BASURA
  1506  0347                     l1692:
  1507                           
  1508                           ;main.c: 181:         I2C_Master_Stop();
  1509  0347  120A  118A  2063  120A  118A  	fcall	_I2C_Master_Stop
  1510  034C                     l1694:
  1511                           
  1512                           ;main.c: 182:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1513  034C  301A               	movlw	26
  1514  034D  1283               	bcf	3,5	;RP0=0, select bank0
  1515  034E  1303               	bcf	3,6	;RP1=0, select bank0
  1516  034F  00A9               	movwf	??_setup+1
  1517  0350  30F7               	movlw	247
  1518  0351  00A8               	movwf	??_setup
  1519  0352                     u827:
  1520  0352  0BA8               	decfsz	??_setup,f
  1521  0353  2B52               	goto	u827
  1522  0354  0BA9               	decfsz	??_setup+1,f
  1523  0355  2B52               	goto	u827
  1524  0356  2B57               	nop2
  1525  0357                     l1696:
  1526                           
  1527                           ;main.c: 184:         I2C_Master_Start();
  1528  0357  120A  118A  205A  120A  118A  	fcall	_I2C_Master_Start
  1529  035C                     l1698:
  1530                           
  1531                           ;main.c: 185:         I2C_Master_Write(0xD0);
  1532  035C  30D0               	movlw	208
  1533  035D  00F0               	movwf	I2C_Master_Write@d
  1534  035E  3000               	movlw	0
  1535  035F  00F1               	movwf	I2C_Master_Write@d+1
  1536  0360  120A  118A  206C  120A  118A  	fcall	_I2C_Master_Write
  1537  0365                     l1700:
  1538                           
  1539                           ;main.c: 186:         I2C_Master_Write(0x01);
  1540  0365  3001               	movlw	1
  1541  0366  00F0               	movwf	I2C_Master_Write@d
  1542  0367  3000               	movlw	0
  1543  0368  00F1               	movwf	I2C_Master_Write@d+1
  1544  0369  120A  118A  206C  120A  118A  	fcall	_I2C_Master_Write
  1545  036E                     l1702:
  1546                           
  1547                           ;main.c: 187:         I2C_Master_Write(0x59);
  1548  036E  3059               	movlw	89
  1549  036F  00F0               	movwf	I2C_Master_Write@d
  1550  0370  3000               	movlw	0
  1551  0371  00F1               	movwf	I2C_Master_Write@d+1
  1552  0372  120A  118A  206C  120A  118A  	fcall	_I2C_Master_Write
  1553  0377                     l1704:
  1554                           
  1555                           ;main.c: 188:         I2C_Master_Stop();
  1556  0377  120A  118A  2063  120A  118A  	fcall	_I2C_Master_Stop
  1557  037C                     l1706:
  1558                           
  1559                           ;main.c: 189:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1560  037C  301A               	movlw	26
  1561  037D  1283               	bcf	3,5	;RP0=0, select bank0
  1562  037E  1303               	bcf	3,6	;RP1=0, select bank0
  1563  037F  00A9               	movwf	??_setup+1
  1564  0380  30F7               	movlw	247
  1565  0381  00A8               	movwf	??_setup
  1566  0382                     u837:
  1567  0382  0BA8               	decfsz	??_setup,f
  1568  0383  2B82               	goto	u837
  1569  0384  0BA9               	decfsz	??_setup+1,f
  1570  0385  2B82               	goto	u837
  1571  0386  2B87               	nop2
  1572  0387                     l1708:
  1573                           
  1574                           ;main.c: 191:         I2C_Master_Start();
  1575  0387  120A  118A  205A  120A  118A  	fcall	_I2C_Master_Start
  1576  038C                     l1710:
  1577                           
  1578                           ;main.c: 192:         I2C_Master_Write(0xD1);
  1579  038C  30D1               	movlw	209
  1580  038D  00F0               	movwf	I2C_Master_Write@d
  1581  038E  3000               	movlw	0
  1582  038F  00F1               	movwf	I2C_Master_Write@d+1
  1583  0390  120A  118A  206C  120A  118A  	fcall	_I2C_Master_Write
  1584  0395                     l1712:
  1585                           
  1586                           ;main.c: 193:         BASURA = I2C_Master_Read(0);
  1587  0395  3000               	movlw	0
  1588  0396  00F0               	movwf	I2C_Master_Read@a
  1589  0397  00F1               	movwf	I2C_Master_Read@a+1
  1590  0398  120A  118A  210D  120A  118A  	fcall	_I2C_Master_Read
  1591  039D  0870               	movf	?_I2C_Master_Read,w
  1592  039E  1283               	bcf	3,5	;RP0=0, select bank0
  1593  039F  1303               	bcf	3,6	;RP1=0, select bank0
  1594  03A0  00A8               	movwf	??_setup
  1595  03A1  0828               	movf	??_setup,w
  1596  03A2  00BF               	movwf	_BASURA
  1597  03A3                     l1714:
  1598                           
  1599                           ;main.c: 194:         I2C_Master_Stop();
  1600  03A3  120A  118A  2063  120A  118A  	fcall	_I2C_Master_Stop
  1601  03A8                     l1716:
  1602                           
  1603                           ;main.c: 195:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1604  03A8  301A               	movlw	26
  1605  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  1606  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  1607  03AB  00A9               	movwf	??_setup+1
  1608  03AC  30F7               	movlw	247
  1609  03AD  00A8               	movwf	??_setup
  1610  03AE                     u847:
  1611  03AE  0BA8               	decfsz	??_setup,f
  1612  03AF  2BAE               	goto	u847
  1613  03B0  0BA9               	decfsz	??_setup+1,f
  1614  03B1  2BAE               	goto	u847
  1615  03B2  2BB3               	nop2
  1616  03B3                     l1718:
  1617                           
  1618                           ;main.c: 197:         I2C_Master_Start();
  1619  03B3  120A  118A  205A  120A  118A  	fcall	_I2C_Master_Start
  1620  03B8                     l1720:
  1621                           
  1622                           ;main.c: 198:         I2C_Master_Write(0xD0);
  1623  03B8  30D0               	movlw	208
  1624  03B9  00F0               	movwf	I2C_Master_Write@d
  1625  03BA  3000               	movlw	0
  1626  03BB  00F1               	movwf	I2C_Master_Write@d+1
  1627  03BC  120A  118A  206C  120A  118A  	fcall	_I2C_Master_Write
  1628  03C1                     l1722:
  1629                           
  1630                           ;main.c: 199:         I2C_Master_Write(0x00);
  1631  03C1  3000               	movlw	0
  1632  03C2  00F0               	movwf	I2C_Master_Write@d
  1633  03C3  00F1               	movwf	I2C_Master_Write@d+1
  1634  03C4  120A  118A  206C  120A  118A  	fcall	_I2C_Master_Write
  1635  03C9                     l1724:
  1636                           
  1637                           ;main.c: 200:         I2C_Master_Write(0x58);
  1638  03C9  3058               	movlw	88
  1639  03CA  00F0               	movwf	I2C_Master_Write@d
  1640  03CB  3000               	movlw	0
  1641  03CC  00F1               	movwf	I2C_Master_Write@d+1
  1642  03CD  120A  118A  206C  120A  118A  	fcall	_I2C_Master_Write
  1643  03D2                     l1726:
  1644                           
  1645                           ;main.c: 201:         I2C_Master_Stop();
  1646  03D2  120A  118A  2063  120A  118A  	fcall	_I2C_Master_Stop
  1647  03D7                     l1728:
  1648                           
  1649                           ;main.c: 202:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1650  03D7  301A               	movlw	26
  1651  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  1652  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  1653  03DA  00A9               	movwf	??_setup+1
  1654  03DB  30F7               	movlw	247
  1655  03DC  00A8               	movwf	??_setup
  1656  03DD                     u857:
  1657  03DD  0BA8               	decfsz	??_setup,f
  1658  03DE  2BDD               	goto	u857
  1659  03DF  0BA9               	decfsz	??_setup+1,f
  1660  03E0  2BDD               	goto	u857
  1661  03E1  2BE2               	nop2
  1662  03E2                     l1730:
  1663                           
  1664                           ;main.c: 204:         I2C_Master_Start();
  1665  03E2  120A  118A  205A  120A  118A  	fcall	_I2C_Master_Start
  1666  03E7                     l1732:
  1667                           
  1668                           ;main.c: 205:         I2C_Master_Write(0xD1);
  1669  03E7  30D1               	movlw	209
  1670  03E8  00F0               	movwf	I2C_Master_Write@d
  1671  03E9  3000               	movlw	0
  1672  03EA  00F1               	movwf	I2C_Master_Write@d+1
  1673  03EB  120A  118A  206C  120A  118A  	fcall	_I2C_Master_Write
  1674  03F0                     l1734:
  1675                           
  1676                           ;main.c: 206:         BASURA = I2C_Master_Read(0);
  1677  03F0  3000               	movlw	0
  1678  03F1  00F0               	movwf	I2C_Master_Read@a
  1679  03F2  00F1               	movwf	I2C_Master_Read@a+1
  1680  03F3  120A  118A  210D  120A  118A  	fcall	_I2C_Master_Read
  1681  03F8  0870               	movf	?_I2C_Master_Read,w
  1682  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  1683  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  1684  03FB  00A8               	movwf	??_setup
  1685  03FC  0828               	movf	??_setup,w
  1686  03FD  00BF               	movwf	_BASURA
  1687  03FE                     l1736:
  1688                           
  1689                           ;main.c: 207:         I2C_Master_Stop();
  1690  03FE  120A  118A  2063  120A  118A  	fcall	_I2C_Master_Stop
  1691  0403                     l1738:
  1692                           
  1693                           ;main.c: 208:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1694  0403  301A               	movlw	26
  1695  0404  1283               	bcf	3,5	;RP0=0, select bank0
  1696  0405  1303               	bcf	3,6	;RP1=0, select bank0
  1697  0406  00A9               	movwf	??_setup+1
  1698  0407  30F7               	movlw	247
  1699  0408  00A8               	movwf	??_setup
  1700  0409                     u867:
  1701  0409  0BA8               	decfsz	??_setup,f
  1702  040A  2C09               	goto	u867
  1703  040B  0BA9               	decfsz	??_setup+1,f
  1704  040C  2C09               	goto	u867
  1705  040D  2C0E               	nop2
  1706  040E                     l1740:
  1707                           
  1708                           ;main.c: 210:         I2C_Master_Start();
  1709  040E  120A  118A  205A  120A  118A  	fcall	_I2C_Master_Start
  1710  0413                     l1742:
  1711                           
  1712                           ;main.c: 211:         I2C_Master_Write(0xD0);
  1713  0413  30D0               	movlw	208
  1714  0414  00F0               	movwf	I2C_Master_Write@d
  1715  0415  3000               	movlw	0
  1716  0416  00F1               	movwf	I2C_Master_Write@d+1
  1717  0417  120A  118A  206C  120A  118A  	fcall	_I2C_Master_Write
  1718  041C                     l1744:
  1719                           
  1720                           ;main.c: 212:         I2C_Master_Write(0x03);
  1721  041C  3003               	movlw	3
  1722  041D  00F0               	movwf	I2C_Master_Write@d
  1723  041E  3000               	movlw	0
  1724  041F  00F1               	movwf	I2C_Master_Write@d+1
  1725  0420  120A  118A  206C  120A  118A  	fcall	_I2C_Master_Write
  1726  0425                     l1746:
  1727                           
  1728                           ;main.c: 213:         I2C_Master_Write(0x06);
  1729  0425  3006               	movlw	6
  1730  0426  00F0               	movwf	I2C_Master_Write@d
  1731  0427  3000               	movlw	0
  1732  0428  00F1               	movwf	I2C_Master_Write@d+1
  1733  0429  120A  118A  206C  120A  118A  	fcall	_I2C_Master_Write
  1734  042E                     l1748:
  1735                           
  1736                           ;main.c: 214:         I2C_Master_Stop();
  1737  042E  120A  118A  2063  120A  118A  	fcall	_I2C_Master_Stop
  1738  0433                     l1750:
  1739                           
  1740                           ;main.c: 215:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1741  0433  301A               	movlw	26
  1742  0434  1283               	bcf	3,5	;RP0=0, select bank0
  1743  0435  1303               	bcf	3,6	;RP1=0, select bank0
  1744  0436  00A9               	movwf	??_setup+1
  1745  0437  30F7               	movlw	247
  1746  0438  00A8               	movwf	??_setup
  1747  0439                     u877:
  1748  0439  0BA8               	decfsz	??_setup,f
  1749  043A  2C39               	goto	u877
  1750  043B  0BA9               	decfsz	??_setup+1,f
  1751  043C  2C39               	goto	u877
  1752  043D  2C3E               	nop2
  1753  043E                     l1752:
  1754                           
  1755                           ;main.c: 217:         I2C_Master_Start();
  1756  043E  120A  118A  205A  120A  118A  	fcall	_I2C_Master_Start
  1757  0443                     l1754:
  1758                           
  1759                           ;main.c: 218:         I2C_Master_Write(0xD1);
  1760  0443  30D1               	movlw	209
  1761  0444  00F0               	movwf	I2C_Master_Write@d
  1762  0445  3000               	movlw	0
  1763  0446  00F1               	movwf	I2C_Master_Write@d+1
  1764  0447  120A  118A  206C  120A  118A  	fcall	_I2C_Master_Write
  1765  044C                     l1756:
  1766                           
  1767                           ;main.c: 219:         BASURA = I2C_Master_Read(0);
  1768  044C  3000               	movlw	0
  1769  044D  00F0               	movwf	I2C_Master_Read@a
  1770  044E  00F1               	movwf	I2C_Master_Read@a+1
  1771  044F  120A  118A  210D  120A  118A  	fcall	_I2C_Master_Read
  1772  0454  0870               	movf	?_I2C_Master_Read,w
  1773  0455  1283               	bcf	3,5	;RP0=0, select bank0
  1774  0456  1303               	bcf	3,6	;RP1=0, select bank0
  1775  0457  00A8               	movwf	??_setup
  1776  0458  0828               	movf	??_setup,w
  1777  0459  00BF               	movwf	_BASURA
  1778  045A                     l1758:
  1779                           
  1780                           ;main.c: 220:         I2C_Master_Stop();
  1781  045A  120A  118A  2063  120A  118A  	fcall	_I2C_Master_Stop
  1782  045F                     l1760:
  1783                           
  1784                           ;main.c: 221:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1785  045F  301A               	movlw	26
  1786  0460  1283               	bcf	3,5	;RP0=0, select bank0
  1787  0461  1303               	bcf	3,6	;RP1=0, select bank0
  1788  0462  00A9               	movwf	??_setup+1
  1789  0463  30F7               	movlw	247
  1790  0464  00A8               	movwf	??_setup
  1791  0465                     u887:
  1792  0465  0BA8               	decfsz	??_setup,f
  1793  0466  2C65               	goto	u887
  1794  0467  0BA9               	decfsz	??_setup+1,f
  1795  0468  2C65               	goto	u887
  1796  0469  2C6A               	nop2
  1797  046A                     l148:
  1798  046A  0008               	return
  1799  046B                     __end_of_setup:
  1800                           
  1801                           	psect	text2
  1802  013B                     __ptext2:	
  1803 ;; *************** function _osc_config *****************
  1804 ;; Defined at:
  1805 ;;		line 17 in file "Osc_config.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;  freq            1    wreg     unsigned char 
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;  freq            1    2[COMMON] unsigned char 
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      void 
  1812 ;; Registers used:
  1813 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1819 ;;      Params:         0       0       0       0       0
  1820 ;;      Locals:         1       0       0       0       0
  1821 ;;      Temps:          2       0       0       0       0
  1822 ;;      Totals:         3       0       0       0       0
  1823 ;;Total ram usage:        3 bytes
  1824 ;; Hardware stack levels used: 1
  1825 ;; This function calls:
  1826 ;;		Nothing
  1827 ;; This function is called by:
  1828 ;;		_setup
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           
  1833                           ;psect for function _osc_config
  1834  013B                     _osc_config:
  1835                           
  1836                           ;incstack = 0
  1837                           ; Regs used in _osc_config: [wreg-fsr0h+status,2+status,0]
  1838                           ;osc_config@freq stored from wreg
  1839  013B  00F2               	movwf	osc_config@freq
  1840  013C                     l1542:
  1841                           
  1842                           ;Osc_config.c: 17: void osc_config(uint8_t freq);Osc_config.c: 18: {;Osc_config.c: 19:  
      +                             switch(freq)
  1843  013C  295B               	goto	l1562
  1844  013D                     l1544:
  1845                           
  1846                           ;Osc_config.c: 22:             OSCCONbits.IRCF=0b100;
  1847  013D  1683               	bsf	3,5	;RP0=1, select bank1
  1848  013E  1303               	bcf	3,6	;RP1=0, select bank1
  1849  013F  080F               	movf	15,w	;volatile
  1850  0140  398F               	andlw	-113
  1851  0141  3840               	iorlw	64
  1852  0142  008F               	movwf	15	;volatile
  1853  0143                     l1546:
  1854                           
  1855                           ;Osc_config.c: 23:             OSCCONbits.SCS=1;
  1856  0143  140F               	bsf	15,0	;volatile
  1857                           
  1858                           ;Osc_config.c: 24:             break;
  1859  0144  2971               	goto	l205
  1860  0145                     l1548:
  1861                           
  1862                           ;Osc_config.c: 27:             OSCCONbits.IRCF=0b101;
  1863  0145  1683               	bsf	3,5	;RP0=1, select bank1
  1864  0146  1303               	bcf	3,6	;RP1=0, select bank1
  1865  0147  080F               	movf	15,w	;volatile
  1866  0148  398F               	andlw	-113
  1867  0149  3850               	iorlw	80
  1868  014A  008F               	movwf	15	;volatile
  1869  014B                     l1550:
  1870                           
  1871                           ;Osc_config.c: 28:             OSCCONbits.SCS=1;
  1872  014B  140F               	bsf	15,0	;volatile
  1873                           
  1874                           ;Osc_config.c: 29:             break;
  1875  014C  2971               	goto	l205
  1876  014D                     l1552:
  1877                           
  1878                           ;Osc_config.c: 32:             OSCCONbits.IRCF=0b110;
  1879  014D  1683               	bsf	3,5	;RP0=1, select bank1
  1880  014E  1303               	bcf	3,6	;RP1=0, select bank1
  1881  014F  080F               	movf	15,w	;volatile
  1882  0150  398F               	andlw	-113
  1883  0151  3860               	iorlw	96
  1884  0152  008F               	movwf	15	;volatile
  1885  0153                     l1554:
  1886                           
  1887                           ;Osc_config.c: 33:             OSCCONbits.SCS=1;
  1888  0153  140F               	bsf	15,0	;volatile
  1889                           
  1890                           ;Osc_config.c: 34:             break;
  1891  0154  2971               	goto	l205
  1892  0155                     l1556:
  1893                           
  1894                           ;Osc_config.c: 37:             OSCCONbits.IRCF=0b111;
  1895  0155  3070               	movlw	112
  1896  0156  1683               	bsf	3,5	;RP0=1, select bank1
  1897  0157  1303               	bcf	3,6	;RP1=0, select bank1
  1898  0158  048F               	iorwf	15,f	;volatile
  1899  0159                     l1558:
  1900                           
  1901                           ;Osc_config.c: 38:             OSCCONbits.SCS=1;
  1902  0159  140F               	bsf	15,0	;volatile
  1903                           
  1904                           ;Osc_config.c: 39:             break;
  1905  015A  2971               	goto	l205
  1906  015B                     l1562:
  1907  015B  0872               	movf	osc_config@freq,w
  1908  015C  00F0               	movwf	??_osc_config
  1909  015D  01F1               	clrf	??_osc_config+1
  1910                           
  1911                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1912                           ; Switch size 1, requested type "simple"
  1913                           ; Number of cases is 1, Range of values is 0 to 0
  1914                           ; switch strategies available:
  1915                           ; Name         Instructions Cycles
  1916                           ; simple_byte            4     3 (average)
  1917                           ; direct_byte           11     8 (fixed)
  1918                           ; jumptable            260     6 (fixed)
  1919                           ;	Chosen strategy is simple_byte
  1920  015E  0871               	movf	??_osc_config+1,w
  1921  015F  3A00               	xorlw	0	; case 0
  1922  0160  1903               	skipnz
  1923  0161  2963               	goto	l2078
  1924  0162  2971               	goto	l205
  1925  0163                     l2078:
  1926                           
  1927                           ; Switch size 1, requested type "simple"
  1928                           ; Number of cases is 4, Range of values is 1 to 8
  1929                           ; switch strategies available:
  1930                           ; Name         Instructions Cycles
  1931                           ; simple_byte           13     7 (average)
  1932                           ; direct_byte           35    11 (fixed)
  1933                           ; jumptable            263     9 (fixed)
  1934                           ;	Chosen strategy is simple_byte
  1935  0163  0870               	movf	??_osc_config,w
  1936  0164  3A01               	xorlw	1	; case 1
  1937  0165  1903               	skipnz
  1938  0166  293D               	goto	l1544
  1939  0167  3A03               	xorlw	3	; case 2
  1940  0168  1903               	skipnz
  1941  0169  2945               	goto	l1548
  1942  016A  3A06               	xorlw	6	; case 4
  1943  016B  1903               	skipnz
  1944  016C  294D               	goto	l1552
  1945  016D  3A0C               	xorlw	12	; case 8
  1946  016E  1903               	skipnz
  1947  016F  2955               	goto	l1556
  1948  0170  2971               	goto	l205
  1949  0171                     l205:
  1950  0171  0008               	return
  1951  0172                     __end_of_osc_config:
  1952                           
  1953                           	psect	text3
  1954  006C                     __ptext3:	
  1955 ;; *************** function _I2C_Master_Write *****************
  1956 ;; Defined at:
  1957 ;;		line 65 in file "I2C.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;  d               2    0[COMMON] unsigned int 
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;		None
  1962 ;; Return value:  Size  Location     Type
  1963 ;;                  1    wreg      void 
  1964 ;; Registers used:
  1965 ;;		wreg, status,2, status,0, pclath, cstack
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1971 ;;      Params:         2       0       0       0       0
  1972 ;;      Locals:         0       0       0       0       0
  1973 ;;      Temps:          0       0       0       0       0
  1974 ;;      Totals:         2       0       0       0       0
  1975 ;;Total ram usage:        2 bytes
  1976 ;; Hardware stack levels used: 1
  1977 ;; Hardware stack levels required when called: 1
  1978 ;; This function calls:
  1979 ;;		_I2C_Master_Wait
  1980 ;; This function is called by:
  1981 ;;		_main
  1982 ;;		_setup
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           
  1987                           ;psect for function _I2C_Master_Write
  1988  006C                     _I2C_Master_Write:
  1989  006C                     l1522:	
  1990                           ;incstack = 0
  1991                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1992                           
  1993                           
  1994                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  1995  006C  120A  118A  2076  120A  118A  	fcall	_I2C_Master_Wait
  1996  0071                     l1524:
  1997                           
  1998                           ;I2C.c: 68:     SSPBUF = d;
  1999  0071  0870               	movf	I2C_Master_Write@d,w
  2000  0072  1283               	bcf	3,5	;RP0=0, select bank0
  2001  0073  1303               	bcf	3,6	;RP1=0, select bank0
  2002  0074  0093               	movwf	19	;volatile
  2003  0075                     l47:
  2004  0075  0008               	return
  2005  0076                     __end_of_I2C_Master_Write:
  2006                           
  2007                           	psect	text4
  2008  0063                     __ptext4:	
  2009 ;; *************** function _I2C_Master_Stop *****************
  2010 ;; Defined at:
  2011 ;;		line 55 in file "I2C.c"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;		None
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;		None
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  1    wreg      void 
  2018 ;; Registers used:
  2019 ;;		wreg, status,2, status,0, pclath, cstack
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2025 ;;      Params:         0       0       0       0       0
  2026 ;;      Locals:         0       0       0       0       0
  2027 ;;      Temps:          0       0       0       0       0
  2028 ;;      Totals:         0       0       0       0       0
  2029 ;;Total ram usage:        0 bytes
  2030 ;; Hardware stack levels used: 1
  2031 ;; Hardware stack levels required when called: 1
  2032 ;; This function calls:
  2033 ;;		_I2C_Master_Wait
  2034 ;; This function is called by:
  2035 ;;		_main
  2036 ;;		_setup
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           
  2041                           ;psect for function _I2C_Master_Stop
  2042  0063                     _I2C_Master_Stop:
  2043  0063                     l1518:	
  2044                           ;incstack = 0
  2045                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2046                           
  2047                           
  2048                           ;I2C.c: 57:     I2C_Master_Wait();
  2049  0063  120A  118A  2076  120A  118A  	fcall	_I2C_Master_Wait
  2050  0068                     l1520:
  2051                           
  2052                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2053  0068  1683               	bsf	3,5	;RP0=1, select bank1
  2054  0069  1303               	bcf	3,6	;RP1=0, select bank1
  2055  006A  1511               	bsf	17,2	;volatile
  2056  006B                     l44:
  2057  006B  0008               	return
  2058  006C                     __end_of_I2C_Master_Stop:
  2059                           
  2060                           	psect	text5
  2061  005A                     __ptext5:	
  2062 ;; *************** function _I2C_Master_Start *****************
  2063 ;; Defined at:
  2064 ;;		line 39 in file "I2C.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;		None
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;		None
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  1    wreg      void 
  2071 ;; Registers used:
  2072 ;;		wreg, status,2, status,0, pclath, cstack
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2078 ;;      Params:         0       0       0       0       0
  2079 ;;      Locals:         0       0       0       0       0
  2080 ;;      Temps:          0       0       0       0       0
  2081 ;;      Totals:         0       0       0       0       0
  2082 ;;Total ram usage:        0 bytes
  2083 ;; Hardware stack levels used: 1
  2084 ;; Hardware stack levels required when called: 1
  2085 ;; This function calls:
  2086 ;;		_I2C_Master_Wait
  2087 ;; This function is called by:
  2088 ;;		_main
  2089 ;;		_setup
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           
  2094                           ;psect for function _I2C_Master_Start
  2095  005A                     _I2C_Master_Start:
  2096  005A                     l1514:	
  2097                           ;incstack = 0
  2098                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2099                           
  2100                           
  2101                           ;I2C.c: 41:     I2C_Master_Wait();
  2102  005A  120A  118A  2076  120A  118A  	fcall	_I2C_Master_Wait
  2103  005F                     l1516:
  2104                           
  2105                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2106  005F  1683               	bsf	3,5	;RP0=1, select bank1
  2107  0060  1303               	bcf	3,6	;RP1=0, select bank1
  2108  0061  1411               	bsf	17,0	;volatile
  2109  0062                     l38:
  2110  0062  0008               	return
  2111  0063                     __end_of_I2C_Master_Start:
  2112                           
  2113                           	psect	text6
  2114  010D                     __ptext6:	
  2115 ;; *************** function _I2C_Master_Read *****************
  2116 ;; Defined at:
  2117 ;;		line 74 in file "I2C.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;  a               2    0[COMMON] unsigned short 
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;  temp            2    4[COMMON] unsigned short 
  2122 ;; Return value:  Size  Location     Type
  2123 ;;                  2    0[COMMON] unsigned short 
  2124 ;; Registers used:
  2125 ;;		wreg, status,2, status,0, pclath, cstack
  2126 ;; Tracked objects:
  2127 ;;		On entry : 0/0
  2128 ;;		On exit  : 0/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2131 ;;      Params:         2       0       0       0       0
  2132 ;;      Locals:         2       0       0       0       0
  2133 ;;      Temps:          2       0       0       0       0
  2134 ;;      Totals:         6       0       0       0       0
  2135 ;;Total ram usage:        6 bytes
  2136 ;; Hardware stack levels used: 1
  2137 ;; Hardware stack levels required when called: 1
  2138 ;; This function calls:
  2139 ;;		_I2C_Master_Wait
  2140 ;; This function is called by:
  2141 ;;		_main
  2142 ;;		_setup
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146                           
  2147                           ;psect for function _I2C_Master_Read
  2148  010D                     _I2C_Master_Read:
  2149  010D                     l1526:	
  2150                           ;incstack = 0
  2151                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2152                           
  2153                           
  2154                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2155  010D  120A  118A  2076  120A  118A  	fcall	_I2C_Master_Wait
  2156  0112                     l1528:
  2157                           
  2158                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2159  0112  1683               	bsf	3,5	;RP0=1, select bank1
  2160  0113  1303               	bcf	3,6	;RP1=0, select bank1
  2161  0114  1591               	bsf	17,3	;volatile
  2162                           
  2163                           ;I2C.c: 79:     I2C_Master_Wait();
  2164  0115  120A  118A  2076  120A  118A  	fcall	_I2C_Master_Wait
  2165  011A                     l1530:
  2166                           
  2167                           ;I2C.c: 80:     temp = SSPBUF;
  2168  011A  1283               	bcf	3,5	;RP0=0, select bank0
  2169  011B  1303               	bcf	3,6	;RP1=0, select bank0
  2170  011C  0813               	movf	19,w	;volatile
  2171  011D  00F2               	movwf	??_I2C_Master_Read
  2172  011E  01F3               	clrf	??_I2C_Master_Read+1
  2173  011F  0872               	movf	??_I2C_Master_Read,w
  2174  0120  00F4               	movwf	I2C_Master_Read@temp
  2175  0121  0873               	movf	??_I2C_Master_Read+1,w
  2176  0122  00F5               	movwf	I2C_Master_Read@temp+1
  2177  0123                     l1532:
  2178                           
  2179                           ;I2C.c: 81:     I2C_Master_Wait();
  2180  0123  120A  118A  2076  120A  118A  	fcall	_I2C_Master_Wait
  2181  0128                     l1534:
  2182                           
  2183                           ;I2C.c: 82:     if(a == 1){
  2184  0128  0370               	decf	I2C_Master_Read@a,w
  2185  0129  0471               	iorwf	I2C_Master_Read@a+1,w
  2186  012A  1D03               	btfss	3,2
  2187  012B  292D               	goto	u461
  2188  012C  292E               	goto	u460
  2189  012D                     u461:
  2190  012D  2932               	goto	l50
  2191  012E                     u460:
  2192  012E                     l1536:
  2193                           
  2194                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2195  012E  1683               	bsf	3,5	;RP0=1, select bank1
  2196  012F  1303               	bcf	3,6	;RP1=0, select bank1
  2197  0130  1291               	bcf	17,5	;volatile
  2198                           
  2199                           ;I2C.c: 84:     }else{
  2200  0131  2935               	goto	l51
  2201  0132                     l50:
  2202                           
  2203                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2204  0132  1683               	bsf	3,5	;RP0=1, select bank1
  2205  0133  1303               	bcf	3,6	;RP1=0, select bank1
  2206  0134  1691               	bsf	17,5	;volatile
  2207  0135                     l51:	
  2208                           ;I2C.c: 86:     }
  2209                           
  2210                           
  2211                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2212  0135  1611               	bsf	17,4	;volatile
  2213  0136                     l1538:
  2214                           
  2215                           ;I2C.c: 88:     return temp;
  2216  0136  0875               	movf	I2C_Master_Read@temp+1,w
  2217  0137  00F1               	movwf	?_I2C_Master_Read+1
  2218  0138  0874               	movf	I2C_Master_Read@temp,w
  2219  0139  00F0               	movwf	?_I2C_Master_Read
  2220  013A                     l52:
  2221  013A  0008               	return
  2222  013B                     __end_of_I2C_Master_Read:
  2223                           
  2224                           	psect	text7
  2225  0076                     __ptext7:	
  2226 ;; *************** function _I2C_Master_Wait *****************
  2227 ;; Defined at:
  2228 ;;		line 32 in file "I2C.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;		None
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;		None
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  1    wreg      void 
  2235 ;; Registers used:
  2236 ;;		wreg, status,2
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2242 ;;      Params:         0       0       0       0       0
  2243 ;;      Locals:         0       0       0       0       0
  2244 ;;      Temps:          0       0       0       0       0
  2245 ;;      Totals:         0       0       0       0       0
  2246 ;;Total ram usage:        0 bytes
  2247 ;; Hardware stack levels used: 1
  2248 ;; This function calls:
  2249 ;;		Nothing
  2250 ;; This function is called by:
  2251 ;;		_I2C_Master_Start
  2252 ;;		_I2C_Master_Stop
  2253 ;;		_I2C_Master_Write
  2254 ;;		_I2C_Master_Read
  2255 ;;		_I2C_Master_RepeatedStart
  2256 ;; This function uses a non-reentrant model
  2257 ;;
  2258                           
  2259                           
  2260                           ;psect for function _I2C_Master_Wait
  2261  0076                     _I2C_Master_Wait:
  2262  0076                     l1472:	
  2263                           ;incstack = 0
  2264                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2265                           
  2266  0076                     l32:	
  2267                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2268                           
  2269  0076  1683               	bsf	3,5	;RP0=1, select bank1
  2270  0077  1303               	bcf	3,6	;RP1=0, select bank1
  2271  0078  1914               	btfsc	20,2	;volatile
  2272  0079  287B               	goto	u361
  2273  007A  287C               	goto	u360
  2274  007B                     u361:
  2275  007B  2876               	goto	l32
  2276  007C                     u360:
  2277  007C                     l1474:
  2278  007C  0811               	movf	17,w	;volatile
  2279  007D  391F               	andlw	31
  2280  007E  1D03               	btfss	3,2
  2281  007F  2881               	goto	u371
  2282  0080  2882               	goto	u370
  2283  0081                     u371:
  2284  0081  2876               	goto	l32
  2285  0082                     u370:
  2286  0082                     l35:
  2287  0082  0008               	return
  2288  0083                     __end_of_I2C_Master_Wait:
  2289                           
  2290                           	psect	text8
  2291  0172                     __ptext8:	
  2292 ;; *************** function _I2C_Master_Init *****************
  2293 ;; Defined at:
  2294 ;;		line 16 in file "I2C.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;  c               4    0[BANK0 ] const unsigned long 
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;		None
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  1    wreg      void 
  2301 ;; Registers used:
  2302 ;;		wreg, status,2, status,0, pclath, cstack
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2308 ;;      Params:         0       4       0       0       0
  2309 ;;      Locals:         0       0       0       0       0
  2310 ;;      Temps:          0       4       0       0       0
  2311 ;;      Totals:         0       8       0       0       0
  2312 ;;Total ram usage:        8 bytes
  2313 ;; Hardware stack levels used: 1
  2314 ;; Hardware stack levels required when called: 1
  2315 ;; This function calls:
  2316 ;;		___lldiv
  2317 ;; This function is called by:
  2318 ;;		_setup
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           
  2323                           ;psect for function _I2C_Master_Init
  2324  0172                     _I2C_Master_Init:
  2325  0172                     l1502:	
  2326                           ;incstack = 0
  2327                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2328                           
  2329                           
  2330                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2331  0172  3028               	movlw	40
  2332  0173  1283               	bcf	3,5	;RP0=0, select bank0
  2333  0174  1303               	bcf	3,6	;RP1=0, select bank0
  2334  0175  0094               	movwf	20	;volatile
  2335  0176                     l1504:
  2336                           
  2337                           ;I2C.c: 19:     SSPCON2 = 0;
  2338  0176  1683               	bsf	3,5	;RP0=1, select bank1
  2339  0177  1303               	bcf	3,6	;RP1=0, select bank1
  2340  0178  0191               	clrf	17	;volatile
  2341  0179                     l1506:
  2342                           
  2343                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2344  0179  1283               	bcf	3,5	;RP0=0, select bank0
  2345  017A  1303               	bcf	3,6	;RP1=0, select bank0
  2346  017B  0820               	movf	I2C_Master_Init@c,w
  2347  017C  00A4               	movwf	??_I2C_Master_Init
  2348  017D  0821               	movf	I2C_Master_Init@c+1,w
  2349  017E  00A5               	movwf	??_I2C_Master_Init+1
  2350  017F  0822               	movf	I2C_Master_Init@c+2,w
  2351  0180  00A6               	movwf	??_I2C_Master_Init+2
  2352  0181  0823               	movf	I2C_Master_Init@c+3,w
  2353  0182  00A7               	movwf	??_I2C_Master_Init+3
  2354  0183  3002               	movlw	2
  2355  0184                     u455:
  2356  0184  1003               	clrc
  2357  0185  0DA4               	rlf	??_I2C_Master_Init,f
  2358  0186  0DA5               	rlf	??_I2C_Master_Init+1,f
  2359  0187  0DA6               	rlf	??_I2C_Master_Init+2,f
  2360  0188  0DA7               	rlf	??_I2C_Master_Init+3,f
  2361  0189                     u450:
  2362  0189  3EFF               	addlw	-1
  2363  018A  1D03               	skipz
  2364  018B  2984               	goto	u455
  2365  018C  0827               	movf	??_I2C_Master_Init+3,w
  2366  018D  00F3               	movwf	___lldiv@divisor+3
  2367  018E  0826               	movf	??_I2C_Master_Init+2,w
  2368  018F  00F2               	movwf	___lldiv@divisor+2
  2369  0190  0825               	movf	??_I2C_Master_Init+1,w
  2370  0191  00F1               	movwf	___lldiv@divisor+1
  2371  0192  0824               	movf	??_I2C_Master_Init,w
  2372  0193  00F0               	movwf	___lldiv@divisor
  2373  0194  3000               	movlw	0
  2374  0195  00F7               	movwf	___lldiv@dividend+3
  2375  0196  307A               	movlw	122
  2376  0197  00F6               	movwf	___lldiv@dividend+2
  2377  0198  3012               	movlw	18
  2378  0199  00F5               	movwf	___lldiv@dividend+1
  2379  019A  3000               	movlw	0
  2380  019B  00F4               	movwf	___lldiv@dividend
  2381  019C  120A  118A  2271  120A  118A  	fcall	___lldiv
  2382  01A1  0870               	movf	?___lldiv,w
  2383  01A2  3EFF               	addlw	255
  2384  01A3  1683               	bsf	3,5	;RP0=1, select bank1
  2385  01A4  1303               	bcf	3,6	;RP1=0, select bank1
  2386  01A5  0093               	movwf	19	;volatile
  2387  01A6                     l1508:
  2388                           
  2389                           ;I2C.c: 21:     SSPSTAT = 0;
  2390  01A6  0194               	clrf	20	;volatile
  2391  01A7                     l1510:
  2392                           
  2393                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2394  01A7  1587               	bsf	7,3	;volatile
  2395  01A8                     l1512:
  2396                           
  2397                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2398  01A8  1607               	bsf	7,4	;volatile
  2399  01A9                     l29:
  2400  01A9  0008               	return
  2401  01AA                     __end_of_I2C_Master_Init:
  2402                           
  2403                           	psect	text9
  2404  0271                     __ptext9:	
  2405 ;; *************** function ___lldiv *****************
  2406 ;; Defined at:
  2407 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;  divisor         4    0[COMMON] unsigned long 
  2410 ;;  dividend        4    4[COMMON] unsigned long 
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;  quotient        4    9[COMMON] unsigned long 
  2413 ;;  counter         1   13[COMMON] unsigned char 
  2414 ;; Return value:  Size  Location     Type
  2415 ;;                  4    0[COMMON] unsigned long 
  2416 ;; Registers used:
  2417 ;;		wreg, status,2, status,0
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2423 ;;      Params:         8       0       0       0       0
  2424 ;;      Locals:         5       0       0       0       0
  2425 ;;      Temps:          1       0       0       0       0
  2426 ;;      Totals:        14       0       0       0       0
  2427 ;;Total ram usage:       14 bytes
  2428 ;; Hardware stack levels used: 1
  2429 ;; This function calls:
  2430 ;;		Nothing
  2431 ;; This function is called by:
  2432 ;;		_I2C_Master_Init
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           
  2437                           ;psect for function ___lldiv
  2438  0271                     ___lldiv:
  2439  0271                     l1478:	
  2440                           ;incstack = 0
  2441                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2442                           
  2443  0271  3000               	movlw	0
  2444  0272  00FC               	movwf	___lldiv@quotient+3
  2445  0273  3000               	movlw	0
  2446  0274  00FB               	movwf	___lldiv@quotient+2
  2447  0275  3000               	movlw	0
  2448  0276  00FA               	movwf	___lldiv@quotient+1
  2449  0277  3000               	movlw	0
  2450  0278  00F9               	movwf	___lldiv@quotient
  2451  0279  0873               	movf	___lldiv@divisor+3,w
  2452  027A  0472               	iorwf	___lldiv@divisor+2,w
  2453  027B  0471               	iorwf	___lldiv@divisor+1,w
  2454  027C  0470               	iorwf	___lldiv@divisor,w
  2455  027D  1903               	skipnz
  2456  027E  2A80               	goto	u381
  2457  027F  2A81               	goto	u380
  2458  0280                     u381:
  2459  0280  2ACE               	goto	l1498
  2460  0281                     u380:
  2461  0281                     l1480:
  2462  0281  01FD               	clrf	___lldiv@counter
  2463  0282  0AFD               	incf	___lldiv@counter,f
  2464  0283  2A91               	goto	l1484
  2465  0284                     l1482:
  2466  0284  3001               	movlw	1
  2467  0285  00F8               	movwf	??___lldiv
  2468  0286                     u395:
  2469  0286  1003               	clrc
  2470  0287  0DF0               	rlf	___lldiv@divisor,f
  2471  0288  0DF1               	rlf	___lldiv@divisor+1,f
  2472  0289  0DF2               	rlf	___lldiv@divisor+2,f
  2473  028A  0DF3               	rlf	___lldiv@divisor+3,f
  2474  028B  0BF8               	decfsz	??___lldiv,f
  2475  028C  2A86               	goto	u395
  2476  028D  3001               	movlw	1
  2477  028E  00F8               	movwf	??___lldiv
  2478  028F  0878               	movf	??___lldiv,w
  2479  0290  07FD               	addwf	___lldiv@counter,f
  2480  0291                     l1484:
  2481  0291  1FF3               	btfss	___lldiv@divisor+3,7
  2482  0292  2A94               	goto	u401
  2483  0293  2A95               	goto	u400
  2484  0294                     u401:
  2485  0294  2A84               	goto	l1482
  2486  0295                     u400:
  2487  0295                     l1486:
  2488  0295  3001               	movlw	1
  2489  0296  00F8               	movwf	??___lldiv
  2490  0297                     u415:
  2491  0297  1003               	clrc
  2492  0298  0DF9               	rlf	___lldiv@quotient,f
  2493  0299  0DFA               	rlf	___lldiv@quotient+1,f
  2494  029A  0DFB               	rlf	___lldiv@quotient+2,f
  2495  029B  0DFC               	rlf	___lldiv@quotient+3,f
  2496  029C  0BF8               	decfsz	??___lldiv,f
  2497  029D  2A97               	goto	u415
  2498  029E                     l1488:
  2499  029E  0873               	movf	___lldiv@divisor+3,w
  2500  029F  0277               	subwf	___lldiv@dividend+3,w
  2501  02A0  1D03               	skipz
  2502  02A1  2AAC               	goto	u425
  2503  02A2  0872               	movf	___lldiv@divisor+2,w
  2504  02A3  0276               	subwf	___lldiv@dividend+2,w
  2505  02A4  1D03               	skipz
  2506  02A5  2AAC               	goto	u425
  2507  02A6  0871               	movf	___lldiv@divisor+1,w
  2508  02A7  0275               	subwf	___lldiv@dividend+1,w
  2509  02A8  1D03               	skipz
  2510  02A9  2AAC               	goto	u425
  2511  02AA  0870               	movf	___lldiv@divisor,w
  2512  02AB  0274               	subwf	___lldiv@dividend,w
  2513  02AC                     u425:
  2514  02AC  1C03               	skipc
  2515  02AD  2AAF               	goto	u421
  2516  02AE  2AB0               	goto	u420
  2517  02AF                     u421:
  2518  02AF  2ABF               	goto	l1494
  2519  02B0                     u420:
  2520  02B0                     l1490:
  2521  02B0  0870               	movf	___lldiv@divisor,w
  2522  02B1  02F4               	subwf	___lldiv@dividend,f
  2523  02B2  0871               	movf	___lldiv@divisor+1,w
  2524  02B3  1C03               	skipc
  2525  02B4  0F71               	incfsz	___lldiv@divisor+1,w
  2526  02B5  02F5               	subwf	___lldiv@dividend+1,f
  2527  02B6  0872               	movf	___lldiv@divisor+2,w
  2528  02B7  1C03               	skipc
  2529  02B8  0F72               	incfsz	___lldiv@divisor+2,w
  2530  02B9  02F6               	subwf	___lldiv@dividend+2,f
  2531  02BA  0873               	movf	___lldiv@divisor+3,w
  2532  02BB  1C03               	skipc
  2533  02BC  0F73               	incfsz	___lldiv@divisor+3,w
  2534  02BD  02F7               	subwf	___lldiv@dividend+3,f
  2535  02BE                     l1492:
  2536  02BE  1479               	bsf	___lldiv@quotient,0
  2537  02BF                     l1494:
  2538  02BF  3001               	movlw	1
  2539  02C0                     u435:
  2540  02C0  1003               	clrc
  2541  02C1  0CF3               	rrf	___lldiv@divisor+3,f
  2542  02C2  0CF2               	rrf	___lldiv@divisor+2,f
  2543  02C3  0CF1               	rrf	___lldiv@divisor+1,f
  2544  02C4  0CF0               	rrf	___lldiv@divisor,f
  2545  02C5  3EFF               	addlw	-1
  2546  02C6  1D03               	skipz
  2547  02C7  2AC0               	goto	u435
  2548  02C8                     l1496:
  2549  02C8  3001               	movlw	1
  2550  02C9  02FD               	subwf	___lldiv@counter,f
  2551  02CA  1D03               	btfss	3,2
  2552  02CB  2ACD               	goto	u441
  2553  02CC  2ACE               	goto	u440
  2554  02CD                     u441:
  2555  02CD  2A95               	goto	l1486
  2556  02CE                     u440:
  2557  02CE                     l1498:
  2558  02CE  087C               	movf	___lldiv@quotient+3,w
  2559  02CF  00F3               	movwf	?___lldiv+3
  2560  02D0  087B               	movf	___lldiv@quotient+2,w
  2561  02D1  00F2               	movwf	?___lldiv+2
  2562  02D2  087A               	movf	___lldiv@quotient+1,w
  2563  02D3  00F1               	movwf	?___lldiv+1
  2564  02D4  0879               	movf	___lldiv@quotient,w
  2565  02D5  00F0               	movwf	?___lldiv
  2566  02D6                     l382:
  2567  02D6  0008               	return
  2568  02D7                     __end_of___lldiv:
  2569                           
  2570                           	psect	text10
  2571  022D                     __ptext10:	
  2572 ;; *************** function _conver1 *****************
  2573 ;; Defined at:
  2574 ;;		line 245 in file "main.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;		None
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;  temporal       16    0[BANK0 ] unsigned char [16]
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  1    wreg      PTR const unsigned char 
  2581 ;; Registers used:
  2582 ;;		wreg
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2588 ;;      Params:         0       0       0       0       0
  2589 ;;      Locals:         0      16       0       0       0
  2590 ;;      Temps:          1       0       0       0       0
  2591 ;;      Totals:         1      16       0       0       0
  2592 ;;Total ram usage:       17 bytes
  2593 ;; Hardware stack levels used: 1
  2594 ;; This function calls:
  2595 ;;		Nothing
  2596 ;; This function is called by:
  2597 ;;		_main
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           
  2602                           ;psect for function _conver1
  2603  022D                     _conver1:
  2604  022D                     l1776:	
  2605                           ;incstack = 0
  2606                           ; Regs used in _conver1: [wreg]
  2607                           
  2608                           
  2609                           ;main.c: 246:     char temporal[16];;main.c: 247:     temporal[0] = C1;
  2610  022D  1283               	bcf	3,5	;RP0=0, select bank0
  2611  022E  1303               	bcf	3,6	;RP1=0, select bank0
  2612  022F  083A               	movf	_C1,w
  2613  0230  00F0               	movwf	??_conver1
  2614  0231  0870               	movf	??_conver1,w
  2615  0232  00A0               	movwf	conver1@temporal
  2616                           
  2617                           ;main.c: 248:     temporal[1] = C2;
  2618  0233  0839               	movf	_C2,w
  2619  0234  00F0               	movwf	??_conver1
  2620  0235  0870               	movf	??_conver1,w
  2621  0236  00A1               	movwf	conver1@temporal+1
  2622                           
  2623                           ;main.c: 249:     temporal[2] = C3;
  2624  0237  0838               	movf	_C3,w
  2625  0238  00F0               	movwf	??_conver1
  2626  0239  0870               	movf	??_conver1,w
  2627  023A  00A2               	movwf	conver1@temporal+2
  2628                           
  2629                           ;main.c: 250:     temporal[3] = 0x2E;
  2630  023B  302E               	movlw	46
  2631  023C  00F0               	movwf	??_conver1
  2632  023D  0870               	movf	??_conver1,w
  2633  023E  00A3               	movwf	conver1@temporal+3
  2634                           
  2635                           ;main.c: 251:     temporal[4] = 0x20;
  2636  023F  3020               	movlw	32
  2637  0240  00F0               	movwf	??_conver1
  2638  0241  0870               	movf	??_conver1,w
  2639  0242  00A4               	movwf	conver1@temporal+4
  2640                           
  2641                           ;main.c: 252:     temporal[5] = DH;
  2642  0243  0836               	movf	_DH,w
  2643  0244  00F0               	movwf	??_conver1
  2644  0245  0870               	movf	??_conver1,w
  2645  0246  00A5               	movwf	conver1@temporal+5
  2646                           
  2647                           ;main.c: 253:     temporal[6] = UH;
  2648  0247  0837               	movf	_UH,w
  2649  0248  00F0               	movwf	??_conver1
  2650  0249  0870               	movf	??_conver1,w
  2651  024A  00A6               	movwf	conver1@temporal+6
  2652                           
  2653                           ;main.c: 254:     temporal[7] = 0x3A;
  2654  024B  303A               	movlw	58
  2655  024C  00F0               	movwf	??_conver1
  2656  024D  0870               	movf	??_conver1,w
  2657  024E  00A7               	movwf	conver1@temporal+7
  2658                           
  2659                           ;main.c: 255:     temporal[8] = DM;
  2660  024F  0834               	movf	_DM,w
  2661  0250  00F0               	movwf	??_conver1
  2662  0251  0870               	movf	??_conver1,w
  2663  0252  00A8               	movwf	conver1@temporal+8
  2664                           
  2665                           ;main.c: 256:     temporal[9] = UM;
  2666  0253  0835               	movf	_UM,w
  2667  0254  00F0               	movwf	??_conver1
  2668  0255  0870               	movf	??_conver1,w
  2669  0256  00A9               	movwf	conver1@temporal+9
  2670                           
  2671                           ;main.c: 257:     temporal[10] = 0x20;
  2672  0257  3020               	movlw	32
  2673  0258  00F0               	movwf	??_conver1
  2674  0259  0870               	movf	??_conver1,w
  2675  025A  00AA               	movwf	conver1@temporal+10
  2676                           
  2677                           ;main.c: 258:     temporal[11] = 0x20;
  2678  025B  3020               	movlw	32
  2679  025C  00F0               	movwf	??_conver1
  2680  025D  0870               	movf	??_conver1,w
  2681  025E  00AB               	movwf	conver1@temporal+11
  2682                           
  2683                           ;main.c: 259:     temporal[12] = 0x20;
  2684  025F  3020               	movlw	32
  2685  0260  00F0               	movwf	??_conver1
  2686  0261  0870               	movf	??_conver1,w
  2687  0262  00AC               	movwf	conver1@temporal+12
  2688                           
  2689                           ;main.c: 260:     temporal[13] = 0x20;
  2690  0263  3020               	movlw	32
  2691  0264  00F0               	movwf	??_conver1
  2692  0265  0870               	movf	??_conver1,w
  2693  0266  00AD               	movwf	conver1@temporal+13
  2694                           
  2695                           ;main.c: 261:     temporal[14] = 0x20;
  2696  0267  3020               	movlw	32
  2697  0268  00F0               	movwf	??_conver1
  2698  0269  0870               	movf	??_conver1,w
  2699  026A  00AE               	movwf	conver1@temporal+14
  2700                           
  2701                           ;main.c: 262:     temporal[15] = 0x20;
  2702  026B  3020               	movlw	32
  2703  026C  00F0               	movwf	??_conver1
  2704  026D  0870               	movf	??_conver1,w
  2705  026E  00AF               	movwf	conver1@temporal+15
  2706                           
  2707                           ;main.c: 263:     return temporal;
  2708  026F  3020               	movlw	(low (conver1@temporal| 0))& (0+255)
  2709  0270                     l154:
  2710  0270  0008               	return
  2711  0271                     __end_of_conver1:
  2712                           
  2713                           	psect	text11
  2714  01E9                     __ptext11:	
  2715 ;; *************** function _conver *****************
  2716 ;; Defined at:
  2717 ;;		line 224 in file "main.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;		None
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;  temporal       16    0[BANK0 ] unsigned char [16]
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  1    wreg      PTR const unsigned char 
  2724 ;; Registers used:
  2725 ;;		wreg
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2731 ;;      Params:         0       0       0       0       0
  2732 ;;      Locals:         0      16       0       0       0
  2733 ;;      Temps:          1       0       0       0       0
  2734 ;;      Totals:         1      16       0       0       0
  2735 ;;Total ram usage:       17 bytes
  2736 ;; Hardware stack levels used: 1
  2737 ;; This function calls:
  2738 ;;		Nothing
  2739 ;; This function is called by:
  2740 ;;		_main
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744                           
  2745                           ;psect for function _conver
  2746  01E9                     _conver:
  2747  01E9                     l1788:	
  2748                           ;incstack = 0
  2749                           ; Regs used in _conver: [wreg]
  2750                           
  2751                           
  2752                           ;main.c: 225:     char temporal[16];;main.c: 226:     temporal[0] = 0x50;
  2753  01E9  3050               	movlw	80
  2754  01EA  00F0               	movwf	??_conver
  2755  01EB  0870               	movf	??_conver,w
  2756  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  2757  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  2758  01EE  00A0               	movwf	conver@temporal
  2759                           
  2760                           ;main.c: 227:     temporal[1] = 0x41;
  2761  01EF  3041               	movlw	65
  2762  01F0  00F0               	movwf	??_conver
  2763  01F1  0870               	movf	??_conver,w
  2764  01F2  00A1               	movwf	conver@temporal+1
  2765                           
  2766                           ;main.c: 228:     temporal[2] = 0x52;
  2767  01F3  3052               	movlw	82
  2768  01F4  00F0               	movwf	??_conver
  2769  01F5  0870               	movf	??_conver,w
  2770  01F6  00A2               	movwf	conver@temporal+2
  2771                           
  2772                           ;main.c: 229:     temporal[3] = 0x51;
  2773  01F7  3051               	movlw	81
  2774  01F8  00F0               	movwf	??_conver
  2775  01F9  0870               	movf	??_conver,w
  2776  01FA  00A3               	movwf	conver@temporal+3
  2777                           
  2778                           ;main.c: 230:     temporal[4] = 0x55;
  2779  01FB  3055               	movlw	85
  2780  01FC  00F0               	movwf	??_conver
  2781  01FD  0870               	movf	??_conver,w
  2782  01FE  00A4               	movwf	conver@temporal+4
  2783                           
  2784                           ;main.c: 231:     temporal[5] = 0x45;
  2785  01FF  3045               	movlw	69
  2786  0200  00F0               	movwf	??_conver
  2787  0201  0870               	movf	??_conver,w
  2788  0202  00A5               	movwf	conver@temporal+5
  2789                           
  2790                           ;main.c: 232:     temporal[6] = 0x4F;
  2791  0203  304F               	movlw	79
  2792  0204  00F0               	movwf	??_conver
  2793  0205  0870               	movf	??_conver,w
  2794  0206  00A6               	movwf	conver@temporal+6
  2795                           
  2796                           ;main.c: 233:     temporal[7] = 0x53;
  2797  0207  3053               	movlw	83
  2798  0208  00F0               	movwf	??_conver
  2799  0209  0870               	movf	??_conver,w
  2800  020A  00A7               	movwf	conver@temporal+7
  2801                           
  2802                           ;main.c: 234:     temporal[8] = 0x3A;
  2803  020B  303A               	movlw	58
  2804  020C  00F0               	movwf	??_conver
  2805  020D  0870               	movf	??_conver,w
  2806  020E  00A8               	movwf	conver@temporal+8
  2807                           
  2808                           ;main.c: 235:     temporal[9] = 0X20;
  2809  020F  3020               	movlw	32
  2810  0210  00F0               	movwf	??_conver
  2811  0211  0870               	movf	??_conver,w
  2812  0212  00A9               	movwf	conver@temporal+9
  2813                           
  2814                           ;main.c: 236:     temporal[10] = 0x30;
  2815  0213  3030               	movlw	48
  2816  0214  00F0               	movwf	??_conver
  2817  0215  0870               	movf	??_conver,w
  2818  0216  00AA               	movwf	conver@temporal+10
  2819                           
  2820                           ;main.c: 237:     temporal[11] = NUM;
  2821  0217  0840               	movf	_NUM,w
  2822  0218  00F0               	movwf	??_conver
  2823  0219  0870               	movf	??_conver,w
  2824  021A  00AB               	movwf	conver@temporal+11
  2825                           
  2826                           ;main.c: 238:     temporal[12] = 0x20;
  2827  021B  3020               	movlw	32
  2828  021C  00F0               	movwf	??_conver
  2829  021D  0870               	movf	??_conver,w
  2830  021E  00AC               	movwf	conver@temporal+12
  2831                           
  2832                           ;main.c: 239:     temporal[13] = 0x20;
  2833  021F  3020               	movlw	32
  2834  0220  00F0               	movwf	??_conver
  2835  0221  0870               	movf	??_conver,w
  2836  0222  00AD               	movwf	conver@temporal+13
  2837                           
  2838                           ;main.c: 240:     temporal[14] = 0x20;
  2839  0223  3020               	movlw	32
  2840  0224  00F0               	movwf	??_conver
  2841  0225  0870               	movf	??_conver,w
  2842  0226  00AE               	movwf	conver@temporal+14
  2843                           
  2844                           ;main.c: 241:     temporal[15] = 0x20;
  2845  0227  3020               	movlw	32
  2846  0228  00F0               	movwf	??_conver
  2847  0229  0870               	movf	??_conver,w
  2848  022A  00AF               	movwf	conver@temporal+15
  2849                           
  2850                           ;main.c: 242:     return temporal;
  2851  022B  3020               	movlw	(low (conver@temporal| 0))& (0+255)
  2852  022C                     l151:
  2853  022C  0008               	return
  2854  022D                     __end_of_conver:
  2855                           
  2856                           	psect	text12
  2857  00C8                     __ptext12:	
  2858 ;; *************** function _Lcd_Write_String *****************
  2859 ;; Defined at:
  2860 ;;		line 54 in file "LCD.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;  a               1    wreg     PTR unsigned char 
  2863 ;;		 -> conver1@temporal(16), conver@temporal(16), 
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;  a               1    6[COMMON] PTR unsigned char 
  2866 ;;		 -> conver1@temporal(16), conver@temporal(16), 
  2867 ;;  i               2    4[COMMON] int 
  2868 ;; Return value:  Size  Location     Type
  2869 ;;                  1    wreg      void 
  2870 ;; Registers used:
  2871 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2872 ;; Tracked objects:
  2873 ;;		On entry : 0/0
  2874 ;;		On exit  : 0/0
  2875 ;;		Unchanged: 0/0
  2876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2877 ;;      Params:         0       0       0       0       0
  2878 ;;      Locals:         3       0       0       0       0
  2879 ;;      Temps:          1       0       0       0       0
  2880 ;;      Totals:         4       0       0       0       0
  2881 ;;Total ram usage:        4 bytes
  2882 ;; Hardware stack levels used: 1
  2883 ;; Hardware stack levels required when called: 2
  2884 ;; This function calls:
  2885 ;;		_Lcd_Write_Char
  2886 ;; This function is called by:
  2887 ;;		_main
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           
  2892                           ;psect for function _Lcd_Write_String
  2893  00C8                     _Lcd_Write_String:
  2894                           
  2895                           ;incstack = 0
  2896                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2897                           ;Lcd_Write_String@a stored from wreg
  2898  00C8  00F6               	movwf	Lcd_Write_String@a
  2899  00C9                     l1780:
  2900                           
  2901                           ;LCD.c: 55:     int i;;LCD.c: 56:     for (i = 0; a[i] != '\0'; i++)
  2902  00C9  01F4               	clrf	Lcd_Write_String@i
  2903  00CA  01F5               	clrf	Lcd_Write_String@i+1
  2904  00CB  28DD               	goto	l1786
  2905  00CC                     l1782:
  2906                           
  2907                           ;LCD.c: 57:         Lcd_Write_Char(a[i]);
  2908  00CC  0874               	movf	Lcd_Write_String@i,w
  2909  00CD  0776               	addwf	Lcd_Write_String@a,w
  2910  00CE  00F3               	movwf	??_Lcd_Write_String
  2911  00CF  0873               	movf	??_Lcd_Write_String,w
  2912  00D0  0084               	movwf	4
  2913  00D1  0800               	movf	0,w
  2914  00D2  120A  118A  2083  120A  118A  	fcall	_Lcd_Write_Char
  2915  00D7                     l1784:
  2916  00D7  3001               	movlw	1
  2917  00D8  07F4               	addwf	Lcd_Write_String@i,f
  2918  00D9  1803               	skipnc
  2919  00DA  0AF5               	incf	Lcd_Write_String@i+1,f
  2920  00DB  3000               	movlw	0
  2921  00DC  07F5               	addwf	Lcd_Write_String@i+1,f
  2922  00DD                     l1786:
  2923  00DD  0874               	movf	Lcd_Write_String@i,w
  2924  00DE  0776               	addwf	Lcd_Write_String@a,w
  2925  00DF  00F3               	movwf	??_Lcd_Write_String
  2926  00E0  0873               	movf	??_Lcd_Write_String,w
  2927  00E1  0084               	movwf	4
  2928  00E2  1383               	bcf	3,7	;select IRP bank0
  2929  00E3  0800               	movf	0,w
  2930  00E4  1D03               	btfss	3,2
  2931  00E5  28E7               	goto	u491
  2932  00E6  28E8               	goto	u490
  2933  00E7                     u491:
  2934  00E7  28CC               	goto	l1782
  2935  00E8                     u490:
  2936  00E8                     l238:
  2937  00E8  0008               	return
  2938  00E9                     __end_of_Lcd_Write_String:
  2939                           
  2940                           	psect	text13
  2941  0083                     __ptext13:	
  2942 ;; *************** function _Lcd_Write_Char *****************
  2943 ;; Defined at:
  2944 ;;		line 45 in file "LCD.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;  a               1    wreg     unsigned char 
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;  a               1    2[COMMON] unsigned char 
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  1    wreg      void 
  2951 ;; Registers used:
  2952 ;;		wreg, status,2, status,0, pclath, cstack
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2958 ;;      Params:         0       0       0       0       0
  2959 ;;      Locals:         1       0       0       0       0
  2960 ;;      Temps:          1       0       0       0       0
  2961 ;;      Totals:         2       0       0       0       0
  2962 ;;Total ram usage:        2 bytes
  2963 ;; Hardware stack levels used: 1
  2964 ;; Hardware stack levels required when called: 1
  2965 ;; This function calls:
  2966 ;;		_Lcd_Port
  2967 ;; This function is called by:
  2968 ;;		_Lcd_Write_String
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           
  2973                           ;psect for function _Lcd_Write_Char
  2974  0083                     _Lcd_Write_Char:
  2975                           
  2976                           ;incstack = 0
  2977                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2978                           ;Lcd_Write_Char@a stored from wreg
  2979  0083  00F2               	movwf	Lcd_Write_Char@a
  2980  0084                     l1656:
  2981                           
  2982                           ;LCD.c: 46:     Lcd_Port(a);
  2983  0084  0872               	movf	Lcd_Write_Char@a,w
  2984  0085  120A  118A  204C  120A  118A  	fcall	_Lcd_Port
  2985  008A                     l1658:
  2986                           
  2987                           ;LCD.c: 47:     PORTEbits.RE1 = 1;
  2988  008A  1283               	bcf	3,5	;RP0=0, select bank0
  2989  008B  1303               	bcf	3,6	;RP1=0, select bank0
  2990  008C  1489               	bsf	9,1	;volatile
  2991  008D                     l1660:
  2992                           
  2993                           ;LCD.c: 48:     PORTEbits.RE2 = 0;
  2994  008D  1109               	bcf	9,2	;volatile
  2995  008E                     l1662:
  2996                           
  2997                           ;LCD.c: 49:     PORTEbits.RE0 = 1;
  2998  008E  1409               	bsf	9,0	;volatile
  2999  008F                     l1664:
  3000                           
  3001                           ;LCD.c: 50:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3002  008F  300D               	movlw	13
  3003  0090  00F1               	movwf	??_Lcd_Write_Char
  3004  0091                     u897:
  3005  0091  0BF1               	decfsz	??_Lcd_Write_Char,f
  3006  0092  2891               	goto	u897
  3007  0093                     l1666:
  3008                           
  3009                           ;LCD.c: 51:     PORTEbits.RE0 = 0;
  3010  0093  1283               	bcf	3,5	;RP0=0, select bank0
  3011  0094  1303               	bcf	3,6	;RP1=0, select bank0
  3012  0095  1009               	bcf	9,0	;volatile
  3013  0096                     l232:
  3014  0096  0008               	return
  3015  0097                     __end_of_Lcd_Write_Char:
  3016                           
  3017                           	psect	text14
  3018  00E9                     __ptext14:	
  3019 ;; *************** function _Lcd_Set_Cursor *****************
  3020 ;; Defined at:
  3021 ;;		line 20 in file "LCD.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;  a               1    wreg     unsigned char 
  3024 ;;  b               1    4[COMMON] unsigned char 
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;  a               1    6[COMMON] unsigned char 
  3027 ;;  temp            1    7[COMMON] unsigned char 
  3028 ;; Return value:  Size  Location     Type
  3029 ;;                  1    wreg      void 
  3030 ;; Registers used:
  3031 ;;		wreg, status,2, status,0, pclath, cstack
  3032 ;; Tracked objects:
  3033 ;;		On entry : 0/0
  3034 ;;		On exit  : 0/0
  3035 ;;		Unchanged: 0/0
  3036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3037 ;;      Params:         1       0       0       0       0
  3038 ;;      Locals:         2       0       0       0       0
  3039 ;;      Temps:          1       0       0       0       0
  3040 ;;      Totals:         4       0       0       0       0
  3041 ;;Total ram usage:        4 bytes
  3042 ;; Hardware stack levels used: 1
  3043 ;; Hardware stack levels required when called: 2
  3044 ;; This function calls:
  3045 ;;		_Lcd_Cmd
  3046 ;; This function is called by:
  3047 ;;		_main
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           
  3052                           ;psect for function _Lcd_Set_Cursor
  3053  00E9                     _Lcd_Set_Cursor:
  3054                           
  3055                           ;incstack = 0
  3056                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3057                           ;Lcd_Set_Cursor@a stored from wreg
  3058  00E9  00F6               	movwf	Lcd_Set_Cursor@a
  3059  00EA                     l1764:
  3060                           
  3061                           ;LCD.c: 21:     char temp;;LCD.c: 22:     if (a == 1) {
  3062  00EA  0376               	decf	Lcd_Set_Cursor@a,w
  3063  00EB  1D03               	btfss	3,2
  3064  00EC  28EE               	goto	u471
  3065  00ED  28EF               	goto	u470
  3066  00EE                     u471:
  3067  00EE  28FB               	goto	l1770
  3068  00EF                     u470:
  3069  00EF                     l1766:
  3070                           
  3071                           ;LCD.c: 23:         temp = 0x80 + b - 1;
  3072  00EF  0874               	movf	Lcd_Set_Cursor@b,w
  3073  00F0  3E7F               	addlw	127
  3074  00F1  00F5               	movwf	??_Lcd_Set_Cursor
  3075  00F2  0875               	movf	??_Lcd_Set_Cursor,w
  3076  00F3  00F7               	movwf	Lcd_Set_Cursor@temp
  3077  00F4                     l1768:
  3078                           
  3079                           ;LCD.c: 24:         Lcd_Cmd(temp);
  3080  00F4  0877               	movf	Lcd_Set_Cursor@temp,w
  3081  00F5  120A  118A  2097  120A  118A  	fcall	_Lcd_Cmd
  3082                           
  3083                           ;LCD.c: 25:     } else if (a == 2) {
  3084  00FA  290C               	goto	l226
  3085  00FB                     l1770:
  3086  00FB  3002               	movlw	2
  3087  00FC  0676               	xorwf	Lcd_Set_Cursor@a,w
  3088  00FD  1D03               	btfss	3,2
  3089  00FE  2900               	goto	u481
  3090  00FF  2901               	goto	u480
  3091  0100                     u481:
  3092  0100  290C               	goto	l226
  3093  0101                     u480:
  3094  0101                     l1772:
  3095                           
  3096                           ;LCD.c: 26:         temp = 0xC0 + b - 1;
  3097  0101  0874               	movf	Lcd_Set_Cursor@b,w
  3098  0102  3EBF               	addlw	191
  3099  0103  00F5               	movwf	??_Lcd_Set_Cursor
  3100  0104  0875               	movf	??_Lcd_Set_Cursor,w
  3101  0105  00F7               	movwf	Lcd_Set_Cursor@temp
  3102  0106                     l1774:
  3103                           
  3104                           ;LCD.c: 27:         Lcd_Cmd(temp);
  3105  0106  0877               	movf	Lcd_Set_Cursor@temp,w
  3106  0107  120A  118A  2097  120A  118A  	fcall	_Lcd_Cmd
  3107  010C                     l226:
  3108  010C  0008               	return
  3109  010D                     __end_of_Lcd_Set_Cursor:
  3110                           
  3111                           	psect	text15
  3112  00AF                     __ptext15:	
  3113 ;; *************** function _Lcd_Init *****************
  3114 ;; Defined at:
  3115 ;;		line 31 in file "LCD.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;		None
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;		None
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  1    wreg      void 
  3122 ;; Registers used:
  3123 ;;		wreg, status,2, status,0, pclath, cstack
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3129 ;;      Params:         0       0       0       0       0
  3130 ;;      Locals:         0       0       0       0       0
  3131 ;;      Temps:          0       0       0       0       0
  3132 ;;      Totals:         0       0       0       0       0
  3133 ;;Total ram usage:        0 bytes
  3134 ;; Hardware stack levels used: 1
  3135 ;; Hardware stack levels required when called: 2
  3136 ;; This function calls:
  3137 ;;		_Lcd_Cmd
  3138 ;; This function is called by:
  3139 ;;		_main
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           
  3144                           ;psect for function _Lcd_Init
  3145  00AF                     _Lcd_Init:
  3146  00AF                     l1762:	
  3147                           ;incstack = 0
  3148                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3149                           
  3150                           
  3151                           ;LCD.c: 39:     Lcd_Cmd(0x38);
  3152  00AF  3038               	movlw	56
  3153  00B0  120A  118A  2097  120A  118A  	fcall	_Lcd_Cmd
  3154                           
  3155                           ;LCD.c: 40:     Lcd_Cmd(0x06);
  3156  00B5  3006               	movlw	6
  3157  00B6  120A  118A  2097  120A  118A  	fcall	_Lcd_Cmd
  3158                           
  3159                           ;LCD.c: 41:     Lcd_Cmd(0x0c);
  3160  00BB  300C               	movlw	12
  3161  00BC  120A  118A  2097  120A  118A  	fcall	_Lcd_Cmd
  3162                           
  3163                           ;LCD.c: 42:     Lcd_Cmd(0x80);
  3164  00C1  3080               	movlw	128
  3165  00C2  120A  118A  2097  120A  118A  	fcall	_Lcd_Cmd
  3166  00C7                     l229:
  3167  00C7  0008               	return
  3168  00C8                     __end_of_Lcd_Init:
  3169                           
  3170                           	psect	text16
  3171  0097                     __ptext16:	
  3172 ;; *************** function _Lcd_Cmd *****************
  3173 ;; Defined at:
  3174 ;;		line 7 in file "LCD.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;  a               1    wreg     unsigned char 
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;  a               1    3[COMMON] unsigned char 
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  1    wreg      void 
  3181 ;; Registers used:
  3182 ;;		wreg, status,2, status,0, pclath, cstack
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3188 ;;      Params:         0       0       0       0       0
  3189 ;;      Locals:         1       0       0       0       0
  3190 ;;      Temps:          2       0       0       0       0
  3191 ;;      Totals:         3       0       0       0       0
  3192 ;;Total ram usage:        3 bytes
  3193 ;; Hardware stack levels used: 1
  3194 ;; Hardware stack levels required when called: 1
  3195 ;; This function calls:
  3196 ;;		_Lcd_Port
  3197 ;; This function is called by:
  3198 ;;		_Lcd_Set_Cursor
  3199 ;;		_Lcd_Init
  3200 ;;		_Lcd_Clear
  3201 ;;		_Lcd_Shift_Right
  3202 ;;		_Lcd_Shift_Left
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206                           
  3207                           ;psect for function _Lcd_Cmd
  3208  0097                     _Lcd_Cmd:
  3209                           
  3210                           ;incstack = 0
  3211                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3212                           ;Lcd_Cmd@a stored from wreg
  3213  0097  00F3               	movwf	Lcd_Cmd@a
  3214  0098                     l1644:
  3215                           
  3216                           ;LCD.c: 8:     Lcd_Port(a);
  3217  0098  0873               	movf	Lcd_Cmd@a,w
  3218  0099  120A  118A  204C  120A  118A  	fcall	_Lcd_Port
  3219  009E                     l1646:
  3220                           
  3221                           ;LCD.c: 9:     PORTEbits.RE1 = 0;
  3222  009E  1283               	bcf	3,5	;RP0=0, select bank0
  3223  009F  1303               	bcf	3,6	;RP1=0, select bank0
  3224  00A0  1089               	bcf	9,1	;volatile
  3225  00A1                     l1648:
  3226                           
  3227                           ;LCD.c: 10:     PORTEbits.RE2 = 0;
  3228  00A1  1109               	bcf	9,2	;volatile
  3229  00A2                     l1650:
  3230                           
  3231                           ;LCD.c: 11:     PORTEbits.RE0 = 1;
  3232  00A2  1409               	bsf	9,0	;volatile
  3233  00A3                     l1652:
  3234                           
  3235                           ;LCD.c: 12:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3236  00A3  3007               	movlw	7
  3237  00A4  00F2               	movwf	??_Lcd_Cmd+1
  3238  00A5  307D               	movlw	125
  3239  00A6  00F1               	movwf	??_Lcd_Cmd
  3240  00A7                     u907:
  3241  00A7  0BF1               	decfsz	??_Lcd_Cmd,f
  3242  00A8  28A7               	goto	u907
  3243  00A9  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3244  00AA  28A7               	goto	u907
  3245  00AB                     l1654:
  3246                           
  3247                           ;LCD.c: 13:     PORTEbits.RE0 = 0;
  3248  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  3249  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  3250  00AD  1009               	bcf	9,0	;volatile
  3251  00AE                     l217:
  3252  00AE  0008               	return
  3253  00AF                     __end_of_Lcd_Cmd:
  3254                           
  3255                           	psect	text17
  3256  004C                     __ptext17:	
  3257 ;; *************** function _Lcd_Port *****************
  3258 ;; Defined at:
  3259 ;;		line 3 in file "LCD.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;  a               1    wreg     unsigned char 
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;  a               1    0[COMMON] unsigned char 
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  1    wreg      void 
  3266 ;; Registers used:
  3267 ;;		wreg
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3273 ;;      Params:         0       0       0       0       0
  3274 ;;      Locals:         1       0       0       0       0
  3275 ;;      Temps:          0       0       0       0       0
  3276 ;;      Totals:         1       0       0       0       0
  3277 ;;Total ram usage:        1 bytes
  3278 ;; Hardware stack levels used: 1
  3279 ;; This function calls:
  3280 ;;		Nothing
  3281 ;; This function is called by:
  3282 ;;		_Lcd_Cmd
  3283 ;;		_Lcd_Write_Char
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           
  3287                           
  3288                           ;psect for function _Lcd_Port
  3289  004C                     _Lcd_Port:
  3290                           
  3291                           ;incstack = 0
  3292                           ; Regs used in _Lcd_Port: [wreg]
  3293                           ;Lcd_Port@a stored from wreg
  3294  004C  00F0               	movwf	Lcd_Port@a
  3295  004D                     l1476:
  3296                           
  3297                           ;LCD.c: 4:     PORTD = a;
  3298  004D  0870               	movf	Lcd_Port@a,w
  3299  004E  1283               	bcf	3,5	;RP0=0, select bank0
  3300  004F  1303               	bcf	3,6	;RP1=0, select bank0
  3301  0050  0088               	movwf	8	;volatile
  3302  0051                     l214:
  3303  0051  0008               	return
  3304  0052                     __end_of_Lcd_Port:
  3305                           
  3306                           	psect	text18
  3307  046B                     __ptext18:	
  3308 ;; *************** function _LECT1 *****************
  3309 ;; Defined at:
  3310 ;;		line 265 in file "main.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;		None
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;		None
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      void 
  3317 ;; Registers used:
  3318 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3324 ;;      Params:         0       0       0       0       0
  3325 ;;      Locals:         0       0       0       0       0
  3326 ;;      Temps:          1       0       0       0       0
  3327 ;;      Totals:         1       0       0       0       0
  3328 ;;Total ram usage:        1 bytes
  3329 ;; Hardware stack levels used: 1
  3330 ;; Hardware stack levels required when called: 1
  3331 ;; This function calls:
  3332 ;;		_num_ascii
  3333 ;; This function is called by:
  3334 ;;		_main
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           
  3339                           ;psect for function _LECT1
  3340  046B                     _LECT1:
  3341  046B                     l1792:	
  3342                           ;incstack = 0
  3343                           ; Regs used in _LECT1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3344                           
  3345                           
  3346                           ;main.c: 266:     NUM = num_ascii(PARKH);
  3347  046B  1283               	bcf	3,5	;RP0=0, select bank0
  3348  046C  1303               	bcf	3,6	;RP1=0, select bank0
  3349  046D  0841               	movf	_PARKH,w
  3350  046E  120A  118A  21AA  120A  118A  	fcall	_num_ascii
  3351  0473  00F3               	movwf	??_LECT1
  3352  0474  0873               	movf	??_LECT1,w
  3353  0475  1283               	bcf	3,5	;RP0=0, select bank0
  3354  0476  1303               	bcf	3,6	;RP1=0, select bank0
  3355  0477  00C0               	movwf	_NUM
  3356  0478                     l1794:
  3357                           
  3358                           ;main.c: 267:     if (DIA == 1){
  3359  0478  033E               	decf	_DIA,w
  3360  0479  1D03               	btfss	3,2
  3361  047A  2C7C               	goto	u501
  3362  047B  2C7D               	goto	u500
  3363  047C                     u501:
  3364  047C  2C8A               	goto	l1798
  3365  047D                     u500:
  3366  047D                     l1796:
  3367                           
  3368                           ;main.c: 268:         C1 = 0x4C;
  3369  047D  304C               	movlw	76
  3370  047E  00F3               	movwf	??_LECT1
  3371  047F  0873               	movf	??_LECT1,w
  3372  0480  00BA               	movwf	_C1
  3373                           
  3374                           ;main.c: 269:         C2 = 0x75;
  3375  0481  3075               	movlw	117
  3376  0482  00F3               	movwf	??_LECT1
  3377  0483  0873               	movf	??_LECT1,w
  3378  0484  00B9               	movwf	_C2
  3379                           
  3380                           ;main.c: 270:         C3 = 0x6E;
  3381  0485  306E               	movlw	110
  3382  0486  00F3               	movwf	??_LECT1
  3383  0487  0873               	movf	??_LECT1,w
  3384  0488  00B8               	movwf	_C3
  3385                           
  3386                           ;main.c: 271:     }
  3387  0489  2CFE               	goto	l158
  3388  048A                     l1798:
  3389  048A  3002               	movlw	2
  3390  048B  063E               	xorwf	_DIA,w
  3391  048C  1D03               	btfss	3,2
  3392  048D  2C8F               	goto	u511
  3393  048E  2C90               	goto	u510
  3394  048F                     u511:
  3395  048F  2C9D               	goto	l1802
  3396  0490                     u510:
  3397  0490                     l1800:
  3398                           
  3399                           ;main.c: 273:         C1 = 0x4D;
  3400  0490  304D               	movlw	77
  3401  0491  00F3               	movwf	??_LECT1
  3402  0492  0873               	movf	??_LECT1,w
  3403  0493  00BA               	movwf	_C1
  3404                           
  3405                           ;main.c: 274:         C2 = 0x61;
  3406  0494  3061               	movlw	97
  3407  0495  00F3               	movwf	??_LECT1
  3408  0496  0873               	movf	??_LECT1,w
  3409  0497  00B9               	movwf	_C2
  3410                           
  3411                           ;main.c: 275:         C3 = 0x72;
  3412  0498  3072               	movlw	114
  3413  0499  00F3               	movwf	??_LECT1
  3414  049A  0873               	movf	??_LECT1,w
  3415  049B  00B8               	movwf	_C3
  3416                           
  3417                           ;main.c: 276:     }
  3418  049C  2CFE               	goto	l158
  3419  049D                     l1802:
  3420  049D  3003               	movlw	3
  3421  049E  063E               	xorwf	_DIA,w
  3422  049F  1D03               	btfss	3,2
  3423  04A0  2CA2               	goto	u521
  3424  04A1  2CA3               	goto	u520
  3425  04A2                     u521:
  3426  04A2  2CB0               	goto	l1806
  3427  04A3                     u520:
  3428  04A3                     l1804:
  3429                           
  3430                           ;main.c: 278:         C1 = 0x4D;
  3431  04A3  304D               	movlw	77
  3432  04A4  00F3               	movwf	??_LECT1
  3433  04A5  0873               	movf	??_LECT1,w
  3434  04A6  00BA               	movwf	_C1
  3435                           
  3436                           ;main.c: 279:         C2 = 0x69;
  3437  04A7  3069               	movlw	105
  3438  04A8  00F3               	movwf	??_LECT1
  3439  04A9  0873               	movf	??_LECT1,w
  3440  04AA  00B9               	movwf	_C2
  3441                           
  3442                           ;main.c: 280:         C3 = 0x65;
  3443  04AB  3065               	movlw	101
  3444  04AC  00F3               	movwf	??_LECT1
  3445  04AD  0873               	movf	??_LECT1,w
  3446  04AE  00B8               	movwf	_C3
  3447                           
  3448                           ;main.c: 281:     }
  3449  04AF  2CFE               	goto	l158
  3450  04B0                     l1806:
  3451  04B0  3004               	movlw	4
  3452  04B1  063E               	xorwf	_DIA,w
  3453  04B2  1D03               	btfss	3,2
  3454  04B3  2CB5               	goto	u531
  3455  04B4  2CB6               	goto	u530
  3456  04B5                     u531:
  3457  04B5  2CC3               	goto	l1810
  3458  04B6                     u530:
  3459  04B6                     l1808:
  3460                           
  3461                           ;main.c: 283:         C1 = 0x4A;
  3462  04B6  304A               	movlw	74
  3463  04B7  00F3               	movwf	??_LECT1
  3464  04B8  0873               	movf	??_LECT1,w
  3465  04B9  00BA               	movwf	_C1
  3466                           
  3467                           ;main.c: 284:         C2 = 0x75;
  3468  04BA  3075               	movlw	117
  3469  04BB  00F3               	movwf	??_LECT1
  3470  04BC  0873               	movf	??_LECT1,w
  3471  04BD  00B9               	movwf	_C2
  3472                           
  3473                           ;main.c: 285:         C3 = 0x65;
  3474  04BE  3065               	movlw	101
  3475  04BF  00F3               	movwf	??_LECT1
  3476  04C0  0873               	movf	??_LECT1,w
  3477  04C1  00B8               	movwf	_C3
  3478                           
  3479                           ;main.c: 286:     }
  3480  04C2  2CFE               	goto	l158
  3481  04C3                     l1810:
  3482  04C3  3005               	movlw	5
  3483  04C4  063E               	xorwf	_DIA,w
  3484  04C5  1D03               	btfss	3,2
  3485  04C6  2CC8               	goto	u541
  3486  04C7  2CC9               	goto	u540
  3487  04C8                     u541:
  3488  04C8  2CD6               	goto	l1814
  3489  04C9                     u540:
  3490  04C9                     l1812:
  3491                           
  3492                           ;main.c: 288:         C1 = 0x56;
  3493  04C9  3056               	movlw	86
  3494  04CA  00F3               	movwf	??_LECT1
  3495  04CB  0873               	movf	??_LECT1,w
  3496  04CC  00BA               	movwf	_C1
  3497                           
  3498                           ;main.c: 289:         C2 = 0x69;
  3499  04CD  3069               	movlw	105
  3500  04CE  00F3               	movwf	??_LECT1
  3501  04CF  0873               	movf	??_LECT1,w
  3502  04D0  00B9               	movwf	_C2
  3503                           
  3504                           ;main.c: 290:         C3 = 0x65;
  3505  04D1  3065               	movlw	101
  3506  04D2  00F3               	movwf	??_LECT1
  3507  04D3  0873               	movf	??_LECT1,w
  3508  04D4  00B8               	movwf	_C3
  3509                           
  3510                           ;main.c: 291:     }
  3511  04D5  2CFE               	goto	l158
  3512  04D6                     l1814:
  3513  04D6  3006               	movlw	6
  3514  04D7  063E               	xorwf	_DIA,w
  3515  04D8  1D03               	btfss	3,2
  3516  04D9  2CDB               	goto	u551
  3517  04DA  2CDC               	goto	u550
  3518  04DB                     u551:
  3519  04DB  2CE9               	goto	l1818
  3520  04DC                     u550:
  3521  04DC                     l1816:
  3522                           
  3523                           ;main.c: 293:         C1 = 0x53;
  3524  04DC  3053               	movlw	83
  3525  04DD  00F3               	movwf	??_LECT1
  3526  04DE  0873               	movf	??_LECT1,w
  3527  04DF  00BA               	movwf	_C1
  3528                           
  3529                           ;main.c: 294:         C2 = 0x61;
  3530  04E0  3061               	movlw	97
  3531  04E1  00F3               	movwf	??_LECT1
  3532  04E2  0873               	movf	??_LECT1,w
  3533  04E3  00B9               	movwf	_C2
  3534                           
  3535                           ;main.c: 295:         C3 = 0x62;
  3536  04E4  3062               	movlw	98
  3537  04E5  00F3               	movwf	??_LECT1
  3538  04E6  0873               	movf	??_LECT1,w
  3539  04E7  00B8               	movwf	_C3
  3540                           
  3541                           ;main.c: 296:     }
  3542  04E8  2CFE               	goto	l158
  3543  04E9                     l1818:
  3544  04E9  3007               	movlw	7
  3545  04EA  063E               	xorwf	_DIA,w
  3546  04EB  1D03               	btfss	3,2
  3547  04EC  2CEE               	goto	u561
  3548  04ED  2CEF               	goto	u560
  3549  04EE                     u561:
  3550  04EE  2CFE               	goto	l164
  3551  04EF                     u560:
  3552  04EF                     l1820:
  3553                           
  3554                           ;main.c: 298:         C1 = 0x44;
  3555  04EF  3044               	movlw	68
  3556  04F0  00F3               	movwf	??_LECT1
  3557  04F1  0873               	movf	??_LECT1,w
  3558  04F2  00BA               	movwf	_C1
  3559                           
  3560                           ;main.c: 299:         C2 = 0x6F;
  3561  04F3  306F               	movlw	111
  3562  04F4  00F3               	movwf	??_LECT1
  3563  04F5  0873               	movf	??_LECT1,w
  3564  04F6  00B9               	movwf	_C2
  3565                           
  3566                           ;main.c: 300:         C3 = 0x6D;
  3567  04F7  306D               	movlw	109
  3568  04F8  00F3               	movwf	??_LECT1
  3569  04F9  0873               	movf	??_LECT1,w
  3570  04FA  00B8               	movwf	_C3
  3571  04FB                     l1822:
  3572                           
  3573                           ;main.c: 301:         CERRADO = 1;
  3574  04FB  01B3               	clrf	_CERRADO
  3575  04FC  0AB3               	incf	_CERRADO,f
  3576  04FD  2CFE               	goto	l158
  3577  04FE                     l164:
  3578  04FE                     l158:
  3579                           
  3580                           ;main.c: 303:     if (HORA<10){
  3581  04FE  300A               	movlw	10
  3582  04FF  023D               	subwf	_HORA,w
  3583  0500  1803               	skipnc
  3584  0501  2D03               	goto	u571
  3585  0502  2D04               	goto	u570
  3586  0503                     u571:
  3587  0503  2D28               	goto	l1836
  3588  0504                     u570:
  3589  0504                     l1824:
  3590                           
  3591                           ;main.c: 304:         DH = 0x30;
  3592  0504  3030               	movlw	48
  3593  0505  00F3               	movwf	??_LECT1
  3594  0506  0873               	movf	??_LECT1,w
  3595  0507  00B6               	movwf	_DH
  3596  0508                     l1826:
  3597                           
  3598                           ;main.c: 305:         UH = num_ascii(HORA);
  3599  0508  083D               	movf	_HORA,w
  3600  0509  120A  118A  21AA  120A  118A  	fcall	_num_ascii
  3601  050E  00F3               	movwf	??_LECT1
  3602  050F  0873               	movf	??_LECT1,w
  3603  0510  1283               	bcf	3,5	;RP0=0, select bank0
  3604  0511  1303               	bcf	3,6	;RP1=0, select bank0
  3605  0512  00B7               	movwf	_UH
  3606  0513                     l1828:
  3607                           
  3608                           ;main.c: 306:         if (HORA<7){
  3609  0513  3007               	movlw	7
  3610  0514  023D               	subwf	_HORA,w
  3611  0515  1803               	skipnc
  3612  0516  2D18               	goto	u581
  3613  0517  2D19               	goto	u580
  3614  0518                     u581:
  3615  0518  2D1E               	goto	l171
  3616  0519                     u580:
  3617  0519                     l1830:
  3618                           
  3619                           ;main.c: 307:             PORTBbits.RB0 = 1;
  3620  0519  1406               	bsf	6,0	;volatile
  3621                           
  3622                           ;main.c: 308:             PORTBbits.RB1 = 1;
  3623  051A  1486               	bsf	6,1	;volatile
  3624                           
  3625                           ;main.c: 309:             CERRADO = 1;
  3626  051B  01B3               	clrf	_CERRADO
  3627  051C  0AB3               	incf	_CERRADO,f
  3628                           
  3629                           ;main.c: 310:         }
  3630  051D  2D7B               	goto	l1870
  3631  051E                     l171:	
  3632                           ;main.c: 311:         else{
  3633                           
  3634                           
  3635                           ;main.c: 312:             PORTBbits.RB0 = 0;
  3636  051E  1006               	bcf	6,0	;volatile
  3637                           
  3638                           ;main.c: 313:             PORTBbits.RB1 = 0;
  3639  051F  1086               	bcf	6,1	;volatile
  3640  0520                     l1832:
  3641                           
  3642                           ;main.c: 314:             if (DIA!=7){
  3643  0520  3007               	movlw	7
  3644  0521  063E               	xorwf	_DIA,w
  3645  0522  1903               	btfsc	3,2
  3646  0523  2D25               	goto	u591
  3647  0524  2D26               	goto	u590
  3648  0525                     u591:
  3649  0525  2D7B               	goto	l1870
  3650  0526                     u590:
  3651  0526                     l1834:
  3652                           
  3653                           ;main.c: 315:                 CERRADO = 0;
  3654  0526  01B3               	clrf	_CERRADO
  3655  0527  2D7B               	goto	l1870
  3656  0528                     l1836:
  3657  0528  301A               	movlw	26
  3658  0529  023D               	subwf	_HORA,w
  3659  052A  1803               	skipnc
  3660  052B  2D2D               	goto	u601
  3661  052C  2D2E               	goto	u600
  3662  052D                     u601:
  3663  052D  2D55               	goto	l1852
  3664  052E                     u600:
  3665  052E                     l1838:
  3666                           
  3667                           ;main.c: 320:         DH = 0x31;
  3668  052E  3031               	movlw	49
  3669  052F  00F3               	movwf	??_LECT1
  3670  0530  0873               	movf	??_LECT1,w
  3671  0531  00B6               	movwf	_DH
  3672  0532                     l1840:
  3673                           
  3674                           ;main.c: 321:         con = HORA-16;
  3675  0532  083D               	movf	_HORA,w
  3676  0533  3EF0               	addlw	240
  3677  0534  00F3               	movwf	??_LECT1
  3678  0535  0873               	movf	??_LECT1,w
  3679  0536  00B2               	movwf	_con
  3680  0537                     l1842:
  3681                           
  3682                           ;main.c: 322:         UH = num_ascii(con);
  3683  0537  0832               	movf	_con,w
  3684  0538  120A  118A  21AA  120A  118A  	fcall	_num_ascii
  3685  053D  00F3               	movwf	??_LECT1
  3686  053E  0873               	movf	??_LECT1,w
  3687  053F  1283               	bcf	3,5	;RP0=0, select bank0
  3688  0540  1303               	bcf	3,6	;RP1=0, select bank0
  3689  0541  00B7               	movwf	_UH
  3690  0542                     l1844:
  3691                           
  3692                           ;main.c: 323:         if (DIA!=7){
  3693  0542  3007               	movlw	7
  3694  0543  063E               	xorwf	_DIA,w
  3695  0544  1903               	btfsc	3,2
  3696  0545  2D47               	goto	u611
  3697  0546  2D48               	goto	u610
  3698  0547                     u611:
  3699  0547  2D49               	goto	l1848
  3700  0548                     u610:
  3701  0548                     l1846:
  3702                           
  3703                           ;main.c: 324:             CERRADO = 0;
  3704  0548  01B3               	clrf	_CERRADO
  3705  0549                     l1848:
  3706                           
  3707                           ;main.c: 326:         if (con>7){
  3708  0549  3008               	movlw	8
  3709  054A  0232               	subwf	_con,w
  3710  054B  1C03               	skipc
  3711  054C  2D4E               	goto	u621
  3712  054D  2D4F               	goto	u620
  3713  054E                     u621:
  3714  054E  2D52               	goto	l177
  3715  054F                     u620:
  3716  054F                     l1850:
  3717                           
  3718                           ;main.c: 327:             PORTBbits.RB0 = 1;
  3719  054F  1406               	bsf	6,0	;volatile
  3720                           
  3721                           ;main.c: 328:             PORTBbits.RB1 = 1;
  3722  0550  1486               	bsf	6,1	;volatile
  3723                           
  3724                           ;main.c: 329:         }
  3725  0551  2D7B               	goto	l1870
  3726  0552                     l177:	
  3727                           ;main.c: 330:         else{
  3728                           
  3729                           
  3730                           ;main.c: 331:             PORTBbits.RB0 = 0;
  3731  0552  1006               	bcf	6,0	;volatile
  3732                           
  3733                           ;main.c: 332:             PORTBbits.RB1 = 0;
  3734  0553  1086               	bcf	6,1	;volatile
  3735  0554  2D7B               	goto	l1870
  3736  0555                     l1852:
  3737                           
  3738                           ;main.c: 336:         DH = 0x32;
  3739  0555  3032               	movlw	50
  3740  0556  00F3               	movwf	??_LECT1
  3741  0557  0873               	movf	??_LECT1,w
  3742  0558  00B6               	movwf	_DH
  3743  0559                     l1854:
  3744                           
  3745                           ;main.c: 337:         con = HORA-32;
  3746  0559  083D               	movf	_HORA,w
  3747  055A  3EE0               	addlw	224
  3748  055B  00F3               	movwf	??_LECT1
  3749  055C  0873               	movf	??_LECT1,w
  3750  055D  00B2               	movwf	_con
  3751  055E                     l1856:
  3752                           
  3753                           ;main.c: 338:         UH = num_ascii(con);
  3754  055E  0832               	movf	_con,w
  3755  055F  120A  118A  21AA  120A  118A  	fcall	_num_ascii
  3756  0564  00F3               	movwf	??_LECT1
  3757  0565  0873               	movf	??_LECT1,w
  3758  0566  1283               	bcf	3,5	;RP0=0, select bank0
  3759  0567  1303               	bcf	3,6	;RP1=0, select bank0
  3760  0568  00B7               	movwf	_UH
  3761  0569                     l1858:
  3762                           
  3763                           ;main.c: 339:         PORTBbits.RB0 = 1;
  3764  0569  1406               	bsf	6,0	;volatile
  3765  056A                     l1860:
  3766                           
  3767                           ;main.c: 340:         PORTBbits.RB1 = 1;
  3768  056A  1486               	bsf	6,1	;volatile
  3769  056B                     l1862:
  3770                           
  3771                           ;main.c: 341:         if (con>1){
  3772  056B  3002               	movlw	2
  3773  056C  0232               	subwf	_con,w
  3774  056D  1C03               	skipc
  3775  056E  2D70               	goto	u631
  3776  056F  2D71               	goto	u630
  3777  0570                     u631:
  3778  0570  2D74               	goto	l1866
  3779  0571                     u630:
  3780  0571                     l1864:
  3781                           
  3782                           ;main.c: 342:             CERRADO = 1;
  3783  0571  01B3               	clrf	_CERRADO
  3784  0572  0AB3               	incf	_CERRADO,f
  3785                           
  3786                           ;main.c: 343:         }
  3787  0573  2D7B               	goto	l1870
  3788  0574                     l1866:
  3789                           
  3790                           ;main.c: 345:             if (DIA!=7){
  3791  0574  3007               	movlw	7
  3792  0575  063E               	xorwf	_DIA,w
  3793  0576  1903               	btfsc	3,2
  3794  0577  2D79               	goto	u641
  3795  0578  2D7A               	goto	u640
  3796  0579                     u641:
  3797  0579  2D7B               	goto	l1870
  3798  057A                     u640:
  3799  057A  2D26               	goto	l1834
  3800  057B                     l1870:
  3801                           
  3802                           ;main.c: 350:     if (MIN<10){
  3803  057B  300A               	movlw	10
  3804  057C  023C               	subwf	_MIN,w
  3805  057D  1803               	skipnc
  3806  057E  2D80               	goto	u651
  3807  057F  2D81               	goto	u650
  3808  0580                     u651:
  3809  0580  2D91               	goto	l1876
  3810  0581                     u650:
  3811  0581                     l1872:
  3812                           
  3813                           ;main.c: 351:         DM = 0x30;
  3814  0581  3030               	movlw	48
  3815  0582  00F3               	movwf	??_LECT1
  3816  0583  0873               	movf	??_LECT1,w
  3817  0584  00B4               	movwf	_DM
  3818  0585                     l1874:
  3819                           
  3820                           ;main.c: 352:         UM = num_ascii(MIN);
  3821  0585  083C               	movf	_MIN,w
  3822  0586  120A  118A  21AA  120A  118A  	fcall	_num_ascii
  3823  058B  00F3               	movwf	??_LECT1
  3824  058C  0873               	movf	??_LECT1,w
  3825  058D  1283               	bcf	3,5	;RP0=0, select bank0
  3826  058E  1303               	bcf	3,6	;RP1=0, select bank0
  3827  058F  00B5               	movwf	_UM
  3828                           
  3829                           ;main.c: 353:     }
  3830  0590  2E18               	goto	l194
  3831  0591                     l1876:
  3832  0591  301A               	movlw	26
  3833  0592  023C               	subwf	_MIN,w
  3834  0593  1803               	skipnc
  3835  0594  2D96               	goto	u661
  3836  0595  2D97               	goto	u660
  3837  0596                     u661:
  3838  0596  2DAC               	goto	l1884
  3839  0597                     u660:
  3840  0597                     l1878:
  3841                           
  3842                           ;main.c: 355:         DM = 0x31;
  3843  0597  3031               	movlw	49
  3844  0598  00F3               	movwf	??_LECT1
  3845  0599  0873               	movf	??_LECT1,w
  3846  059A  00B4               	movwf	_DM
  3847  059B                     l1880:
  3848                           
  3849                           ;main.c: 356:         con = MIN-16;
  3850  059B  083C               	movf	_MIN,w
  3851  059C  3EF0               	addlw	240
  3852  059D  00F3               	movwf	??_LECT1
  3853  059E  0873               	movf	??_LECT1,w
  3854  059F  00B2               	movwf	_con
  3855  05A0                     l1882:
  3856                           
  3857                           ;main.c: 357:         UM = num_ascii(con);
  3858  05A0  0832               	movf	_con,w
  3859  05A1  120A  118A  21AA  120A  118A  	fcall	_num_ascii
  3860  05A6  00F3               	movwf	??_LECT1
  3861  05A7  0873               	movf	??_LECT1,w
  3862  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  3863  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  3864  05AA  00B5               	movwf	_UM
  3865                           
  3866                           ;main.c: 358:     }
  3867  05AB  2E18               	goto	l194
  3868  05AC                     l1884:
  3869  05AC  302A               	movlw	42
  3870  05AD  023C               	subwf	_MIN,w
  3871  05AE  1803               	skipnc
  3872  05AF  2DB1               	goto	u671
  3873  05B0  2DB2               	goto	u670
  3874  05B1                     u671:
  3875  05B1  2DC7               	goto	l1892
  3876  05B2                     u670:
  3877  05B2                     l1886:
  3878                           
  3879                           ;main.c: 360:         DM = 0x32;
  3880  05B2  3032               	movlw	50
  3881  05B3  00F3               	movwf	??_LECT1
  3882  05B4  0873               	movf	??_LECT1,w
  3883  05B5  00B4               	movwf	_DM
  3884  05B6                     l1888:
  3885                           
  3886                           ;main.c: 361:         con = MIN-32;
  3887  05B6  083C               	movf	_MIN,w
  3888  05B7  3EE0               	addlw	224
  3889  05B8  00F3               	movwf	??_LECT1
  3890  05B9  0873               	movf	??_LECT1,w
  3891  05BA  00B2               	movwf	_con
  3892  05BB                     l1890:
  3893                           
  3894                           ;main.c: 362:         UM = num_ascii(con);
  3895  05BB  0832               	movf	_con,w
  3896  05BC  120A  118A  21AA  120A  118A  	fcall	_num_ascii
  3897  05C1  00F3               	movwf	??_LECT1
  3898  05C2  0873               	movf	??_LECT1,w
  3899  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  3900  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  3901  05C5  00B5               	movwf	_UM
  3902                           
  3903                           ;main.c: 363:     }
  3904  05C6  2E18               	goto	l194
  3905  05C7                     l1892:
  3906  05C7  303A               	movlw	58
  3907  05C8  023C               	subwf	_MIN,w
  3908  05C9  1803               	skipnc
  3909  05CA  2DCC               	goto	u681
  3910  05CB  2DCD               	goto	u680
  3911  05CC                     u681:
  3912  05CC  2DE2               	goto	l1900
  3913  05CD                     u680:
  3914  05CD                     l1894:
  3915                           
  3916                           ;main.c: 365:         DM = 0x33;
  3917  05CD  3033               	movlw	51
  3918  05CE  00F3               	movwf	??_LECT1
  3919  05CF  0873               	movf	??_LECT1,w
  3920  05D0  00B4               	movwf	_DM
  3921  05D1                     l1896:
  3922                           
  3923                           ;main.c: 366:         con = MIN-32-16;
  3924  05D1  083C               	movf	_MIN,w
  3925  05D2  3ED0               	addlw	208
  3926  05D3  00F3               	movwf	??_LECT1
  3927  05D4  0873               	movf	??_LECT1,w
  3928  05D5  00B2               	movwf	_con
  3929  05D6                     l1898:
  3930                           
  3931                           ;main.c: 367:         UM = num_ascii(con);
  3932  05D6  0832               	movf	_con,w
  3933  05D7  120A  118A  21AA  120A  118A  	fcall	_num_ascii
  3934  05DC  00F3               	movwf	??_LECT1
  3935  05DD  0873               	movf	??_LECT1,w
  3936  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  3937  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  3938  05E0  00B5               	movwf	_UM
  3939                           
  3940                           ;main.c: 368:     }
  3941  05E1  2E18               	goto	l194
  3942  05E2                     l1900:
  3943  05E2  304A               	movlw	74
  3944  05E3  023C               	subwf	_MIN,w
  3945  05E4  1803               	skipnc
  3946  05E5  2DE7               	goto	u691
  3947  05E6  2DE8               	goto	u690
  3948  05E7                     u691:
  3949  05E7  2DFD               	goto	l1908
  3950  05E8                     u690:
  3951  05E8                     l1902:
  3952                           
  3953                           ;main.c: 370:         DM = 0x34;
  3954  05E8  3034               	movlw	52
  3955  05E9  00F3               	movwf	??_LECT1
  3956  05EA  0873               	movf	??_LECT1,w
  3957  05EB  00B4               	movwf	_DM
  3958  05EC                     l1904:
  3959                           
  3960                           ;main.c: 371:         con = MIN-64;
  3961  05EC  083C               	movf	_MIN,w
  3962  05ED  3EC0               	addlw	192
  3963  05EE  00F3               	movwf	??_LECT1
  3964  05EF  0873               	movf	??_LECT1,w
  3965  05F0  00B2               	movwf	_con
  3966  05F1                     l1906:
  3967                           
  3968                           ;main.c: 372:         UM = num_ascii(con);
  3969  05F1  0832               	movf	_con,w
  3970  05F2  120A  118A  21AA  120A  118A  	fcall	_num_ascii
  3971  05F7  00F3               	movwf	??_LECT1
  3972  05F8  0873               	movf	??_LECT1,w
  3973  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  3974  05FA  1303               	bcf	3,6	;RP1=0, select bank0
  3975  05FB  00B5               	movwf	_UM
  3976                           
  3977                           ;main.c: 373:     }
  3978  05FC  2E18               	goto	l194
  3979  05FD                     l1908:
  3980  05FD  305A               	movlw	90
  3981  05FE  023C               	subwf	_MIN,w
  3982  05FF  1803               	skipnc
  3983  0600  2E02               	goto	u701
  3984  0601  2E03               	goto	u700
  3985  0602                     u701:
  3986  0602  2E18               	goto	l188
  3987  0603                     u700:
  3988  0603                     l1910:
  3989                           
  3990                           ;main.c: 375:         DM = 0x35;
  3991  0603  3035               	movlw	53
  3992  0604  00F3               	movwf	??_LECT1
  3993  0605  0873               	movf	??_LECT1,w
  3994  0606  00B4               	movwf	_DM
  3995  0607                     l1912:
  3996                           
  3997                           ;main.c: 376:         con = MIN-64-16;
  3998  0607  083C               	movf	_MIN,w
  3999  0608  3EB0               	addlw	176
  4000  0609  00F3               	movwf	??_LECT1
  4001  060A  0873               	movf	??_LECT1,w
  4002  060B  00B2               	movwf	_con
  4003  060C                     l1914:
  4004                           
  4005                           ;main.c: 377:         UM = num_ascii(con);
  4006  060C  0832               	movf	_con,w
  4007  060D  120A  118A  21AA  120A  118A  	fcall	_num_ascii
  4008  0612  00F3               	movwf	??_LECT1
  4009  0613  0873               	movf	??_LECT1,w
  4010  0614  1283               	bcf	3,5	;RP0=0, select bank0
  4011  0615  1303               	bcf	3,6	;RP1=0, select bank0
  4012  0616  00B5               	movwf	_UM
  4013  0617  2E18               	goto	l194
  4014  0618                     l188:
  4015  0618                     l194:
  4016  0618  0008               	return
  4017  0619                     __end_of_LECT1:
  4018                           
  4019                           	psect	text19
  4020  01AA                     __ptext19:	
  4021 ;; *************** function _num_ascii *****************
  4022 ;; Defined at:
  4023 ;;		line 3 in file "ASCII.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;  num             1    wreg     unsigned char 
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;  num             1    2[COMMON] unsigned char 
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  1    wreg      unsigned char 
  4030 ;; Registers used:
  4031 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4037 ;;      Params:         0       0       0       0       0
  4038 ;;      Locals:         1       0       0       0       0
  4039 ;;      Temps:          2       0       0       0       0
  4040 ;;      Totals:         3       0       0       0       0
  4041 ;;Total ram usage:        3 bytes
  4042 ;; Hardware stack levels used: 1
  4043 ;; This function calls:
  4044 ;;		Nothing
  4045 ;; This function is called by:
  4046 ;;		_LECT1
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           
  4050                           
  4051                           ;psect for function _num_ascii
  4052  01AA                     _num_ascii:
  4053                           
  4054                           ;incstack = 0
  4055                           ; Regs used in _num_ascii: [wreg-fsr0h+status,2+status,0]
  4056                           ;num_ascii@num stored from wreg
  4057  01AA  00F2               	movwf	num_ascii@num
  4058  01AB                     l1568:
  4059                           
  4060                           ;ASCII.c: 4:  switch(num){
  4061  01AB  29C0               	goto	l1638
  4062  01AC                     l1570:
  4063                           
  4064                           ;ASCII.c: 6:   return 0x30;
  4065  01AC  3030               	movlw	48
  4066  01AD  29E8               	goto	l249
  4067  01AE                     l1582:
  4068                           
  4069                           ;ASCII.c: 14:   return 0x31;
  4070  01AE  3031               	movlw	49
  4071  01AF  29E8               	goto	l249
  4072  01B0                     l1588:
  4073                           
  4074                           ;ASCII.c: 18:   return 0x32;
  4075  01B0  3032               	movlw	50
  4076  01B1  29E8               	goto	l249
  4077  01B2                     l1594:
  4078                           
  4079                           ;ASCII.c: 22:   return 0x33;
  4080  01B2  3033               	movlw	51
  4081  01B3  29E8               	goto	l249
  4082  01B4                     l1600:
  4083                           
  4084                           ;ASCII.c: 26:   return 0x34;
  4085  01B4  3034               	movlw	52
  4086  01B5  29E8               	goto	l249
  4087  01B6                     l1606:
  4088                           
  4089                           ;ASCII.c: 30:   return 0x35;
  4090  01B6  3035               	movlw	53
  4091  01B7  29E8               	goto	l249
  4092  01B8                     l1612:
  4093                           
  4094                           ;ASCII.c: 34:   return 0x36;
  4095  01B8  3036               	movlw	54
  4096  01B9  29E8               	goto	l249
  4097  01BA                     l1618:
  4098                           
  4099                           ;ASCII.c: 38:   return 0x37;
  4100  01BA  3037               	movlw	55
  4101  01BB  29E8               	goto	l249
  4102  01BC                     l1624:
  4103                           
  4104                           ;ASCII.c: 42:   return 0x38;
  4105  01BC  3038               	movlw	56
  4106  01BD  29E8               	goto	l249
  4107  01BE                     l1630:
  4108                           
  4109                           ;ASCII.c: 46:   return 0x39;
  4110  01BE  3039               	movlw	57
  4111  01BF  29E8               	goto	l249
  4112  01C0                     l1638:
  4113  01C0  0872               	movf	num_ascii@num,w
  4114  01C1  00F0               	movwf	??_num_ascii
  4115  01C2  01F1               	clrf	??_num_ascii+1
  4116                           
  4117                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4118                           ; Switch size 1, requested type "simple"
  4119                           ; Number of cases is 1, Range of values is 0 to 0
  4120                           ; switch strategies available:
  4121                           ; Name         Instructions Cycles
  4122                           ; simple_byte            4     3 (average)
  4123                           ; direct_byte           11     8 (fixed)
  4124                           ; jumptable            260     6 (fixed)
  4125                           ;	Chosen strategy is simple_byte
  4126  01C3  0871               	movf	??_num_ascii+1,w
  4127  01C4  3A00               	xorlw	0	; case 0
  4128  01C5  1903               	skipnz
  4129  01C6  29C8               	goto	l2080
  4130  01C7  29AC               	goto	l1570
  4131  01C8                     l2080:
  4132                           
  4133                           ; Switch size 1, requested type "simple"
  4134                           ; Number of cases is 10, Range of values is 0 to 9
  4135                           ; switch strategies available:
  4136                           ; Name         Instructions Cycles
  4137                           ; simple_byte           31    16 (average)
  4138                           ; direct_byte           38     8 (fixed)
  4139                           ; jumptable            260     6 (fixed)
  4140                           ;	Chosen strategy is simple_byte
  4141  01C8  0870               	movf	??_num_ascii,w
  4142  01C9  3A00               	xorlw	0	; case 0
  4143  01CA  1903               	skipnz
  4144  01CB  29AC               	goto	l1570
  4145  01CC  3A01               	xorlw	1	; case 1
  4146  01CD  1903               	skipnz
  4147  01CE  29AE               	goto	l1582
  4148  01CF  3A03               	xorlw	3	; case 2
  4149  01D0  1903               	skipnz
  4150  01D1  29B0               	goto	l1588
  4151  01D2  3A01               	xorlw	1	; case 3
  4152  01D3  1903               	skipnz
  4153  01D4  29B2               	goto	l1594
  4154  01D5  3A07               	xorlw	7	; case 4
  4155  01D6  1903               	skipnz
  4156  01D7  29B4               	goto	l1600
  4157  01D8  3A01               	xorlw	1	; case 5
  4158  01D9  1903               	skipnz
  4159  01DA  29B6               	goto	l1606
  4160  01DB  3A03               	xorlw	3	; case 6
  4161  01DC  1903               	skipnz
  4162  01DD  29B8               	goto	l1612
  4163  01DE  3A01               	xorlw	1	; case 7
  4164  01DF  1903               	skipnz
  4165  01E0  29BA               	goto	l1618
  4166  01E1  3A0F               	xorlw	15	; case 8
  4167  01E2  1903               	skipnz
  4168  01E3  29BC               	goto	l1624
  4169  01E4  3A01               	xorlw	1	; case 9
  4170  01E5  1903               	skipnz
  4171  01E6  29BE               	goto	l1630
  4172  01E7  29AC               	goto	l1570
  4173  01E8                     l249:
  4174  01E8  0008               	return
  4175  01E9                     __end_of_num_ascii:
  4176  007E                     btemp	set	126	;btemp
  4177  007E                     wtemp0	set	126
  4178                           
  4179                           	psect	config
  4180                           
  4181                           ;Config register CONFIG1 @ 0x2007
  4182                           ;	Oscillator Selection bits
  4183                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4184                           ;	Watchdog Timer Enable bit
  4185                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4186                           ;	Power-up Timer Enable bit
  4187                           ;	PWRTE = OFF, PWRT disabled
  4188                           ;	RE3/MCLR pin function select bit
  4189                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4190                           ;	Code Protection bit
  4191                           ;	CP = OFF, Program memory code protection is disabled
  4192                           ;	Data Code Protection bit
  4193                           ;	CPD = OFF, Data memory code protection is disabled
  4194                           ;	Brown Out Reset Selection bits
  4195                           ;	BOREN = OFF, BOR disabled
  4196                           ;	Internal External Switchover bit
  4197                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4198                           ;	Fail-Safe Clock Monitor Enabled bit
  4199                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4200                           ;	Low Voltage Programming Enable bit
  4201                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4202                           ;	In-Circuit Debugger Mode bit
  4203                           ;	DEBUG = 0x1, unprogrammed default
  4204  2007                     	org	8199
  4205  2007  20D4               	dw	8404
  4206                           
  4207                           ;Config register CONFIG2 @ 0x2008
  4208                           ;	Brown-out Reset Selection bit
  4209                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4210                           ;	Flash Program Memory Self Write Enable bits
  4211                           ;	WRT = OFF, Write protection off
  4212  2008                     	org	8200
  4213  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     18      34
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> conver1@temporal(BANK0[16]), conver@temporal(BANK0[16]), 

    sp__conver	PTR const unsigned char  size(1) Largest target is 16
		 -> conver@temporal(BANK0[16]), 

    sp__conver1	PTR const unsigned char  size(1) Largest target is 16
		 -> conver1@temporal(BANK0[16]), 


Critical Paths under _main in COMMON

    _I2C_Master_Init->___lldiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _LECT1->_num_ascii

Critical Paths under _main in BANK0

    _main->_conver
    _main->_conver1
    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8014
                                             16 BANK0      2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                              _LECT1
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                             _conver
                            _conver1
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0    3541
                                              8 BANK0      2     2      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _osc_config
 ---------------------------------------------------------------------------------
 (2) _osc_config                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    2378
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     729
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _conver1                                             17    17      0     385
                                              0 COMMON     1     1      0
                                              0 BANK0     16    16      0
 ---------------------------------------------------------------------------------
 (1) _conver                                              17    17      0     385
                                              0 COMMON     1     1      0
                                              0 BANK0     16    16      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     200
                                              3 COMMON     4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     330
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LECT1                                                1     1      0      22
                                              3 COMMON     1     1      0
                          _num_ascii
 ---------------------------------------------------------------------------------
 (2) _num_ascii                                            3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _LECT1
     _num_ascii
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _conver
   _conver1
   _setup
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Read
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _osc_config

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      30       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     12      22       5       42.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      30      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Aug 20 20:19:16 2021

                       _C1 003A                         _C2 0039                         _C3 0038  
                       l32 0076                         l50 0132                         l35 0082  
                       l51 0135                         l52 013A                         l44 006B  
                       _DH 0036                         l29 01A9                         l38 0062  
                       l47 0075                         _DM 0034                         _UH 0037  
                       _UM 0035                         fsr 0004                        l205 0171  
                      l214 0051                        l151 022C                        l232 0096  
                      l217 00AE                        l226 010C                        l154 0270  
                      l171 051E                        l164 04FE                        l148 046A  
                      l229 00C7                        l158 04FE                        l238 00E8  
                      l249 01E8                        l177 0552                        l194 0618  
                      l188 0618                        l382 02D6                        _DIA 003E  
                      _GIE 005F                        u400 0295                        u401 0294  
                      u500 047D                        u420 02B0                        _MIN 003C  
                      u501 047C                        u421 02AF                        u510 0490  
                      u511 048F                        u415 0297                        u600 052E  
                      u520 04A3                        u440 02CE                        u360 007C  
                      u601 052D                        u521 04A2                        u441 02CD  
                      u425 02AC                        u361 007B                        u610 0548  
                      u530 04B6                        u450 0189                        u370 0082  
                      u611 0547                        u531 04B5                        u435 02C0  
                      u371 0081                        u700 0603                        u620 054F  
                      u540 04C9                        u380 0281                        u460 012E  
                      u701 0602                        u621 054E                        u541 04C8  
                      u381 0280                        u461 012D                        u630 0571  
                      u550 04DC                        u470 00EF                        u631 0570  
                      u551 04DB                        u471 00EE                        u455 0184  
                      u640 057A                        u560 04EF                        u480 0101  
                      u641 0579                        u561 04EE                        u481 0100  
                      u650 0581                        u570 0504                        u490 00E8  
                      u651 0580                        u571 0503                        u491 00E7  
                      u395 0286                        u660 0597                        u580 0519  
                      u661 0596                        u581 0518                        u717 066D  
                      u670 05B2                        u590 0526                        u671 05B1  
                      u591 0525                        u807 07EA                        u727 0699  
                      u680 05CD                        u681 05CC                        u817 0326  
                      u737 06C5                        u690 05E8                        u691 05E7  
                      u907 00A7                        u827 0352                        u747 06F1  
                      u837 0382                        u757 0718                        u847 03AE  
                      u767 0744                        _NUM 0040                        u857 03DD  
                      u777 076B                        u867 0409                        u787 0797  
                      u877 0439                        u797 07BE                        u887 0465  
                      u897 0091                        _con 0032                        fsr0 0004  
                      indf 0000                       l2000 0765                       l2010 0791  
                     l2002 0770                       l2020 07B8                       l2012 079C  
                     l2004 0775                       l2030 07E4                       l2022 07C3  
                     l2014 07A1                       l2006 077E                       l2024 07C8  
                     l2016 07AA                       l2008 078C                       l2026 07D1  
                     l2018 07B3                       l2028 07DF                       l1510 01A7  
                     l1502 0172                       l2080 01C8                       l1600 01B4  
                     l1512 01A8                       l1504 0176                       l1520 0068  
                     l1506 0179                       l1530 011A                       l1514 005A  
                     l1522 006C                       l1612 01B8                       l1508 01A6  
                     l1532 0123                       l1516 005F                       l1524 0071  
                     l1700 0365                       l1630 01BE                       l1606 01B6  
                     l1534 0128                       l1526 010D                       l1518 0063  
                     l2078 0163                       l1550 014B                       l1542 013C  
                     l1710 038C                       l1702 036E                       l1624 01BC  
                     l1800 0490                       l1480 0281                       l1472 0076  
                     l1536 012E                       l1528 0112                       l1552 014D  
                     l1544 013D                       l1720 03B8                       l1712 0395  
                     l1704 0377                       l1618 01BA                       l1570 01AC  
                     l1810 04C3                       l1802 049D                       l1650 00A2  
                     l1490 02B0                       l1482 0284                       l1474 007C  
                     l1538 0136                       l1554 0153                       l1546 0143  
                     l1562 015B                       l1730 03E2                       l1722 03C1  
                     l1714 03A3                       l1706 037C                       l1900 05E2  
                     l1820 04EF                       l1812 04C9                       l1804 04A3  
                     l1476 004D                       l1652 00A3                       l1644 0098  
                     l1660 008D                       l1492 02BE                       l1484 0291  
                     l1556 0155                       l1548 0145                       l1740 040E  
                     l1732 03E7                       l1724 03C9                       l1716 03A8  
                     l1708 0387                       l1582 01AE                       l1638 01C0  
                     l1910 0603                       l1902 05E8                       l1830 0519  
                     l1822 04FB                       l1814 04D6                       l1806 04B0  
                     l1654 00AB                       l1646 009E                       l1662 008E  
                     l1494 02BF                       l1486 0295                       l1478 0271  
                     l1558 0159                       l1750 0433                       l1742 0413  
                     l1734 03F0                       l1726 03D2                       l1718 03B3  
                     l1670 02E6                       l1568 01AB                       l1912 0607  
                     l1904 05EC                       l1840 0532                       l1832 0520  
                     l1824 0504                       l1816 04DC                       l1808 04B6  
                     l1648 00A1                       l1664 008F                       l1656 0084  
                     l1496 02C8                       l1488 029E                       l1760 045F  
                     l1752 043E                       l1744 041C                       l1736 03FE  
                     l1728 03D7                       l1680 0312                       l1672 02EC  
                     l1920 0619                       l1594 01B2                       l1914 060C  
                     l1906 05F1                       l1850 054F                       l1842 0537  
                     l1834 0526                       l1826 0508                       l1818 04E9  
                     l1762 00AF                       l1770 00FB                       l1666 0093  
                     l1658 008A                       l1498 02CE                       l1754 0443  
                     l1746 0425                       l1738 0403                       l1690 0339  
                     l1682 031B                       l1674 02FB                       l1930 0647  
                     l1922 061E                       l1588 01B0                       l1908 05FD  
                     l1860 056A                       l1844 0542                       l1852 0555  
                     l1828 0513                       l1836 0528                       l1772 0101  
                     l1764 00EA                       l1780 00C9                       l1756 044C  
                     l1748 042E                       l1692 0347                       l1684 0320  
                     l1676 0300                       l1668 02D7                       l1940 0667  
                     l1932 064C                       l1924 0623                       l1862 056B  
                     l1854 0559                       l1846 0548                       l1838 052E  
                     l1870 057B                       l1774 0106                       l1766 00EF  
                     l1782 00CC                       l1758 045A                       l1694 034C  
                     l1686 032B                       l1678 0309                       l1950 0693  
                     l1942 0672                       l1934 0651                       l1926 0635  
                     l1880 059B                       l1872 0581                       l1864 0571  
                     l1856 055E                       l1848 0549                       l1792 046B  
                     l1768 00F4                       l1784 00D7                       l1776 022D  
                     l1696 0357                       l1688 0330                       l1960 06BF  
                     l1952 069E                       l1944 0677                       l1936 065A  
                     l1928 063D                       l1890 05BB                       l1882 05A0  
                     l1874 0585                       l1866 0574                       l1858 0569  
                     l1794 0478                       l1786 00DD                       l1698 035C  
                     l1970 06EB                       l1962 06CA                       l1954 06A3  
                     l1946 0680                       l1938 0662                       l1892 05C7  
                     l1884 05AC                       l1876 0591                       l1796 047D  
                     l1788 01E9                       l1980 0712                       l1972 06F6  
                     l1964 06CF                       l1956 06AC                       l1948 068E  
                     l1894 05CD                       l1886 05B2                       l1878 0597  
                     l1798 048A                       l1990 073E                       l1982 071D  
                     l1974 06FB                       l1966 06D8                       l1958 06BA  
                     l1896 05D1                       l1888 05B6                       l1992 0749  
                     l1984 0722                       l1976 0704                       l1968 06E6  
                     l1898 05D6                       l1994 074E                       l1986 072B  
                     l1978 070D                       l1996 0757                       l1988 0739  
                     l1998 0760                       _HORA 003D                       _PEIE 005E  
                     _TEMP 003B          ?_Lcd_Write_String 0070                       _main 0619  
                     btemp 007E                       start 0000         ??_Lcd_Write_String 0073  
           osc_config@freq 0072            __end_of_Lcd_Cmd 00AF            conver1@temporal 0020  
         ?_I2C_Master_Init 0020           ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070                      ?_main 0070                      _ANSEL 0188  
          __end_of___lldiv 02D7                      _LECT1 046B                      _PARKH 0041  
                    _PORTA 0005                      _PORTB 0006                      _PORTD 0008  
  __size_of_Lcd_Set_Cursor 0024                      _TRISA 0085                      _TRISB 0086  
                    _TRISD 0088                      _SSPIE 0463                      _TRISE 0089  
                    _SSPIF 0063            __end_of_conver1 0271                      _setup 02D7  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 00C8  
         __end_of_Lcd_Port 0052            __initialization 07F3               __end_of_main 07F3  
                   ??_main 0030                     ?_LECT1 0070          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072  
                   _BASURA 003F                     ?_setup 0070                     _ANSELH 0189  
                ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0014                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
                   _SSPBUF 0013                  ??___lldiv 0078                     _conver 01E9  
                ??_conver1 0070            Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0074  
  __end_of__initialization 07FC              __end_of_LECT1 0619             __pcstackCOMMON 0070  
            __end_of_setup 046B                    ??_LECT1 0073             _Lcd_Set_Cursor 00E9  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                    ??_setup 0028  
               __pbssBANK0 0032                 __pmaintext 0619                    ?_conver 0070  
__size_of_Lcd_Write_String 0021     __end_of_Lcd_Set_Cursor 010D                    _CERRADO 0033  
       __size_of_num_ascii 003F                 ??_Lcd_Init 0074                 ??_Lcd_Port 0070  
                  _SSPCON2 0091                    _SSPSTAT 0094             _Lcd_Write_Char 0083  
                  _Lcd_Cmd 0097                    ___lldiv 0271            __size_of_conver 0044  
          ?_Lcd_Set_Cursor 0074                    __ptext1 02D7                    __ptext2 013B  
                  __ptext3 006C                    __ptext4 0063                    __ptext5 005A  
                  __ptext6 010D                    __ptext7 0076                    __ptext8 0172  
                  __ptext9 0271                    _conver1 022D   __size_of_I2C_Master_Init 0038  
 __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
                  clrloop0 0053     __end_of_Lcd_Write_Char 0097       end_of_initialization 07FC  
               _osc_config 013B          __end_of_num_ascii 01E9  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070            ___lldiv@counter 007D  
         I2C_Master_Init@c 0020           I2C_Master_Read@a 0070                  Lcd_Port@a 0070  
                _PORTBbits 0006                  _PORTEbits 0009                  _TRISCbits 0087  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0076          Lcd_Write_String@i 0074  
         _Lcd_Write_String 00C8             __end_of_conver 022D        start_initialization 07F3  
        __size_of_Lcd_Init 0019          __size_of_Lcd_Port 0006          ??_I2C_Master_Init 0024  
        ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070  
              ?_osc_config 0070                   ??_conver 0070            Lcd_Write_Char@a 0072  
                ___latbits 0002              __pcstackBANK0 0020                   ?_Lcd_Cmd 0070  
         _I2C_Master_Start 005A           _I2C_Master_Write 006C           ??_Lcd_Set_Cursor 0075  
                 ?___lldiv 0070                   ?_conver1 0070             __size_of_LECT1 01AE  
      __size_of_osc_config 0037             conver@temporal 0020             __size_of_setup 0194  
                clear_ram0 0052                   Lcd_Cmd@a 0073                  _num_ascii 01AA  
         ??_Lcd_Write_Char 0071                   _Lcd_Init 00AF                   _Lcd_Port 004C  
      I2C_Master_Read@temp 0074   __end_of_Lcd_Write_String 00E9           __size_of_Lcd_Cmd 0018  
               ?_num_ascii 0070           __size_of___lldiv 0066           __size_of_conver1 0044  
          _I2C_Master_Init 0172            _I2C_Master_Read 010D            _I2C_Master_Wait 0076  
          _I2C_Master_Stop 0063                   __ptext10 022D                   __ptext11 01E9  
                 __ptext12 00C8                   __ptext13 0083                   __ptext14 00E9  
                 __ptext15 00AF                   __ptext16 0097                   __ptext17 004C  
                 __ptext18 046B                   __ptext19 01AA               ??_osc_config 0070  
            __size_of_main 01DA   __end_of_I2C_Master_Start 0063   __end_of_I2C_Master_Write 0076  
       __end_of_osc_config 0172           ___lldiv@dividend 0074               num_ascii@num 0072  
               _OSCCONbits 008F                ??_num_ascii 0070    __end_of_I2C_Master_Init 01AA  
  __end_of_I2C_Master_Read 013B    __end_of_I2C_Master_Wait 0083    __end_of_I2C_Master_Stop 006C  
       Lcd_Set_Cursor@temp 0077           ___lldiv@quotient 0079          I2C_Master_Write@d 0070  
              _SSPCON2bits 0091  
