

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Aug 19 22:09:03 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2
    26                           	psect	text18,local,class=CODE,merge=1,delta=2
    27                           	psect	text19,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  000E                     	;# 
   393  000F                     	;# 
   394  0010                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0014                     	;# 
   399  0015                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001D                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  0081                     	;# 
   413  0085                     	;# 
   414  0086                     	;# 
   415  0087                     	;# 
   416  0088                     	;# 
   417  0089                     	;# 
   418  008C                     	;# 
   419  008D                     	;# 
   420  008E                     	;# 
   421  008F                     	;# 
   422  0090                     	;# 
   423  0091                     	;# 
   424  0092                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0094                     	;# 
   429  0095                     	;# 
   430  0096                     	;# 
   431  0097                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009A                     	;# 
   435  009B                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  009F                     	;# 
   440  0105                     	;# 
   441  0107                     	;# 
   442  0108                     	;# 
   443  0109                     	;# 
   444  010C                     	;# 
   445  010C                     	;# 
   446  010D                     	;# 
   447  010E                     	;# 
   448  010F                     	;# 
   449  0185                     	;# 
   450  0187                     	;# 
   451  0188                     	;# 
   452  0189                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455  0000                     	;# 
   456  0001                     	;# 
   457  0002                     	;# 
   458  0003                     	;# 
   459  0004                     	;# 
   460  0005                     	;# 
   461  0006                     	;# 
   462  0007                     	;# 
   463  0008                     	;# 
   464  0009                     	;# 
   465  000A                     	;# 
   466  000B                     	;# 
   467  000C                     	;# 
   468  000D                     	;# 
   469  000E                     	;# 
   470  000E                     	;# 
   471  000F                     	;# 
   472  0010                     	;# 
   473  0011                     	;# 
   474  0012                     	;# 
   475  0013                     	;# 
   476  0014                     	;# 
   477  0015                     	;# 
   478  0015                     	;# 
   479  0016                     	;# 
   480  0017                     	;# 
   481  0018                     	;# 
   482  0019                     	;# 
   483  001A                     	;# 
   484  001B                     	;# 
   485  001B                     	;# 
   486  001C                     	;# 
   487  001D                     	;# 
   488  001E                     	;# 
   489  001F                     	;# 
   490  0081                     	;# 
   491  0085                     	;# 
   492  0086                     	;# 
   493  0087                     	;# 
   494  0088                     	;# 
   495  0089                     	;# 
   496  008C                     	;# 
   497  008D                     	;# 
   498  008E                     	;# 
   499  008F                     	;# 
   500  0090                     	;# 
   501  0091                     	;# 
   502  0092                     	;# 
   503  0093                     	;# 
   504  0093                     	;# 
   505  0093                     	;# 
   506  0094                     	;# 
   507  0095                     	;# 
   508  0096                     	;# 
   509  0097                     	;# 
   510  0098                     	;# 
   511  0099                     	;# 
   512  009A                     	;# 
   513  009B                     	;# 
   514  009C                     	;# 
   515  009D                     	;# 
   516  009E                     	;# 
   517  009F                     	;# 
   518  0105                     	;# 
   519  0107                     	;# 
   520  0108                     	;# 
   521  0109                     	;# 
   522  010C                     	;# 
   523  010C                     	;# 
   524  010D                     	;# 
   525  010E                     	;# 
   526  010F                     	;# 
   527  0185                     	;# 
   528  0187                     	;# 
   529  0188                     	;# 
   530  0189                     	;# 
   531  018C                     	;# 
   532  018D                     	;# 
   533  0009                     _PORTEbits	set	9
   534  0008                     _PORTD	set	8
   535  0006                     _PORTB	set	6
   536  0005                     _PORTA	set	5
   537  0013                     _SSPBUF	set	19
   538  0014                     _SSPCON	set	20
   539  0063                     _SSPIF	set	99
   540  005E                     _PEIE	set	94
   541  005F                     _GIE	set	95
   542  008F                     _OSCCONbits	set	143
   543  0089                     _TRISE	set	137
   544  0088                     _TRISD	set	136
   545  0086                     _TRISB	set	134
   546  0085                     _TRISA	set	133
   547  0091                     _SSPCON2bits	set	145
   548  0087                     _TRISCbits	set	135
   549  0094                     _SSPSTAT	set	148
   550  0093                     _SSPADD	set	147
   551  0091                     _SSPCON2	set	145
   552  0463                     _SSPIE	set	1123
   553  043C                     _TRISC4	set	1084
   554  043B                     _TRISC3	set	1083
   555  0189                     _ANSELH	set	393
   556  0188                     _ANSEL	set	392
   557                           
   558                           	psect	cinit
   559  07EC                     start_initialization:	
   560                           ; #config settings
   561                           
   562  07EC                     __initialization:
   563                           
   564                           ; Clear objects allocated to BANK0
   565  07EC  1283               	bcf	3,5	;RP0=0, select bank0
   566  07ED  1303               	bcf	3,6	;RP1=0, select bank0
   567  07EE  01B2               	clrf	__pbssBANK0& (0+127)
   568  07EF  01B3               	clrf	(__pbssBANK0+1)& (0+127)
   569  07F0  01B4               	clrf	(__pbssBANK0+2)& (0+127)
   570  07F1  01B5               	clrf	(__pbssBANK0+3)& (0+127)
   571  07F2  01B6               	clrf	(__pbssBANK0+4)& (0+127)
   572  07F3  01B7               	clrf	(__pbssBANK0+5)& (0+127)
   573  07F4  01B8               	clrf	(__pbssBANK0+6)& (0+127)
   574  07F5  01B9               	clrf	(__pbssBANK0+7)& (0+127)
   575  07F6  01BA               	clrf	(__pbssBANK0+8)& (0+127)
   576  07F7  01BB               	clrf	(__pbssBANK0+9)& (0+127)
   577  07F8  01BC               	clrf	(__pbssBANK0+10)& (0+127)
   578  07F9  01BD               	clrf	(__pbssBANK0+11)& (0+127)
   579  07FA  01BE               	clrf	(__pbssBANK0+12)& (0+127)
   580  07FB  01BF               	clrf	(__pbssBANK0+13)& (0+127)
   581  07FC                     end_of_initialization:	
   582                           ;End of C runtime variable initialization code
   583                           
   584  07FC                     __end_of__initialization:
   585  07FC  0183               	clrf	3
   586  07FD  120A  118A  2E6A   	ljmp	_main	;jump to C main() function
   587                           
   588                           	psect	bssBANK0
   589  0032                     __pbssBANK0:
   590  0032                     _con:
   591  0032                     	ds	1
   592  0033                     _DM:
   593  0033                     	ds	1
   594  0034                     _UM:
   595  0034                     	ds	1
   596  0035                     _DH:
   597  0035                     	ds	1
   598  0036                     _UH:
   599  0036                     	ds	1
   600  0037                     _C3:
   601  0037                     	ds	1
   602  0038                     _C2:
   603  0038                     	ds	1
   604  0039                     _C1:
   605  0039                     	ds	1
   606  003A                     _MIN:
   607  003A                     	ds	1
   608  003B                     _HORA:
   609  003B                     	ds	1
   610  003C                     _DIA:
   611  003C                     	ds	1
   612  003D                     _BASURA:
   613  003D                     	ds	1
   614  003E                     _NUM:
   615  003E                     	ds	1
   616  003F                     _PARKH:
   617  003F                     	ds	1
   618                           
   619                           	psect	cstackCOMMON
   620  0070                     __pcstackCOMMON:
   621  0070                     ?_setup:
   622  0070                     ?_Lcd_Init:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_Lcd_Write_String:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_conver1:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ??_conver1:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_conver:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ??_conver:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_LECT1:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_osc_config:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ??_osc_config:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_num_ascii:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ??_num_ascii:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?_I2C_Master_Wait:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ??_I2C_Master_Wait:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_I2C_Master_Start:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ??_I2C_Master_Start:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_I2C_Master_Stop:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ??_I2C_Master_Stop:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_I2C_Master_Write:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_main:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_Lcd_Port:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ??_Lcd_Port:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_Lcd_Cmd:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_Lcd_Write_Char:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_I2C_Master_Read:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?___lldiv:	
   695                           ; 2 bytes @ 0x0
   696                           
   697  0070                     Lcd_Port@a:	
   698                           ; 4 bytes @ 0x0
   699                           
   700  0070                     I2C_Master_Write@d:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     I2C_Master_Read@a:	
   704                           ; 2 bytes @ 0x0
   705                           
   706  0070                     ___lldiv@divisor:	
   707                           ; 2 bytes @ 0x0
   708                           
   709                           
   710                           ; 4 bytes @ 0x0
   711  0070                     	ds	1
   712  0071                     ??_Lcd_Cmd:
   713  0071                     ??_Lcd_Write_Char:	
   714                           ; 1 bytes @ 0x1
   715                           
   716                           
   717                           ; 1 bytes @ 0x1
   718  0071                     	ds	1
   719  0072                     ??_I2C_Master_Write:
   720  0072                     ??_I2C_Master_Read:	
   721                           ; 1 bytes @ 0x2
   722                           
   723  0072                     osc_config@freq:	
   724                           ; 1 bytes @ 0x2
   725                           
   726  0072                     Lcd_Write_Char@a:	
   727                           ; 1 bytes @ 0x2
   728                           
   729  0072                     num_ascii@num:	
   730                           ; 1 bytes @ 0x2
   731                           
   732                           
   733                           ; 1 bytes @ 0x2
   734  0072                     	ds	1
   735  0073                     ??_Lcd_Write_String:
   736  0073                     ??_LECT1:	
   737                           ; 1 bytes @ 0x3
   738                           
   739  0073                     Lcd_Cmd@a:	
   740                           ; 1 bytes @ 0x3
   741                           
   742                           
   743                           ; 1 bytes @ 0x3
   744  0073                     	ds	1
   745  0074                     ??_Lcd_Init:
   746  0074                     ?_Lcd_Set_Cursor:	
   747                           ; 1 bytes @ 0x4
   748                           
   749  0074                     Lcd_Set_Cursor@b:	
   750                           ; 1 bytes @ 0x4
   751                           
   752  0074                     I2C_Master_Read@temp:	
   753                           ; 1 bytes @ 0x4
   754                           
   755  0074                     Lcd_Write_String@i:	
   756                           ; 2 bytes @ 0x4
   757                           
   758  0074                     ___lldiv@dividend:	
   759                           ; 2 bytes @ 0x4
   760                           
   761                           
   762                           ; 4 bytes @ 0x4
   763  0074                     	ds	1
   764  0075                     ??_Lcd_Set_Cursor:
   765                           
   766                           ; 1 bytes @ 0x5
   767  0075                     	ds	1
   768  0076                     Lcd_Set_Cursor@a:
   769  0076                     Lcd_Write_String@a:	
   770                           ; 1 bytes @ 0x6
   771                           
   772                           
   773                           ; 1 bytes @ 0x6
   774  0076                     	ds	1
   775  0077                     Lcd_Set_Cursor@temp:
   776                           
   777                           ; 1 bytes @ 0x7
   778  0077                     	ds	1
   779  0078                     ??___lldiv:
   780                           
   781                           ; 1 bytes @ 0x8
   782  0078                     	ds	1
   783  0079                     ___lldiv@quotient:
   784                           
   785                           ; 4 bytes @ 0x9
   786  0079                     	ds	4
   787  007D                     ___lldiv@counter:
   788                           
   789                           ; 1 bytes @ 0xD
   790  007D                     	ds	1
   791                           
   792                           	psect	cstackBANK0
   793  0020                     __pcstackBANK0:
   794  0020                     ?_I2C_Master_Init:
   795  0020                     I2C_Master_Init@c:	
   796                           ; 1 bytes @ 0x0
   797                           
   798  0020                     conver@temporal:	
   799                           ; 4 bytes @ 0x0
   800                           
   801  0020                     conver1@temporal:	
   802                           ; 16 bytes @ 0x0
   803                           
   804                           
   805                           ; 16 bytes @ 0x0
   806  0020                     	ds	4
   807  0024                     ??_I2C_Master_Init:
   808                           
   809                           ; 1 bytes @ 0x4
   810  0024                     	ds	4
   811  0028                     ??_setup:
   812                           
   813                           ; 1 bytes @ 0x8
   814  0028                     	ds	8
   815  0030                     ??_main:
   816                           
   817                           ; 1 bytes @ 0x10
   818  0030                     	ds	2
   819                           
   820                           	psect	maintext
   821  066A                     __pmaintext:	
   822 ;;
   823 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   824 ;;
   825 ;; *************** function _main *****************
   826 ;; Defined at:
   827 ;;		line 68 in file "main.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;		None
   830 ;; Auto vars:     Size  Location     Type
   831 ;;		None
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   836 ;; Tracked objects:
   837 ;;		On entry : B00/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   841 ;;      Params:         0       0       0       0       0
   842 ;;      Locals:         0       0       0       0       0
   843 ;;      Temps:          0       2       0       0       0
   844 ;;      Totals:         0       2       0       0       0
   845 ;;Total ram usage:        2 bytes
   846 ;; Hardware stack levels required when called: 3
   847 ;; This function calls:
   848 ;;		_I2C_Master_Read
   849 ;;		_I2C_Master_Start
   850 ;;		_I2C_Master_Stop
   851 ;;		_I2C_Master_Write
   852 ;;		_LECT1
   853 ;;		_Lcd_Init
   854 ;;		_Lcd_Set_Cursor
   855 ;;		_Lcd_Write_String
   856 ;;		_conver
   857 ;;		_conver1
   858 ;;		_setup
   859 ;; This function is called by:
   860 ;;		Startup code after reset
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864                           
   865                           ;psect for function _main
   866  066A                     _main:
   867  066A                     l1781:	
   868                           ;incstack = 0
   869                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   870                           
   871                           
   872                           ;main.c: 69:     setup();
   873  066A  120A  118A  23BD  120A  118A  	fcall	_setup
   874  066F                     l1783:
   875                           
   876                           ;main.c: 70:     Lcd_Init();
   877  066F  120A  118A  2195  120A  118A  	fcall	_Lcd_Init
   878  0674                     l1785:
   879                           
   880                           ;main.c: 72:         Lcd_Set_Cursor(1,1);
   881  0674  01F4               	clrf	Lcd_Set_Cursor@b
   882  0675  0AF4               	incf	Lcd_Set_Cursor@b,f
   883  0676  3001               	movlw	1
   884  0677  120A  118A  21CF  120A  118A  	fcall	_Lcd_Set_Cursor
   885                           
   886                           ;main.c: 73:         Lcd_Write_String(conver1());
   887  067C  120A  118A  2313  120A  118A  	fcall	_conver1
   888  0681  120A  118A  21AE  120A  118A  	fcall	_Lcd_Write_String
   889  0686                     l1787:
   890                           
   891                           ;main.c: 74:         Lcd_Set_Cursor(2,1);
   892  0686  01F4               	clrf	Lcd_Set_Cursor@b
   893  0687  0AF4               	incf	Lcd_Set_Cursor@b,f
   894  0688  3002               	movlw	2
   895  0689  120A  118A  21CF  120A  118A  	fcall	_Lcd_Set_Cursor
   896  068E                     l1789:
   897                           
   898                           ;main.c: 75:         Lcd_Write_String(conver());
   899  068E  120A  118A  22CF  120A  118A  	fcall	_conver
   900  0693  120A  118A  21AE  120A  118A  	fcall	_Lcd_Write_String
   901  0698                     l1791:
   902                           
   903                           ;main.c: 76:         LECT1();
   904  0698  120A  118A  24F6  120A  118A  	fcall	_LECT1
   905  069D                     l1793:
   906                           
   907                           ;main.c: 78:         I2C_Master_Start();
   908  069D  120A  118A  2140  120A  118A  	fcall	_I2C_Master_Start
   909  06A2                     l1795:
   910                           
   911                           ;main.c: 79:         I2C_Master_Write(0x50);
   912  06A2  3050               	movlw	80
   913  06A3  00F0               	movwf	I2C_Master_Write@d
   914  06A4  3000               	movlw	0
   915  06A5  00F1               	movwf	I2C_Master_Write@d+1
   916  06A6  120A  118A  2152  120A  118A  	fcall	_I2C_Master_Write
   917  06AB                     l1797:
   918                           
   919                           ;main.c: 80:         I2C_Master_Write(0);
   920  06AB  3000               	movlw	0
   921  06AC  00F0               	movwf	I2C_Master_Write@d
   922  06AD  00F1               	movwf	I2C_Master_Write@d+1
   923  06AE  120A  118A  2152  120A  118A  	fcall	_I2C_Master_Write
   924  06B3                     l1799:
   925                           
   926                           ;main.c: 81:         I2C_Master_Stop();
   927  06B3  120A  118A  2149  120A  118A  	fcall	_I2C_Master_Stop
   928  06B8                     l1801:
   929                           
   930                           ;main.c: 82:         _delay((unsigned long)((10)*(8000000/4000.0)));
   931  06B8  301A               	movlw	26
   932  06B9  1283               	bcf	3,5	;RP0=0, select bank0
   933  06BA  1303               	bcf	3,6	;RP1=0, select bank0
   934  06BB  00B1               	movwf	??_main+1
   935  06BC  30F7               	movlw	247
   936  06BD  00B0               	movwf	??_main
   937  06BE                     u597:
   938  06BE  0BB0               	decfsz	??_main,f
   939  06BF  2EBE               	goto	u597
   940  06C0  0BB1               	decfsz	??_main+1,f
   941  06C1  2EBE               	goto	u597
   942  06C2  2EC3               	nop2
   943  06C3                     l1803:
   944                           
   945                           ;main.c: 84:         I2C_Master_Start();
   946  06C3  120A  118A  2140  120A  118A  	fcall	_I2C_Master_Start
   947  06C8                     l1805:
   948                           
   949                           ;main.c: 85:         I2C_Master_Write(0x51);
   950  06C8  3051               	movlw	81
   951  06C9  00F0               	movwf	I2C_Master_Write@d
   952  06CA  3000               	movlw	0
   953  06CB  00F1               	movwf	I2C_Master_Write@d+1
   954  06CC  120A  118A  2152  120A  118A  	fcall	_I2C_Master_Write
   955  06D1                     l1807:
   956                           
   957                           ;main.c: 86:         PARKH = I2C_Master_Read(0);
   958  06D1  3000               	movlw	0
   959  06D2  00F0               	movwf	I2C_Master_Read@a
   960  06D3  00F1               	movwf	I2C_Master_Read@a+1
   961  06D4  120A  118A  21F3  120A  118A  	fcall	_I2C_Master_Read
   962  06D9  0870               	movf	?_I2C_Master_Read,w
   963  06DA  1283               	bcf	3,5	;RP0=0, select bank0
   964  06DB  1303               	bcf	3,6	;RP1=0, select bank0
   965  06DC  00B0               	movwf	??_main
   966  06DD  0830               	movf	??_main,w
   967  06DE  00BF               	movwf	_PARKH
   968  06DF                     l1809:
   969                           
   970                           ;main.c: 87:         I2C_Master_Stop();
   971  06DF  120A  118A  2149  120A  118A  	fcall	_I2C_Master_Stop
   972  06E4                     l1811:
   973                           
   974                           ;main.c: 88:         _delay((unsigned long)((10)*(8000000/4000.0)));
   975  06E4  301A               	movlw	26
   976  06E5  1283               	bcf	3,5	;RP0=0, select bank0
   977  06E6  1303               	bcf	3,6	;RP1=0, select bank0
   978  06E7  00B1               	movwf	??_main+1
   979  06E8  30F7               	movlw	247
   980  06E9  00B0               	movwf	??_main
   981  06EA                     u607:
   982  06EA  0BB0               	decfsz	??_main,f
   983  06EB  2EEA               	goto	u607
   984  06EC  0BB1               	decfsz	??_main+1,f
   985  06ED  2EEA               	goto	u607
   986  06EE  2EEF               	nop2
   987  06EF                     l1813:
   988                           
   989                           ;main.c: 90:         I2C_Master_Start();
   990  06EF  120A  118A  2140  120A  118A  	fcall	_I2C_Master_Start
   991  06F4                     l1815:
   992                           
   993                           ;main.c: 91:         I2C_Master_Write(0xD0);
   994  06F4  30D0               	movlw	208
   995  06F5  00F0               	movwf	I2C_Master_Write@d
   996  06F6  3000               	movlw	0
   997  06F7  00F1               	movwf	I2C_Master_Write@d+1
   998  06F8  120A  118A  2152  120A  118A  	fcall	_I2C_Master_Write
   999  06FD                     l1817:
  1000                           
  1001                           ;main.c: 92:         I2C_Master_Write(0x02);
  1002  06FD  3002               	movlw	2
  1003  06FE  00F0               	movwf	I2C_Master_Write@d
  1004  06FF  3000               	movlw	0
  1005  0700  00F1               	movwf	I2C_Master_Write@d+1
  1006  0701  120A  118A  2152  120A  118A  	fcall	_I2C_Master_Write
  1007  0706                     l1819:
  1008                           
  1009                           ;main.c: 93:         I2C_Master_Stop();
  1010  0706  120A  118A  2149  120A  118A  	fcall	_I2C_Master_Stop
  1011  070B                     l1821:
  1012                           
  1013                           ;main.c: 94:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1014  070B  301A               	movlw	26
  1015  070C  1283               	bcf	3,5	;RP0=0, select bank0
  1016  070D  1303               	bcf	3,6	;RP1=0, select bank0
  1017  070E  00B1               	movwf	??_main+1
  1018  070F  30F7               	movlw	247
  1019  0710  00B0               	movwf	??_main
  1020  0711                     u617:
  1021  0711  0BB0               	decfsz	??_main,f
  1022  0712  2F11               	goto	u617
  1023  0713  0BB1               	decfsz	??_main+1,f
  1024  0714  2F11               	goto	u617
  1025  0715  2F16               	nop2
  1026  0716                     l1823:
  1027                           
  1028                           ;main.c: 96:         I2C_Master_Start();
  1029  0716  120A  118A  2140  120A  118A  	fcall	_I2C_Master_Start
  1030  071B                     l1825:
  1031                           
  1032                           ;main.c: 97:         I2C_Master_Write(0xD1);
  1033  071B  30D1               	movlw	209
  1034  071C  00F0               	movwf	I2C_Master_Write@d
  1035  071D  3000               	movlw	0
  1036  071E  00F1               	movwf	I2C_Master_Write@d+1
  1037  071F  120A  118A  2152  120A  118A  	fcall	_I2C_Master_Write
  1038  0724                     l1827:
  1039                           
  1040                           ;main.c: 98:         HORA = I2C_Master_Read(0);
  1041  0724  3000               	movlw	0
  1042  0725  00F0               	movwf	I2C_Master_Read@a
  1043  0726  00F1               	movwf	I2C_Master_Read@a+1
  1044  0727  120A  118A  21F3  120A  118A  	fcall	_I2C_Master_Read
  1045  072C  0870               	movf	?_I2C_Master_Read,w
  1046  072D  1283               	bcf	3,5	;RP0=0, select bank0
  1047  072E  1303               	bcf	3,6	;RP1=0, select bank0
  1048  072F  00B0               	movwf	??_main
  1049  0730  0830               	movf	??_main,w
  1050  0731  00BB               	movwf	_HORA
  1051  0732                     l1829:
  1052                           
  1053                           ;main.c: 99:         I2C_Master_Stop();
  1054  0732  120A  118A  2149  120A  118A  	fcall	_I2C_Master_Stop
  1055  0737                     l1831:
  1056                           
  1057                           ;main.c: 100:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1058  0737  301A               	movlw	26
  1059  0738  1283               	bcf	3,5	;RP0=0, select bank0
  1060  0739  1303               	bcf	3,6	;RP1=0, select bank0
  1061  073A  00B1               	movwf	??_main+1
  1062  073B  30F7               	movlw	247
  1063  073C  00B0               	movwf	??_main
  1064  073D                     u627:
  1065  073D  0BB0               	decfsz	??_main,f
  1066  073E  2F3D               	goto	u627
  1067  073F  0BB1               	decfsz	??_main+1,f
  1068  0740  2F3D               	goto	u627
  1069  0741  2F42               	nop2
  1070  0742                     l1833:
  1071                           
  1072                           ;main.c: 102:         I2C_Master_Start();
  1073  0742  120A  118A  2140  120A  118A  	fcall	_I2C_Master_Start
  1074  0747                     l1835:
  1075                           
  1076                           ;main.c: 103:         I2C_Master_Write(0xD0);
  1077  0747  30D0               	movlw	208
  1078  0748  00F0               	movwf	I2C_Master_Write@d
  1079  0749  3000               	movlw	0
  1080  074A  00F1               	movwf	I2C_Master_Write@d+1
  1081  074B  120A  118A  2152  120A  118A  	fcall	_I2C_Master_Write
  1082  0750                     l1837:
  1083                           
  1084                           ;main.c: 104:         I2C_Master_Write(0x03);
  1085  0750  3003               	movlw	3
  1086  0751  00F0               	movwf	I2C_Master_Write@d
  1087  0752  3000               	movlw	0
  1088  0753  00F1               	movwf	I2C_Master_Write@d+1
  1089  0754  120A  118A  2152  120A  118A  	fcall	_I2C_Master_Write
  1090  0759                     l1839:
  1091                           
  1092                           ;main.c: 105:         I2C_Master_Stop();
  1093  0759  120A  118A  2149  120A  118A  	fcall	_I2C_Master_Stop
  1094  075E                     l1841:
  1095                           
  1096                           ;main.c: 106:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1097  075E  301A               	movlw	26
  1098  075F  1283               	bcf	3,5	;RP0=0, select bank0
  1099  0760  1303               	bcf	3,6	;RP1=0, select bank0
  1100  0761  00B1               	movwf	??_main+1
  1101  0762  30F7               	movlw	247
  1102  0763  00B0               	movwf	??_main
  1103  0764                     u637:
  1104  0764  0BB0               	decfsz	??_main,f
  1105  0765  2F64               	goto	u637
  1106  0766  0BB1               	decfsz	??_main+1,f
  1107  0767  2F64               	goto	u637
  1108  0768  2F69               	nop2
  1109  0769                     l1843:
  1110                           
  1111                           ;main.c: 108:         I2C_Master_Start();
  1112  0769  120A  118A  2140  120A  118A  	fcall	_I2C_Master_Start
  1113  076E                     l1845:
  1114                           
  1115                           ;main.c: 109:         I2C_Master_Write(0xD1);
  1116  076E  30D1               	movlw	209
  1117  076F  00F0               	movwf	I2C_Master_Write@d
  1118  0770  3000               	movlw	0
  1119  0771  00F1               	movwf	I2C_Master_Write@d+1
  1120  0772  120A  118A  2152  120A  118A  	fcall	_I2C_Master_Write
  1121  0777                     l1847:
  1122                           
  1123                           ;main.c: 110:         DIA = I2C_Master_Read(0);
  1124  0777  3000               	movlw	0
  1125  0778  00F0               	movwf	I2C_Master_Read@a
  1126  0779  00F1               	movwf	I2C_Master_Read@a+1
  1127  077A  120A  118A  21F3  120A  118A  	fcall	_I2C_Master_Read
  1128  077F  0870               	movf	?_I2C_Master_Read,w
  1129  0780  1283               	bcf	3,5	;RP0=0, select bank0
  1130  0781  1303               	bcf	3,6	;RP1=0, select bank0
  1131  0782  00B0               	movwf	??_main
  1132  0783  0830               	movf	??_main,w
  1133  0784  00BC               	movwf	_DIA
  1134  0785                     l1849:
  1135                           
  1136                           ;main.c: 111:         I2C_Master_Stop();
  1137  0785  120A  118A  2149  120A  118A  	fcall	_I2C_Master_Stop
  1138  078A                     l1851:
  1139                           
  1140                           ;main.c: 112:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1141  078A  301A               	movlw	26
  1142  078B  1283               	bcf	3,5	;RP0=0, select bank0
  1143  078C  1303               	bcf	3,6	;RP1=0, select bank0
  1144  078D  00B1               	movwf	??_main+1
  1145  078E  30F7               	movlw	247
  1146  078F  00B0               	movwf	??_main
  1147  0790                     u647:
  1148  0790  0BB0               	decfsz	??_main,f
  1149  0791  2F90               	goto	u647
  1150  0792  0BB1               	decfsz	??_main+1,f
  1151  0793  2F90               	goto	u647
  1152  0794  2F95               	nop2
  1153  0795                     l1853:
  1154                           
  1155                           ;main.c: 114:         I2C_Master_Start();
  1156  0795  120A  118A  2140  120A  118A  	fcall	_I2C_Master_Start
  1157  079A                     l1855:
  1158                           
  1159                           ;main.c: 115:         I2C_Master_Write(0xD0);
  1160  079A  30D0               	movlw	208
  1161  079B  00F0               	movwf	I2C_Master_Write@d
  1162  079C  3000               	movlw	0
  1163  079D  00F1               	movwf	I2C_Master_Write@d+1
  1164  079E  120A  118A  2152  120A  118A  	fcall	_I2C_Master_Write
  1165  07A3                     l1857:
  1166                           
  1167                           ;main.c: 116:         I2C_Master_Write(0x01);
  1168  07A3  3001               	movlw	1
  1169  07A4  00F0               	movwf	I2C_Master_Write@d
  1170  07A5  3000               	movlw	0
  1171  07A6  00F1               	movwf	I2C_Master_Write@d+1
  1172  07A7  120A  118A  2152  120A  118A  	fcall	_I2C_Master_Write
  1173  07AC                     l1859:
  1174                           
  1175                           ;main.c: 117:         I2C_Master_Stop();
  1176  07AC  120A  118A  2149  120A  118A  	fcall	_I2C_Master_Stop
  1177  07B1                     l1861:
  1178                           
  1179                           ;main.c: 118:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1180  07B1  301A               	movlw	26
  1181  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  1182  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  1183  07B4  00B1               	movwf	??_main+1
  1184  07B5  30F7               	movlw	247
  1185  07B6  00B0               	movwf	??_main
  1186  07B7                     u657:
  1187  07B7  0BB0               	decfsz	??_main,f
  1188  07B8  2FB7               	goto	u657
  1189  07B9  0BB1               	decfsz	??_main+1,f
  1190  07BA  2FB7               	goto	u657
  1191  07BB  2FBC               	nop2
  1192  07BC                     l1863:
  1193                           
  1194                           ;main.c: 120:         I2C_Master_Start();
  1195  07BC  120A  118A  2140  120A  118A  	fcall	_I2C_Master_Start
  1196  07C1                     l1865:
  1197                           
  1198                           ;main.c: 121:         I2C_Master_Write(0xD1);
  1199  07C1  30D1               	movlw	209
  1200  07C2  00F0               	movwf	I2C_Master_Write@d
  1201  07C3  3000               	movlw	0
  1202  07C4  00F1               	movwf	I2C_Master_Write@d+1
  1203  07C5  120A  118A  2152  120A  118A  	fcall	_I2C_Master_Write
  1204  07CA                     l1867:
  1205                           
  1206                           ;main.c: 122:         MIN = I2C_Master_Read(0);
  1207  07CA  3000               	movlw	0
  1208  07CB  00F0               	movwf	I2C_Master_Read@a
  1209  07CC  00F1               	movwf	I2C_Master_Read@a+1
  1210  07CD  120A  118A  21F3  120A  118A  	fcall	_I2C_Master_Read
  1211  07D2  0870               	movf	?_I2C_Master_Read,w
  1212  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  1213  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  1214  07D5  00B0               	movwf	??_main
  1215  07D6  0830               	movf	??_main,w
  1216  07D7  00BA               	movwf	_MIN
  1217  07D8                     l1869:
  1218                           
  1219                           ;main.c: 123:         I2C_Master_Stop();
  1220  07D8  120A  118A  2149  120A  118A  	fcall	_I2C_Master_Stop
  1221  07DD                     l1871:
  1222                           
  1223                           ;main.c: 124:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1224  07DD  301A               	movlw	26
  1225  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  1226  07DF  1303               	bcf	3,6	;RP1=0, select bank0
  1227  07E0  00B1               	movwf	??_main+1
  1228  07E1  30F7               	movlw	247
  1229  07E2  00B0               	movwf	??_main
  1230  07E3                     u667:
  1231  07E3  0BB0               	decfsz	??_main,f
  1232  07E4  2FE3               	goto	u667
  1233  07E5  0BB1               	decfsz	??_main+1,f
  1234  07E6  2FE3               	goto	u667
  1235  07E7  2FE8               	nop2
  1236  07E8  2E74               	goto	l1785
  1237  07E9  120A  118A  2800   	ljmp	start
  1238  07EC                     __end_of_main:
  1239                           
  1240                           	psect	text1
  1241  03BD                     __ptext1:	
  1242 ;; *************** function _setup *****************
  1243 ;; Defined at:
  1244 ;;		line 131 in file "main.c"
  1245 ;; Parameters:    Size  Location     Type
  1246 ;;		None
  1247 ;; Auto vars:     Size  Location     Type
  1248 ;;		None
  1249 ;; Return value:  Size  Location     Type
  1250 ;;                  1    wreg      void 
  1251 ;; Registers used:
  1252 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1253 ;; Tracked objects:
  1254 ;;		On entry : 0/0
  1255 ;;		On exit  : 0/0
  1256 ;;		Unchanged: 0/0
  1257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1258 ;;      Params:         0       0       0       0       0
  1259 ;;      Locals:         0       0       0       0       0
  1260 ;;      Temps:          0       2       0       0       0
  1261 ;;      Totals:         0       2       0       0       0
  1262 ;;Total ram usage:        2 bytes
  1263 ;; Hardware stack levels used: 1
  1264 ;; Hardware stack levels required when called: 2
  1265 ;; This function calls:
  1266 ;;		_I2C_Master_Init
  1267 ;;		_I2C_Master_Read
  1268 ;;		_I2C_Master_Start
  1269 ;;		_I2C_Master_Stop
  1270 ;;		_I2C_Master_Write
  1271 ;;		_osc_config
  1272 ;; This function is called by:
  1273 ;;		_main
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277                           
  1278                           ;psect for function _setup
  1279  03BD                     _setup:
  1280  03BD                     l1581:	
  1281                           ;incstack = 0
  1282                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1283                           
  1284                           
  1285                           ;main.c: 132:     ANSEL = 0;
  1286  03BD  1683               	bsf	3,5	;RP0=1, select bank3
  1287  03BE  1703               	bsf	3,6	;RP1=1, select bank3
  1288  03BF  0188               	clrf	8	;volatile
  1289                           
  1290                           ;main.c: 133:     ANSELH = 0;
  1291  03C0  0189               	clrf	9	;volatile
  1292                           
  1293                           ;main.c: 134:     TRISA = 0;
  1294  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  1295  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  1296  03C3  0185               	clrf	5	;volatile
  1297                           
  1298                           ;main.c: 135:     TRISB = 0;
  1299  03C4  0186               	clrf	6	;volatile
  1300                           
  1301                           ;main.c: 136:     TRISD = 0;
  1302  03C5  0188               	clrf	8	;volatile
  1303                           
  1304                           ;main.c: 137:     TRISE = 0;
  1305  03C6  0189               	clrf	9	;volatile
  1306                           
  1307                           ;main.c: 138:     PORTA = 0;
  1308  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  1309  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  1310  03C9  0185               	clrf	5	;volatile
  1311                           
  1312                           ;main.c: 139:     PORTB = 0;
  1313  03CA  0186               	clrf	6	;volatile
  1314                           
  1315                           ;main.c: 140:     PORTD = 0;
  1316  03CB  0188               	clrf	8	;volatile
  1317  03CC                     l1583:
  1318                           
  1319                           ;main.c: 141:     osc_config(8);
  1320  03CC  3008               	movlw	8
  1321  03CD  120A  118A  2221  120A  118A  	fcall	_osc_config
  1322  03D2                     l1585:
  1323                           
  1324                           ;main.c: 142:     I2C_Master_Init(100000);
  1325  03D2  3000               	movlw	0
  1326  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  1327  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  1328  03D5  00A3               	movwf	I2C_Master_Init@c+3
  1329  03D6  3001               	movlw	1
  1330  03D7  00A2               	movwf	I2C_Master_Init@c+2
  1331  03D8  3086               	movlw	134
  1332  03D9  00A1               	movwf	I2C_Master_Init@c+1
  1333  03DA  30A0               	movlw	160
  1334  03DB  00A0               	movwf	I2C_Master_Init@c
  1335  03DC  120A  118A  2258  120A  118A  	fcall	_I2C_Master_Init
  1336  03E1                     l1587:
  1337                           
  1338                           ;main.c: 144:     I2C_Master_Start();
  1339  03E1  120A  118A  2140  120A  118A  	fcall	_I2C_Master_Start
  1340  03E6                     l1589:
  1341                           
  1342                           ;main.c: 145:         I2C_Master_Write(0xD0);
  1343  03E6  30D0               	movlw	208
  1344  03E7  00F0               	movwf	I2C_Master_Write@d
  1345  03E8  3000               	movlw	0
  1346  03E9  00F1               	movwf	I2C_Master_Write@d+1
  1347  03EA  120A  118A  2152  120A  118A  	fcall	_I2C_Master_Write
  1348  03EF                     l1591:
  1349                           
  1350                           ;main.c: 146:         I2C_Master_Write(0x02);
  1351  03EF  3002               	movlw	2
  1352  03F0  00F0               	movwf	I2C_Master_Write@d
  1353  03F1  3000               	movlw	0
  1354  03F2  00F1               	movwf	I2C_Master_Write@d+1
  1355  03F3  120A  118A  2152  120A  118A  	fcall	_I2C_Master_Write
  1356  03F8                     l1593:
  1357                           
  1358                           ;main.c: 147:         I2C_Master_Write(0x23);
  1359  03F8  3023               	movlw	35
  1360  03F9  00F0               	movwf	I2C_Master_Write@d
  1361  03FA  3000               	movlw	0
  1362  03FB  00F1               	movwf	I2C_Master_Write@d+1
  1363  03FC  120A  118A  2152  120A  118A  	fcall	_I2C_Master_Write
  1364  0401                     l1595:
  1365                           
  1366                           ;main.c: 148:         I2C_Master_Stop();
  1367  0401  120A  118A  2149  120A  118A  	fcall	_I2C_Master_Stop
  1368  0406                     l1597:
  1369                           
  1370                           ;main.c: 149:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1371  0406  301A               	movlw	26
  1372  0407  1283               	bcf	3,5	;RP0=0, select bank0
  1373  0408  1303               	bcf	3,6	;RP1=0, select bank0
  1374  0409  00A9               	movwf	??_setup+1
  1375  040A  30F7               	movlw	247
  1376  040B  00A8               	movwf	??_setup
  1377  040C                     u677:
  1378  040C  0BA8               	decfsz	??_setup,f
  1379  040D  2C0C               	goto	u677
  1380  040E  0BA9               	decfsz	??_setup+1,f
  1381  040F  2C0C               	goto	u677
  1382  0410  2C11               	nop2
  1383  0411                     l1599:
  1384                           
  1385                           ;main.c: 151:         I2C_Master_Start();
  1386  0411  120A  118A  2140  120A  118A  	fcall	_I2C_Master_Start
  1387  0416                     l1601:
  1388                           
  1389                           ;main.c: 152:         I2C_Master_Write(0xD1);
  1390  0416  30D1               	movlw	209
  1391  0417  00F0               	movwf	I2C_Master_Write@d
  1392  0418  3000               	movlw	0
  1393  0419  00F1               	movwf	I2C_Master_Write@d+1
  1394  041A  120A  118A  2152  120A  118A  	fcall	_I2C_Master_Write
  1395  041F                     l1603:
  1396                           
  1397                           ;main.c: 153:         BASURA = I2C_Master_Read(0);
  1398  041F  3000               	movlw	0
  1399  0420  00F0               	movwf	I2C_Master_Read@a
  1400  0421  00F1               	movwf	I2C_Master_Read@a+1
  1401  0422  120A  118A  21F3  120A  118A  	fcall	_I2C_Master_Read
  1402  0427  0870               	movf	?_I2C_Master_Read,w
  1403  0428  1283               	bcf	3,5	;RP0=0, select bank0
  1404  0429  1303               	bcf	3,6	;RP1=0, select bank0
  1405  042A  00A8               	movwf	??_setup
  1406  042B  0828               	movf	??_setup,w
  1407  042C  00BD               	movwf	_BASURA
  1408  042D                     l1605:
  1409                           
  1410                           ;main.c: 154:         I2C_Master_Stop();
  1411  042D  120A  118A  2149  120A  118A  	fcall	_I2C_Master_Stop
  1412  0432                     l1607:
  1413                           
  1414                           ;main.c: 155:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1415  0432  301A               	movlw	26
  1416  0433  1283               	bcf	3,5	;RP0=0, select bank0
  1417  0434  1303               	bcf	3,6	;RP1=0, select bank0
  1418  0435  00A9               	movwf	??_setup+1
  1419  0436  30F7               	movlw	247
  1420  0437  00A8               	movwf	??_setup
  1421  0438                     u687:
  1422  0438  0BA8               	decfsz	??_setup,f
  1423  0439  2C38               	goto	u687
  1424  043A  0BA9               	decfsz	??_setup+1,f
  1425  043B  2C38               	goto	u687
  1426  043C  2C3D               	nop2
  1427  043D                     l1609:
  1428                           
  1429                           ;main.c: 157:         I2C_Master_Start();
  1430  043D  120A  118A  2140  120A  118A  	fcall	_I2C_Master_Start
  1431  0442                     l1611:
  1432                           
  1433                           ;main.c: 158:         I2C_Master_Write(0xD0);
  1434  0442  30D0               	movlw	208
  1435  0443  00F0               	movwf	I2C_Master_Write@d
  1436  0444  3000               	movlw	0
  1437  0445  00F1               	movwf	I2C_Master_Write@d+1
  1438  0446  120A  118A  2152  120A  118A  	fcall	_I2C_Master_Write
  1439  044B                     l1613:
  1440                           
  1441                           ;main.c: 159:         I2C_Master_Write(0x01);
  1442  044B  3001               	movlw	1
  1443  044C  00F0               	movwf	I2C_Master_Write@d
  1444  044D  3000               	movlw	0
  1445  044E  00F1               	movwf	I2C_Master_Write@d+1
  1446  044F  120A  118A  2152  120A  118A  	fcall	_I2C_Master_Write
  1447  0454                     l1615:
  1448                           
  1449                           ;main.c: 160:         I2C_Master_Write(0x30);
  1450  0454  3030               	movlw	48
  1451  0455  00F0               	movwf	I2C_Master_Write@d
  1452  0456  3000               	movlw	0
  1453  0457  00F1               	movwf	I2C_Master_Write@d+1
  1454  0458  120A  118A  2152  120A  118A  	fcall	_I2C_Master_Write
  1455  045D                     l1617:
  1456                           
  1457                           ;main.c: 161:         I2C_Master_Stop();
  1458  045D  120A  118A  2149  120A  118A  	fcall	_I2C_Master_Stop
  1459  0462                     l1619:
  1460                           
  1461                           ;main.c: 162:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1462  0462  301A               	movlw	26
  1463  0463  1283               	bcf	3,5	;RP0=0, select bank0
  1464  0464  1303               	bcf	3,6	;RP1=0, select bank0
  1465  0465  00A9               	movwf	??_setup+1
  1466  0466  30F7               	movlw	247
  1467  0467  00A8               	movwf	??_setup
  1468  0468                     u697:
  1469  0468  0BA8               	decfsz	??_setup,f
  1470  0469  2C68               	goto	u697
  1471  046A  0BA9               	decfsz	??_setup+1,f
  1472  046B  2C68               	goto	u697
  1473  046C  2C6D               	nop2
  1474  046D                     l1621:
  1475                           
  1476                           ;main.c: 164:         I2C_Master_Start();
  1477  046D  120A  118A  2140  120A  118A  	fcall	_I2C_Master_Start
  1478  0472                     l1623:
  1479                           
  1480                           ;main.c: 165:         I2C_Master_Write(0xD1);
  1481  0472  30D1               	movlw	209
  1482  0473  00F0               	movwf	I2C_Master_Write@d
  1483  0474  3000               	movlw	0
  1484  0475  00F1               	movwf	I2C_Master_Write@d+1
  1485  0476  120A  118A  2152  120A  118A  	fcall	_I2C_Master_Write
  1486  047B                     l1625:
  1487                           
  1488                           ;main.c: 166:         BASURA = I2C_Master_Read(0);
  1489  047B  3000               	movlw	0
  1490  047C  00F0               	movwf	I2C_Master_Read@a
  1491  047D  00F1               	movwf	I2C_Master_Read@a+1
  1492  047E  120A  118A  21F3  120A  118A  	fcall	_I2C_Master_Read
  1493  0483  0870               	movf	?_I2C_Master_Read,w
  1494  0484  1283               	bcf	3,5	;RP0=0, select bank0
  1495  0485  1303               	bcf	3,6	;RP1=0, select bank0
  1496  0486  00A8               	movwf	??_setup
  1497  0487  0828               	movf	??_setup,w
  1498  0488  00BD               	movwf	_BASURA
  1499  0489                     l1627:
  1500                           
  1501                           ;main.c: 167:         I2C_Master_Stop();
  1502  0489  120A  118A  2149  120A  118A  	fcall	_I2C_Master_Stop
  1503  048E                     l1629:
  1504                           
  1505                           ;main.c: 168:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1506  048E  301A               	movlw	26
  1507  048F  1283               	bcf	3,5	;RP0=0, select bank0
  1508  0490  1303               	bcf	3,6	;RP1=0, select bank0
  1509  0491  00A9               	movwf	??_setup+1
  1510  0492  30F7               	movlw	247
  1511  0493  00A8               	movwf	??_setup
  1512  0494                     u707:
  1513  0494  0BA8               	decfsz	??_setup,f
  1514  0495  2C94               	goto	u707
  1515  0496  0BA9               	decfsz	??_setup+1,f
  1516  0497  2C94               	goto	u707
  1517  0498  2C99               	nop2
  1518  0499                     l1631:
  1519                           
  1520                           ;main.c: 170:         I2C_Master_Start();
  1521  0499  120A  118A  2140  120A  118A  	fcall	_I2C_Master_Start
  1522  049E                     l1633:
  1523                           
  1524                           ;main.c: 171:         I2C_Master_Write(0xD0);
  1525  049E  30D0               	movlw	208
  1526  049F  00F0               	movwf	I2C_Master_Write@d
  1527  04A0  3000               	movlw	0
  1528  04A1  00F1               	movwf	I2C_Master_Write@d+1
  1529  04A2  120A  118A  2152  120A  118A  	fcall	_I2C_Master_Write
  1530  04A7                     l1635:
  1531                           
  1532                           ;main.c: 172:         I2C_Master_Write(0x03);
  1533  04A7  3003               	movlw	3
  1534  04A8  00F0               	movwf	I2C_Master_Write@d
  1535  04A9  3000               	movlw	0
  1536  04AA  00F1               	movwf	I2C_Master_Write@d+1
  1537  04AB  120A  118A  2152  120A  118A  	fcall	_I2C_Master_Write
  1538  04B0                     l1637:
  1539                           
  1540                           ;main.c: 173:         I2C_Master_Write(0x04);
  1541  04B0  3004               	movlw	4
  1542  04B1  00F0               	movwf	I2C_Master_Write@d
  1543  04B2  3000               	movlw	0
  1544  04B3  00F1               	movwf	I2C_Master_Write@d+1
  1545  04B4  120A  118A  2152  120A  118A  	fcall	_I2C_Master_Write
  1546  04B9                     l1639:
  1547                           
  1548                           ;main.c: 174:         I2C_Master_Stop();
  1549  04B9  120A  118A  2149  120A  118A  	fcall	_I2C_Master_Stop
  1550  04BE                     l1641:
  1551                           
  1552                           ;main.c: 175:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1553  04BE  301A               	movlw	26
  1554  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  1555  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  1556  04C1  00A9               	movwf	??_setup+1
  1557  04C2  30F7               	movlw	247
  1558  04C3  00A8               	movwf	??_setup
  1559  04C4                     u717:
  1560  04C4  0BA8               	decfsz	??_setup,f
  1561  04C5  2CC4               	goto	u717
  1562  04C6  0BA9               	decfsz	??_setup+1,f
  1563  04C7  2CC4               	goto	u717
  1564  04C8  2CC9               	nop2
  1565  04C9                     l1643:
  1566                           
  1567                           ;main.c: 177:         I2C_Master_Start();
  1568  04C9  120A  118A  2140  120A  118A  	fcall	_I2C_Master_Start
  1569  04CE                     l1645:
  1570                           
  1571                           ;main.c: 178:         I2C_Master_Write(0xD1);
  1572  04CE  30D1               	movlw	209
  1573  04CF  00F0               	movwf	I2C_Master_Write@d
  1574  04D0  3000               	movlw	0
  1575  04D1  00F1               	movwf	I2C_Master_Write@d+1
  1576  04D2  120A  118A  2152  120A  118A  	fcall	_I2C_Master_Write
  1577  04D7                     l1647:
  1578                           
  1579                           ;main.c: 179:         BASURA = I2C_Master_Read(0);
  1580  04D7  3000               	movlw	0
  1581  04D8  00F0               	movwf	I2C_Master_Read@a
  1582  04D9  00F1               	movwf	I2C_Master_Read@a+1
  1583  04DA  120A  118A  21F3  120A  118A  	fcall	_I2C_Master_Read
  1584  04DF  0870               	movf	?_I2C_Master_Read,w
  1585  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  1586  04E1  1303               	bcf	3,6	;RP1=0, select bank0
  1587  04E2  00A8               	movwf	??_setup
  1588  04E3  0828               	movf	??_setup,w
  1589  04E4  00BD               	movwf	_BASURA
  1590  04E5                     l1649:
  1591                           
  1592                           ;main.c: 180:         I2C_Master_Stop();
  1593  04E5  120A  118A  2149  120A  118A  	fcall	_I2C_Master_Stop
  1594  04EA                     l1651:
  1595                           
  1596                           ;main.c: 181:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1597  04EA  301A               	movlw	26
  1598  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  1599  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  1600  04ED  00A9               	movwf	??_setup+1
  1601  04EE  30F7               	movlw	247
  1602  04EF  00A8               	movwf	??_setup
  1603  04F0                     u727:
  1604  04F0  0BA8               	decfsz	??_setup,f
  1605  04F1  2CF0               	goto	u727
  1606  04F2  0BA9               	decfsz	??_setup+1,f
  1607  04F3  2CF0               	goto	u727
  1608  04F4  2CF5               	nop2
  1609  04F5                     l142:
  1610  04F5  0008               	return
  1611  04F6                     __end_of_setup:
  1612                           
  1613                           	psect	text2
  1614  0221                     __ptext2:	
  1615 ;; *************** function _osc_config *****************
  1616 ;; Defined at:
  1617 ;;		line 17 in file "Osc_config.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;  freq            1    wreg     unsigned char 
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;  freq            1    2[COMMON] unsigned char 
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  1    wreg      void 
  1624 ;; Registers used:
  1625 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1631 ;;      Params:         0       0       0       0       0
  1632 ;;      Locals:         1       0       0       0       0
  1633 ;;      Temps:          2       0       0       0       0
  1634 ;;      Totals:         3       0       0       0       0
  1635 ;;Total ram usage:        3 bytes
  1636 ;; Hardware stack levels used: 1
  1637 ;; This function calls:
  1638 ;;		Nothing
  1639 ;; This function is called by:
  1640 ;;		_setup
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           
  1645                           ;psect for function _osc_config
  1646  0221                     _osc_config:
  1647                           
  1648                           ;incstack = 0
  1649                           ; Regs used in _osc_config: [wreg-fsr0h+status,2+status,0]
  1650                           ;osc_config@freq stored from wreg
  1651  0221  00F2               	movwf	osc_config@freq
  1652  0222                     l1455:
  1653                           
  1654                           ;Osc_config.c: 17: void osc_config(uint8_t freq);Osc_config.c: 18: {;Osc_config.c: 19:  
      +                             switch(freq)
  1655  0222  2A41               	goto	l1475
  1656  0223                     l1457:
  1657                           
  1658                           ;Osc_config.c: 22:             OSCCONbits.IRCF=0b100;
  1659  0223  1683               	bsf	3,5	;RP0=1, select bank1
  1660  0224  1303               	bcf	3,6	;RP1=0, select bank1
  1661  0225  080F               	movf	15,w	;volatile
  1662  0226  398F               	andlw	-113
  1663  0227  3840               	iorlw	64
  1664  0228  008F               	movwf	15	;volatile
  1665  0229                     l1459:
  1666                           
  1667                           ;Osc_config.c: 23:             OSCCONbits.SCS=1;
  1668  0229  140F               	bsf	15,0	;volatile
  1669                           
  1670                           ;Osc_config.c: 24:             break;
  1671  022A  2A57               	goto	l190
  1672  022B                     l1461:
  1673                           
  1674                           ;Osc_config.c: 27:             OSCCONbits.IRCF=0b101;
  1675  022B  1683               	bsf	3,5	;RP0=1, select bank1
  1676  022C  1303               	bcf	3,6	;RP1=0, select bank1
  1677  022D  080F               	movf	15,w	;volatile
  1678  022E  398F               	andlw	-113
  1679  022F  3850               	iorlw	80
  1680  0230  008F               	movwf	15	;volatile
  1681  0231                     l1463:
  1682                           
  1683                           ;Osc_config.c: 28:             OSCCONbits.SCS=1;
  1684  0231  140F               	bsf	15,0	;volatile
  1685                           
  1686                           ;Osc_config.c: 29:             break;
  1687  0232  2A57               	goto	l190
  1688  0233                     l1465:
  1689                           
  1690                           ;Osc_config.c: 32:             OSCCONbits.IRCF=0b110;
  1691  0233  1683               	bsf	3,5	;RP0=1, select bank1
  1692  0234  1303               	bcf	3,6	;RP1=0, select bank1
  1693  0235  080F               	movf	15,w	;volatile
  1694  0236  398F               	andlw	-113
  1695  0237  3860               	iorlw	96
  1696  0238  008F               	movwf	15	;volatile
  1697  0239                     l1467:
  1698                           
  1699                           ;Osc_config.c: 33:             OSCCONbits.SCS=1;
  1700  0239  140F               	bsf	15,0	;volatile
  1701                           
  1702                           ;Osc_config.c: 34:             break;
  1703  023A  2A57               	goto	l190
  1704  023B                     l1469:
  1705                           
  1706                           ;Osc_config.c: 37:             OSCCONbits.IRCF=0b111;
  1707  023B  3070               	movlw	112
  1708  023C  1683               	bsf	3,5	;RP0=1, select bank1
  1709  023D  1303               	bcf	3,6	;RP1=0, select bank1
  1710  023E  048F               	iorwf	15,f	;volatile
  1711  023F                     l1471:
  1712                           
  1713                           ;Osc_config.c: 38:             OSCCONbits.SCS=1;
  1714  023F  140F               	bsf	15,0	;volatile
  1715                           
  1716                           ;Osc_config.c: 39:             break;
  1717  0240  2A57               	goto	l190
  1718  0241                     l1475:
  1719  0241  0872               	movf	osc_config@freq,w
  1720  0242  00F0               	movwf	??_osc_config
  1721  0243  01F1               	clrf	??_osc_config+1
  1722                           
  1723                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1724                           ; Switch size 1, requested type "simple"
  1725                           ; Number of cases is 1, Range of values is 0 to 0
  1726                           ; switch strategies available:
  1727                           ; Name         Instructions Cycles
  1728                           ; simple_byte            4     3 (average)
  1729                           ; direct_byte           11     8 (fixed)
  1730                           ; jumptable            260     6 (fixed)
  1731                           ;	Chosen strategy is simple_byte
  1732  0244  0871               	movf	??_osc_config+1,w
  1733  0245  3A00               	xorlw	0	; case 0
  1734  0246  1903               	skipnz
  1735  0247  2A49               	goto	l1919
  1736  0248  2A57               	goto	l190
  1737  0249                     l1919:
  1738                           
  1739                           ; Switch size 1, requested type "simple"
  1740                           ; Number of cases is 4, Range of values is 1 to 8
  1741                           ; switch strategies available:
  1742                           ; Name         Instructions Cycles
  1743                           ; simple_byte           13     7 (average)
  1744                           ; direct_byte           35    11 (fixed)
  1745                           ; jumptable            263     9 (fixed)
  1746                           ;	Chosen strategy is simple_byte
  1747  0249  0870               	movf	??_osc_config,w
  1748  024A  3A01               	xorlw	1	; case 1
  1749  024B  1903               	skipnz
  1750  024C  2A23               	goto	l1457
  1751  024D  3A03               	xorlw	3	; case 2
  1752  024E  1903               	skipnz
  1753  024F  2A2B               	goto	l1461
  1754  0250  3A06               	xorlw	6	; case 4
  1755  0251  1903               	skipnz
  1756  0252  2A33               	goto	l1465
  1757  0253  3A0C               	xorlw	12	; case 8
  1758  0254  1903               	skipnz
  1759  0255  2A3B               	goto	l1469
  1760  0256  2A57               	goto	l190
  1761  0257                     l190:
  1762  0257  0008               	return
  1763  0258                     __end_of_osc_config:
  1764                           
  1765                           	psect	text3
  1766  0152                     __ptext3:	
  1767 ;; *************** function _I2C_Master_Write *****************
  1768 ;; Defined at:
  1769 ;;		line 65 in file "I2C.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;  d               2    0[COMMON] unsigned int 
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;		None
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  1    wreg      void 
  1776 ;; Registers used:
  1777 ;;		wreg, status,2, status,0, pclath, cstack
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1783 ;;      Params:         2       0       0       0       0
  1784 ;;      Locals:         0       0       0       0       0
  1785 ;;      Temps:          0       0       0       0       0
  1786 ;;      Totals:         2       0       0       0       0
  1787 ;;Total ram usage:        2 bytes
  1788 ;; Hardware stack levels used: 1
  1789 ;; Hardware stack levels required when called: 1
  1790 ;; This function calls:
  1791 ;;		_I2C_Master_Wait
  1792 ;; This function is called by:
  1793 ;;		_main
  1794 ;;		_setup
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           
  1799                           ;psect for function _I2C_Master_Write
  1800  0152                     _I2C_Master_Write:
  1801  0152                     l1435:	
  1802                           ;incstack = 0
  1803                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1804                           
  1805                           
  1806                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  1807  0152  120A  118A  215C  120A  118A  	fcall	_I2C_Master_Wait
  1808  0157                     l1437:
  1809                           
  1810                           ;I2C.c: 68:     SSPBUF = d;
  1811  0157  0870               	movf	I2C_Master_Write@d,w
  1812  0158  1283               	bcf	3,5	;RP0=0, select bank0
  1813  0159  1303               	bcf	3,6	;RP1=0, select bank0
  1814  015A  0093               	movwf	19	;volatile
  1815  015B                     l47:
  1816  015B  0008               	return
  1817  015C                     __end_of_I2C_Master_Write:
  1818                           
  1819                           	psect	text4
  1820  0149                     __ptext4:	
  1821 ;; *************** function _I2C_Master_Stop *****************
  1822 ;; Defined at:
  1823 ;;		line 55 in file "I2C.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;		None
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;		None
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      void 
  1830 ;; Registers used:
  1831 ;;		wreg, status,2, status,0, pclath, cstack
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1837 ;;      Params:         0       0       0       0       0
  1838 ;;      Locals:         0       0       0       0       0
  1839 ;;      Temps:          0       0       0       0       0
  1840 ;;      Totals:         0       0       0       0       0
  1841 ;;Total ram usage:        0 bytes
  1842 ;; Hardware stack levels used: 1
  1843 ;; Hardware stack levels required when called: 1
  1844 ;; This function calls:
  1845 ;;		_I2C_Master_Wait
  1846 ;; This function is called by:
  1847 ;;		_main
  1848 ;;		_setup
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852                           
  1853                           ;psect for function _I2C_Master_Stop
  1854  0149                     _I2C_Master_Stop:
  1855  0149                     l1431:	
  1856                           ;incstack = 0
  1857                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1858                           
  1859                           
  1860                           ;I2C.c: 57:     I2C_Master_Wait();
  1861  0149  120A  118A  215C  120A  118A  	fcall	_I2C_Master_Wait
  1862  014E                     l1433:
  1863                           
  1864                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  1865  014E  1683               	bsf	3,5	;RP0=1, select bank1
  1866  014F  1303               	bcf	3,6	;RP1=0, select bank1
  1867  0150  1511               	bsf	17,2	;volatile
  1868  0151                     l44:
  1869  0151  0008               	return
  1870  0152                     __end_of_I2C_Master_Stop:
  1871                           
  1872                           	psect	text5
  1873  0140                     __ptext5:	
  1874 ;; *************** function _I2C_Master_Start *****************
  1875 ;; Defined at:
  1876 ;;		line 39 in file "I2C.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;		None
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;		None
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  1    wreg      void 
  1883 ;; Registers used:
  1884 ;;		wreg, status,2, status,0, pclath, cstack
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1890 ;;      Params:         0       0       0       0       0
  1891 ;;      Locals:         0       0       0       0       0
  1892 ;;      Temps:          0       0       0       0       0
  1893 ;;      Totals:         0       0       0       0       0
  1894 ;;Total ram usage:        0 bytes
  1895 ;; Hardware stack levels used: 1
  1896 ;; Hardware stack levels required when called: 1
  1897 ;; This function calls:
  1898 ;;		_I2C_Master_Wait
  1899 ;; This function is called by:
  1900 ;;		_main
  1901 ;;		_setup
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905                           
  1906                           ;psect for function _I2C_Master_Start
  1907  0140                     _I2C_Master_Start:
  1908  0140                     l1427:	
  1909                           ;incstack = 0
  1910                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  1911                           
  1912                           
  1913                           ;I2C.c: 41:     I2C_Master_Wait();
  1914  0140  120A  118A  215C  120A  118A  	fcall	_I2C_Master_Wait
  1915  0145                     l1429:
  1916                           
  1917                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  1918  0145  1683               	bsf	3,5	;RP0=1, select bank1
  1919  0146  1303               	bcf	3,6	;RP1=0, select bank1
  1920  0147  1411               	bsf	17,0	;volatile
  1921  0148                     l38:
  1922  0148  0008               	return
  1923  0149                     __end_of_I2C_Master_Start:
  1924                           
  1925                           	psect	text6
  1926  01F3                     __ptext6:	
  1927 ;; *************** function _I2C_Master_Read *****************
  1928 ;; Defined at:
  1929 ;;		line 74 in file "I2C.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;  a               2    0[COMMON] unsigned short 
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;  temp            2    4[COMMON] unsigned short 
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  2    0[COMMON] unsigned short 
  1936 ;; Registers used:
  1937 ;;		wreg, status,2, status,0, pclath, cstack
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1943 ;;      Params:         2       0       0       0       0
  1944 ;;      Locals:         2       0       0       0       0
  1945 ;;      Temps:          2       0       0       0       0
  1946 ;;      Totals:         6       0       0       0       0
  1947 ;;Total ram usage:        6 bytes
  1948 ;; Hardware stack levels used: 1
  1949 ;; Hardware stack levels required when called: 1
  1950 ;; This function calls:
  1951 ;;		_I2C_Master_Wait
  1952 ;; This function is called by:
  1953 ;;		_main
  1954 ;;		_setup
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           
  1959                           ;psect for function _I2C_Master_Read
  1960  01F3                     _I2C_Master_Read:
  1961  01F3                     l1439:	
  1962                           ;incstack = 0
  1963                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  1964                           
  1965                           
  1966                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  1967  01F3  120A  118A  215C  120A  118A  	fcall	_I2C_Master_Wait
  1968  01F8                     l1441:
  1969                           
  1970                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  1971  01F8  1683               	bsf	3,5	;RP0=1, select bank1
  1972  01F9  1303               	bcf	3,6	;RP1=0, select bank1
  1973  01FA  1591               	bsf	17,3	;volatile
  1974                           
  1975                           ;I2C.c: 79:     I2C_Master_Wait();
  1976  01FB  120A  118A  215C  120A  118A  	fcall	_I2C_Master_Wait
  1977  0200                     l1443:
  1978                           
  1979                           ;I2C.c: 80:     temp = SSPBUF;
  1980  0200  1283               	bcf	3,5	;RP0=0, select bank0
  1981  0201  1303               	bcf	3,6	;RP1=0, select bank0
  1982  0202  0813               	movf	19,w	;volatile
  1983  0203  00F2               	movwf	??_I2C_Master_Read
  1984  0204  01F3               	clrf	??_I2C_Master_Read+1
  1985  0205  0872               	movf	??_I2C_Master_Read,w
  1986  0206  00F4               	movwf	I2C_Master_Read@temp
  1987  0207  0873               	movf	??_I2C_Master_Read+1,w
  1988  0208  00F5               	movwf	I2C_Master_Read@temp+1
  1989  0209                     l1445:
  1990                           
  1991                           ;I2C.c: 81:     I2C_Master_Wait();
  1992  0209  120A  118A  215C  120A  118A  	fcall	_I2C_Master_Wait
  1993  020E                     l1447:
  1994                           
  1995                           ;I2C.c: 82:     if(a == 1){
  1996  020E  0370               	decf	I2C_Master_Read@a,w
  1997  020F  0471               	iorwf	I2C_Master_Read@a+1,w
  1998  0210  1D03               	btfss	3,2
  1999  0211  2A13               	goto	u401
  2000  0212  2A14               	goto	u400
  2001  0213                     u401:
  2002  0213  2A18               	goto	l50
  2003  0214                     u400:
  2004  0214                     l1449:
  2005                           
  2006                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2007  0214  1683               	bsf	3,5	;RP0=1, select bank1
  2008  0215  1303               	bcf	3,6	;RP1=0, select bank1
  2009  0216  1291               	bcf	17,5	;volatile
  2010                           
  2011                           ;I2C.c: 84:     }else{
  2012  0217  2A1B               	goto	l51
  2013  0218                     l50:
  2014                           
  2015                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2016  0218  1683               	bsf	3,5	;RP0=1, select bank1
  2017  0219  1303               	bcf	3,6	;RP1=0, select bank1
  2018  021A  1691               	bsf	17,5	;volatile
  2019  021B                     l51:	
  2020                           ;I2C.c: 86:     }
  2021                           
  2022                           
  2023                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2024  021B  1611               	bsf	17,4	;volatile
  2025  021C                     l1451:
  2026                           
  2027                           ;I2C.c: 88:     return temp;
  2028  021C  0875               	movf	I2C_Master_Read@temp+1,w
  2029  021D  00F1               	movwf	?_I2C_Master_Read+1
  2030  021E  0874               	movf	I2C_Master_Read@temp,w
  2031  021F  00F0               	movwf	?_I2C_Master_Read
  2032  0220                     l52:
  2033  0220  0008               	return
  2034  0221                     __end_of_I2C_Master_Read:
  2035                           
  2036                           	psect	text7
  2037  015C                     __ptext7:	
  2038 ;; *************** function _I2C_Master_Wait *****************
  2039 ;; Defined at:
  2040 ;;		line 32 in file "I2C.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;		None
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;		None
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1    wreg      void 
  2047 ;; Registers used:
  2048 ;;		wreg, status,2
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2054 ;;      Params:         0       0       0       0       0
  2055 ;;      Locals:         0       0       0       0       0
  2056 ;;      Temps:          0       0       0       0       0
  2057 ;;      Totals:         0       0       0       0       0
  2058 ;;Total ram usage:        0 bytes
  2059 ;; Hardware stack levels used: 1
  2060 ;; This function calls:
  2061 ;;		Nothing
  2062 ;; This function is called by:
  2063 ;;		_I2C_Master_Start
  2064 ;;		_I2C_Master_Stop
  2065 ;;		_I2C_Master_Write
  2066 ;;		_I2C_Master_Read
  2067 ;;		_I2C_Master_RepeatedStart
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           
  2072                           ;psect for function _I2C_Master_Wait
  2073  015C                     _I2C_Master_Wait:
  2074  015C                     l1385:	
  2075                           ;incstack = 0
  2076                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2077                           
  2078  015C                     l32:	
  2079                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2080                           
  2081  015C  1683               	bsf	3,5	;RP0=1, select bank1
  2082  015D  1303               	bcf	3,6	;RP1=0, select bank1
  2083  015E  1914               	btfsc	20,2	;volatile
  2084  015F  2961               	goto	u301
  2085  0160  2962               	goto	u300
  2086  0161                     u301:
  2087  0161  295C               	goto	l32
  2088  0162                     u300:
  2089  0162                     l1387:
  2090  0162  0811               	movf	17,w	;volatile
  2091  0163  391F               	andlw	31
  2092  0164  1D03               	btfss	3,2
  2093  0165  2967               	goto	u311
  2094  0166  2968               	goto	u310
  2095  0167                     u311:
  2096  0167  295C               	goto	l32
  2097  0168                     u310:
  2098  0168                     l35:
  2099  0168  0008               	return
  2100  0169                     __end_of_I2C_Master_Wait:
  2101                           
  2102                           	psect	text8
  2103  0258                     __ptext8:	
  2104 ;; *************** function _I2C_Master_Init *****************
  2105 ;; Defined at:
  2106 ;;		line 16 in file "I2C.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;  c               4    0[BANK0 ] const unsigned long 
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;		None
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      void 
  2113 ;; Registers used:
  2114 ;;		wreg, status,2, status,0, pclath, cstack
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2120 ;;      Params:         0       4       0       0       0
  2121 ;;      Locals:         0       0       0       0       0
  2122 ;;      Temps:          0       4       0       0       0
  2123 ;;      Totals:         0       8       0       0       0
  2124 ;;Total ram usage:        8 bytes
  2125 ;; Hardware stack levels used: 1
  2126 ;; Hardware stack levels required when called: 1
  2127 ;; This function calls:
  2128 ;;		___lldiv
  2129 ;; This function is called by:
  2130 ;;		_setup
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           
  2135                           ;psect for function _I2C_Master_Init
  2136  0258                     _I2C_Master_Init:
  2137  0258                     l1415:	
  2138                           ;incstack = 0
  2139                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2140                           
  2141                           
  2142                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2143  0258  3028               	movlw	40
  2144  0259  1283               	bcf	3,5	;RP0=0, select bank0
  2145  025A  1303               	bcf	3,6	;RP1=0, select bank0
  2146  025B  0094               	movwf	20	;volatile
  2147  025C                     l1417:
  2148                           
  2149                           ;I2C.c: 19:     SSPCON2 = 0;
  2150  025C  1683               	bsf	3,5	;RP0=1, select bank1
  2151  025D  1303               	bcf	3,6	;RP1=0, select bank1
  2152  025E  0191               	clrf	17	;volatile
  2153  025F                     l1419:
  2154                           
  2155                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2156  025F  1283               	bcf	3,5	;RP0=0, select bank0
  2157  0260  1303               	bcf	3,6	;RP1=0, select bank0
  2158  0261  0820               	movf	I2C_Master_Init@c,w
  2159  0262  00A4               	movwf	??_I2C_Master_Init
  2160  0263  0821               	movf	I2C_Master_Init@c+1,w
  2161  0264  00A5               	movwf	??_I2C_Master_Init+1
  2162  0265  0822               	movf	I2C_Master_Init@c+2,w
  2163  0266  00A6               	movwf	??_I2C_Master_Init+2
  2164  0267  0823               	movf	I2C_Master_Init@c+3,w
  2165  0268  00A7               	movwf	??_I2C_Master_Init+3
  2166  0269  3002               	movlw	2
  2167  026A                     u395:
  2168  026A  1003               	clrc
  2169  026B  0DA4               	rlf	??_I2C_Master_Init,f
  2170  026C  0DA5               	rlf	??_I2C_Master_Init+1,f
  2171  026D  0DA6               	rlf	??_I2C_Master_Init+2,f
  2172  026E  0DA7               	rlf	??_I2C_Master_Init+3,f
  2173  026F                     u390:
  2174  026F  3EFF               	addlw	-1
  2175  0270  1D03               	skipz
  2176  0271  2A6A               	goto	u395
  2177  0272  0827               	movf	??_I2C_Master_Init+3,w
  2178  0273  00F3               	movwf	___lldiv@divisor+3
  2179  0274  0826               	movf	??_I2C_Master_Init+2,w
  2180  0275  00F2               	movwf	___lldiv@divisor+2
  2181  0276  0825               	movf	??_I2C_Master_Init+1,w
  2182  0277  00F1               	movwf	___lldiv@divisor+1
  2183  0278  0824               	movf	??_I2C_Master_Init,w
  2184  0279  00F0               	movwf	___lldiv@divisor
  2185  027A  3000               	movlw	0
  2186  027B  00F7               	movwf	___lldiv@dividend+3
  2187  027C  307A               	movlw	122
  2188  027D  00F6               	movwf	___lldiv@dividend+2
  2189  027E  3012               	movlw	18
  2190  027F  00F5               	movwf	___lldiv@dividend+1
  2191  0280  3000               	movlw	0
  2192  0281  00F4               	movwf	___lldiv@dividend
  2193  0282  120A  118A  2357  120A  118A  	fcall	___lldiv
  2194  0287  0870               	movf	?___lldiv,w
  2195  0288  3EFF               	addlw	255
  2196  0289  1683               	bsf	3,5	;RP0=1, select bank1
  2197  028A  1303               	bcf	3,6	;RP1=0, select bank1
  2198  028B  0093               	movwf	19	;volatile
  2199  028C                     l1421:
  2200                           
  2201                           ;I2C.c: 21:     SSPSTAT = 0;
  2202  028C  0194               	clrf	20	;volatile
  2203  028D                     l1423:
  2204                           
  2205                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2206  028D  1587               	bsf	7,3	;volatile
  2207  028E                     l1425:
  2208                           
  2209                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2210  028E  1607               	bsf	7,4	;volatile
  2211  028F                     l29:
  2212  028F  0008               	return
  2213  0290                     __end_of_I2C_Master_Init:
  2214                           
  2215                           	psect	text9
  2216  0357                     __ptext9:	
  2217 ;; *************** function ___lldiv *****************
  2218 ;; Defined at:
  2219 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;  divisor         4    0[COMMON] unsigned long 
  2222 ;;  dividend        4    4[COMMON] unsigned long 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;  quotient        4    9[COMMON] unsigned long 
  2225 ;;  counter         1   13[COMMON] unsigned char 
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  4    0[COMMON] unsigned long 
  2228 ;; Registers used:
  2229 ;;		wreg, status,2, status,0
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2235 ;;      Params:         8       0       0       0       0
  2236 ;;      Locals:         5       0       0       0       0
  2237 ;;      Temps:          1       0       0       0       0
  2238 ;;      Totals:        14       0       0       0       0
  2239 ;;Total ram usage:       14 bytes
  2240 ;; Hardware stack levels used: 1
  2241 ;; This function calls:
  2242 ;;		Nothing
  2243 ;; This function is called by:
  2244 ;;		_I2C_Master_Init
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248                           
  2249                           ;psect for function ___lldiv
  2250  0357                     ___lldiv:
  2251  0357                     l1391:	
  2252                           ;incstack = 0
  2253                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2254                           
  2255  0357  3000               	movlw	0
  2256  0358  00FC               	movwf	___lldiv@quotient+3
  2257  0359  3000               	movlw	0
  2258  035A  00FB               	movwf	___lldiv@quotient+2
  2259  035B  3000               	movlw	0
  2260  035C  00FA               	movwf	___lldiv@quotient+1
  2261  035D  3000               	movlw	0
  2262  035E  00F9               	movwf	___lldiv@quotient
  2263  035F  0873               	movf	___lldiv@divisor+3,w
  2264  0360  0472               	iorwf	___lldiv@divisor+2,w
  2265  0361  0471               	iorwf	___lldiv@divisor+1,w
  2266  0362  0470               	iorwf	___lldiv@divisor,w
  2267  0363  1903               	skipnz
  2268  0364  2B66               	goto	u321
  2269  0365  2B67               	goto	u320
  2270  0366                     u321:
  2271  0366  2BB4               	goto	l1411
  2272  0367                     u320:
  2273  0367                     l1393:
  2274  0367  01FD               	clrf	___lldiv@counter
  2275  0368  0AFD               	incf	___lldiv@counter,f
  2276  0369  2B77               	goto	l1397
  2277  036A                     l1395:
  2278  036A  3001               	movlw	1
  2279  036B  00F8               	movwf	??___lldiv
  2280  036C                     u335:
  2281  036C  1003               	clrc
  2282  036D  0DF0               	rlf	___lldiv@divisor,f
  2283  036E  0DF1               	rlf	___lldiv@divisor+1,f
  2284  036F  0DF2               	rlf	___lldiv@divisor+2,f
  2285  0370  0DF3               	rlf	___lldiv@divisor+3,f
  2286  0371  0BF8               	decfsz	??___lldiv,f
  2287  0372  2B6C               	goto	u335
  2288  0373  3001               	movlw	1
  2289  0374  00F8               	movwf	??___lldiv
  2290  0375  0878               	movf	??___lldiv,w
  2291  0376  07FD               	addwf	___lldiv@counter,f
  2292  0377                     l1397:
  2293  0377  1FF3               	btfss	___lldiv@divisor+3,7
  2294  0378  2B7A               	goto	u341
  2295  0379  2B7B               	goto	u340
  2296  037A                     u341:
  2297  037A  2B6A               	goto	l1395
  2298  037B                     u340:
  2299  037B                     l1399:
  2300  037B  3001               	movlw	1
  2301  037C  00F8               	movwf	??___lldiv
  2302  037D                     u355:
  2303  037D  1003               	clrc
  2304  037E  0DF9               	rlf	___lldiv@quotient,f
  2305  037F  0DFA               	rlf	___lldiv@quotient+1,f
  2306  0380  0DFB               	rlf	___lldiv@quotient+2,f
  2307  0381  0DFC               	rlf	___lldiv@quotient+3,f
  2308  0382  0BF8               	decfsz	??___lldiv,f
  2309  0383  2B7D               	goto	u355
  2310  0384                     l1401:
  2311  0384  0873               	movf	___lldiv@divisor+3,w
  2312  0385  0277               	subwf	___lldiv@dividend+3,w
  2313  0386  1D03               	skipz
  2314  0387  2B92               	goto	u365
  2315  0388  0872               	movf	___lldiv@divisor+2,w
  2316  0389  0276               	subwf	___lldiv@dividend+2,w
  2317  038A  1D03               	skipz
  2318  038B  2B92               	goto	u365
  2319  038C  0871               	movf	___lldiv@divisor+1,w
  2320  038D  0275               	subwf	___lldiv@dividend+1,w
  2321  038E  1D03               	skipz
  2322  038F  2B92               	goto	u365
  2323  0390  0870               	movf	___lldiv@divisor,w
  2324  0391  0274               	subwf	___lldiv@dividend,w
  2325  0392                     u365:
  2326  0392  1C03               	skipc
  2327  0393  2B95               	goto	u361
  2328  0394  2B96               	goto	u360
  2329  0395                     u361:
  2330  0395  2BA5               	goto	l1407
  2331  0396                     u360:
  2332  0396                     l1403:
  2333  0396  0870               	movf	___lldiv@divisor,w
  2334  0397  02F4               	subwf	___lldiv@dividend,f
  2335  0398  0871               	movf	___lldiv@divisor+1,w
  2336  0399  1C03               	skipc
  2337  039A  0F71               	incfsz	___lldiv@divisor+1,w
  2338  039B  02F5               	subwf	___lldiv@dividend+1,f
  2339  039C  0872               	movf	___lldiv@divisor+2,w
  2340  039D  1C03               	skipc
  2341  039E  0F72               	incfsz	___lldiv@divisor+2,w
  2342  039F  02F6               	subwf	___lldiv@dividend+2,f
  2343  03A0  0873               	movf	___lldiv@divisor+3,w
  2344  03A1  1C03               	skipc
  2345  03A2  0F73               	incfsz	___lldiv@divisor+3,w
  2346  03A3  02F7               	subwf	___lldiv@dividend+3,f
  2347  03A4                     l1405:
  2348  03A4  1479               	bsf	___lldiv@quotient,0
  2349  03A5                     l1407:
  2350  03A5  3001               	movlw	1
  2351  03A6                     u375:
  2352  03A6  1003               	clrc
  2353  03A7  0CF3               	rrf	___lldiv@divisor+3,f
  2354  03A8  0CF2               	rrf	___lldiv@divisor+2,f
  2355  03A9  0CF1               	rrf	___lldiv@divisor+1,f
  2356  03AA  0CF0               	rrf	___lldiv@divisor,f
  2357  03AB  3EFF               	addlw	-1
  2358  03AC  1D03               	skipz
  2359  03AD  2BA6               	goto	u375
  2360  03AE                     l1409:
  2361  03AE  3001               	movlw	1
  2362  03AF  02FD               	subwf	___lldiv@counter,f
  2363  03B0  1D03               	btfss	3,2
  2364  03B1  2BB3               	goto	u381
  2365  03B2  2BB4               	goto	u380
  2366  03B3                     u381:
  2367  03B3  2B7B               	goto	l1399
  2368  03B4                     u380:
  2369  03B4                     l1411:
  2370  03B4  087C               	movf	___lldiv@quotient+3,w
  2371  03B5  00F3               	movwf	?___lldiv+3
  2372  03B6  087B               	movf	___lldiv@quotient+2,w
  2373  03B7  00F2               	movwf	?___lldiv+2
  2374  03B8  087A               	movf	___lldiv@quotient+1,w
  2375  03B9  00F1               	movwf	?___lldiv+1
  2376  03BA  0879               	movf	___lldiv@quotient,w
  2377  03BB  00F0               	movwf	?___lldiv
  2378  03BC                     l367:
  2379  03BC  0008               	return
  2380  03BD                     __end_of___lldiv:
  2381                           
  2382                           	psect	text10
  2383  0313                     __ptext10:	
  2384 ;; *************** function _conver1 *****************
  2385 ;; Defined at:
  2386 ;;		line 205 in file "main.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;		None
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;  temporal       16    0[BANK0 ] unsigned char [16]
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      PTR const unsigned char 
  2393 ;; Registers used:
  2394 ;;		wreg
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2400 ;;      Params:         0       0       0       0       0
  2401 ;;      Locals:         0      16       0       0       0
  2402 ;;      Temps:          1       0       0       0       0
  2403 ;;      Totals:         1      16       0       0       0
  2404 ;;Total ram usage:       17 bytes
  2405 ;; Hardware stack levels used: 1
  2406 ;; This function calls:
  2407 ;;		Nothing
  2408 ;; This function is called by:
  2409 ;;		_main
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           
  2414                           ;psect for function _conver1
  2415  0313                     _conver1:
  2416  0313                     l1667:	
  2417                           ;incstack = 0
  2418                           ; Regs used in _conver1: [wreg]
  2419                           
  2420                           
  2421                           ;main.c: 206:     char temporal[16];;main.c: 207:     temporal[0] = C1;
  2422  0313  1283               	bcf	3,5	;RP0=0, select bank0
  2423  0314  1303               	bcf	3,6	;RP1=0, select bank0
  2424  0315  0839               	movf	_C1,w
  2425  0316  00F0               	movwf	??_conver1
  2426  0317  0870               	movf	??_conver1,w
  2427  0318  00A0               	movwf	conver1@temporal
  2428                           
  2429                           ;main.c: 208:     temporal[1] = C2;
  2430  0319  0838               	movf	_C2,w
  2431  031A  00F0               	movwf	??_conver1
  2432  031B  0870               	movf	??_conver1,w
  2433  031C  00A1               	movwf	conver1@temporal+1
  2434                           
  2435                           ;main.c: 209:     temporal[2] = C3;
  2436  031D  0837               	movf	_C3,w
  2437  031E  00F0               	movwf	??_conver1
  2438  031F  0870               	movf	??_conver1,w
  2439  0320  00A2               	movwf	conver1@temporal+2
  2440                           
  2441                           ;main.c: 210:     temporal[3] = 0x2E;
  2442  0321  302E               	movlw	46
  2443  0322  00F0               	movwf	??_conver1
  2444  0323  0870               	movf	??_conver1,w
  2445  0324  00A3               	movwf	conver1@temporal+3
  2446                           
  2447                           ;main.c: 211:     temporal[4] = 0x20;
  2448  0325  3020               	movlw	32
  2449  0326  00F0               	movwf	??_conver1
  2450  0327  0870               	movf	??_conver1,w
  2451  0328  00A4               	movwf	conver1@temporal+4
  2452                           
  2453                           ;main.c: 212:     temporal[5] = DH;
  2454  0329  0835               	movf	_DH,w
  2455  032A  00F0               	movwf	??_conver1
  2456  032B  0870               	movf	??_conver1,w
  2457  032C  00A5               	movwf	conver1@temporal+5
  2458                           
  2459                           ;main.c: 213:     temporal[6] = UH;
  2460  032D  0836               	movf	_UH,w
  2461  032E  00F0               	movwf	??_conver1
  2462  032F  0870               	movf	??_conver1,w
  2463  0330  00A6               	movwf	conver1@temporal+6
  2464                           
  2465                           ;main.c: 214:     temporal[7] = 0x3A;
  2466  0331  303A               	movlw	58
  2467  0332  00F0               	movwf	??_conver1
  2468  0333  0870               	movf	??_conver1,w
  2469  0334  00A7               	movwf	conver1@temporal+7
  2470                           
  2471                           ;main.c: 215:     temporal[8] = DM;
  2472  0335  0833               	movf	_DM,w
  2473  0336  00F0               	movwf	??_conver1
  2474  0337  0870               	movf	??_conver1,w
  2475  0338  00A8               	movwf	conver1@temporal+8
  2476                           
  2477                           ;main.c: 216:     temporal[9] = UM;
  2478  0339  0834               	movf	_UM,w
  2479  033A  00F0               	movwf	??_conver1
  2480  033B  0870               	movf	??_conver1,w
  2481  033C  00A9               	movwf	conver1@temporal+9
  2482                           
  2483                           ;main.c: 217:     temporal[10] = 0x20;
  2484  033D  3020               	movlw	32
  2485  033E  00F0               	movwf	??_conver1
  2486  033F  0870               	movf	??_conver1,w
  2487  0340  00AA               	movwf	conver1@temporal+10
  2488                           
  2489                           ;main.c: 218:     temporal[11] = 0x20;
  2490  0341  3020               	movlw	32
  2491  0342  00F0               	movwf	??_conver1
  2492  0343  0870               	movf	??_conver1,w
  2493  0344  00AB               	movwf	conver1@temporal+11
  2494                           
  2495                           ;main.c: 219:     temporal[12] = 0x20;
  2496  0345  3020               	movlw	32
  2497  0346  00F0               	movwf	??_conver1
  2498  0347  0870               	movf	??_conver1,w
  2499  0348  00AC               	movwf	conver1@temporal+12
  2500                           
  2501                           ;main.c: 220:     temporal[13] = 0x20;
  2502  0349  3020               	movlw	32
  2503  034A  00F0               	movwf	??_conver1
  2504  034B  0870               	movf	??_conver1,w
  2505  034C  00AD               	movwf	conver1@temporal+13
  2506                           
  2507                           ;main.c: 221:     temporal[14] = 0x20;
  2508  034D  3020               	movlw	32
  2509  034E  00F0               	movwf	??_conver1
  2510  034F  0870               	movf	??_conver1,w
  2511  0350  00AE               	movwf	conver1@temporal+14
  2512                           
  2513                           ;main.c: 222:     temporal[15] = 0x20;
  2514  0351  3020               	movlw	32
  2515  0352  00F0               	movwf	??_conver1
  2516  0353  0870               	movf	??_conver1,w
  2517  0354  00AF               	movwf	conver1@temporal+15
  2518                           
  2519                           ;main.c: 223:     return temporal;
  2520  0355  3020               	movlw	(low (conver1@temporal| 0))& (0+255)
  2521  0356                     l148:
  2522  0356  0008               	return
  2523  0357                     __end_of_conver1:
  2524                           
  2525                           	psect	text11
  2526  02CF                     __ptext11:	
  2527 ;; *************** function _conver *****************
  2528 ;; Defined at:
  2529 ;;		line 184 in file "main.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;		None
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;  temporal       16    0[BANK0 ] unsigned char [16]
  2534 ;; Return value:  Size  Location     Type
  2535 ;;                  1    wreg      PTR const unsigned char 
  2536 ;; Registers used:
  2537 ;;		wreg
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2543 ;;      Params:         0       0       0       0       0
  2544 ;;      Locals:         0      16       0       0       0
  2545 ;;      Temps:          1       0       0       0       0
  2546 ;;      Totals:         1      16       0       0       0
  2547 ;;Total ram usage:       17 bytes
  2548 ;; Hardware stack levels used: 1
  2549 ;; This function calls:
  2550 ;;		Nothing
  2551 ;; This function is called by:
  2552 ;;		_main
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           
  2557                           ;psect for function _conver
  2558  02CF                     _conver:
  2559  02CF                     l1679:	
  2560                           ;incstack = 0
  2561                           ; Regs used in _conver: [wreg]
  2562                           
  2563                           
  2564                           ;main.c: 185:     char temporal[16];;main.c: 186:     temporal[0] = 0x50;
  2565  02CF  3050               	movlw	80
  2566  02D0  00F0               	movwf	??_conver
  2567  02D1  0870               	movf	??_conver,w
  2568  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2569  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  2570  02D4  00A0               	movwf	conver@temporal
  2571                           
  2572                           ;main.c: 187:     temporal[1] = 0x41;
  2573  02D5  3041               	movlw	65
  2574  02D6  00F0               	movwf	??_conver
  2575  02D7  0870               	movf	??_conver,w
  2576  02D8  00A1               	movwf	conver@temporal+1
  2577                           
  2578                           ;main.c: 188:     temporal[2] = 0x52;
  2579  02D9  3052               	movlw	82
  2580  02DA  00F0               	movwf	??_conver
  2581  02DB  0870               	movf	??_conver,w
  2582  02DC  00A2               	movwf	conver@temporal+2
  2583                           
  2584                           ;main.c: 189:     temporal[3] = 0x51;
  2585  02DD  3051               	movlw	81
  2586  02DE  00F0               	movwf	??_conver
  2587  02DF  0870               	movf	??_conver,w
  2588  02E0  00A3               	movwf	conver@temporal+3
  2589                           
  2590                           ;main.c: 190:     temporal[4] = 0x55;
  2591  02E1  3055               	movlw	85
  2592  02E2  00F0               	movwf	??_conver
  2593  02E3  0870               	movf	??_conver,w
  2594  02E4  00A4               	movwf	conver@temporal+4
  2595                           
  2596                           ;main.c: 191:     temporal[5] = 0x45;
  2597  02E5  3045               	movlw	69
  2598  02E6  00F0               	movwf	??_conver
  2599  02E7  0870               	movf	??_conver,w
  2600  02E8  00A5               	movwf	conver@temporal+5
  2601                           
  2602                           ;main.c: 192:     temporal[6] = 0x4F;
  2603  02E9  304F               	movlw	79
  2604  02EA  00F0               	movwf	??_conver
  2605  02EB  0870               	movf	??_conver,w
  2606  02EC  00A6               	movwf	conver@temporal+6
  2607                           
  2608                           ;main.c: 193:     temporal[7] = 0x53;
  2609  02ED  3053               	movlw	83
  2610  02EE  00F0               	movwf	??_conver
  2611  02EF  0870               	movf	??_conver,w
  2612  02F0  00A7               	movwf	conver@temporal+7
  2613                           
  2614                           ;main.c: 194:     temporal[8] = 0x3A;
  2615  02F1  303A               	movlw	58
  2616  02F2  00F0               	movwf	??_conver
  2617  02F3  0870               	movf	??_conver,w
  2618  02F4  00A8               	movwf	conver@temporal+8
  2619                           
  2620                           ;main.c: 195:     temporal[9] = 0X20;
  2621  02F5  3020               	movlw	32
  2622  02F6  00F0               	movwf	??_conver
  2623  02F7  0870               	movf	??_conver,w
  2624  02F8  00A9               	movwf	conver@temporal+9
  2625                           
  2626                           ;main.c: 196:     temporal[10] = 0x30;
  2627  02F9  3030               	movlw	48
  2628  02FA  00F0               	movwf	??_conver
  2629  02FB  0870               	movf	??_conver,w
  2630  02FC  00AA               	movwf	conver@temporal+10
  2631                           
  2632                           ;main.c: 197:     temporal[11] = NUM;
  2633  02FD  083E               	movf	_NUM,w
  2634  02FE  00F0               	movwf	??_conver
  2635  02FF  0870               	movf	??_conver,w
  2636  0300  00AB               	movwf	conver@temporal+11
  2637                           
  2638                           ;main.c: 198:     temporal[12] = 0x20;
  2639  0301  3020               	movlw	32
  2640  0302  00F0               	movwf	??_conver
  2641  0303  0870               	movf	??_conver,w
  2642  0304  00AC               	movwf	conver@temporal+12
  2643                           
  2644                           ;main.c: 199:     temporal[13] = 0x20;
  2645  0305  3020               	movlw	32
  2646  0306  00F0               	movwf	??_conver
  2647  0307  0870               	movf	??_conver,w
  2648  0308  00AD               	movwf	conver@temporal+13
  2649                           
  2650                           ;main.c: 200:     temporal[14] = 0x20;
  2651  0309  3020               	movlw	32
  2652  030A  00F0               	movwf	??_conver
  2653  030B  0870               	movf	??_conver,w
  2654  030C  00AE               	movwf	conver@temporal+14
  2655                           
  2656                           ;main.c: 201:     temporal[15] = 0x20;
  2657  030D  3020               	movlw	32
  2658  030E  00F0               	movwf	??_conver
  2659  030F  0870               	movf	??_conver,w
  2660  0310  00AF               	movwf	conver@temporal+15
  2661                           
  2662                           ;main.c: 202:     return temporal;
  2663  0311  3020               	movlw	(low (conver@temporal| 0))& (0+255)
  2664  0312                     l145:
  2665  0312  0008               	return
  2666  0313                     __end_of_conver:
  2667                           
  2668                           	psect	text12
  2669  01AE                     __ptext12:	
  2670 ;; *************** function _Lcd_Write_String *****************
  2671 ;; Defined at:
  2672 ;;		line 54 in file "LCD.c"
  2673 ;; Parameters:    Size  Location     Type
  2674 ;;  a               1    wreg     PTR unsigned char 
  2675 ;;		 -> conver1@temporal(16), conver@temporal(16), 
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;  a               1    6[COMMON] PTR unsigned char 
  2678 ;;		 -> conver1@temporal(16), conver@temporal(16), 
  2679 ;;  i               2    4[COMMON] int 
  2680 ;; Return value:  Size  Location     Type
  2681 ;;                  1    wreg      void 
  2682 ;; Registers used:
  2683 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2689 ;;      Params:         0       0       0       0       0
  2690 ;;      Locals:         3       0       0       0       0
  2691 ;;      Temps:          1       0       0       0       0
  2692 ;;      Totals:         4       0       0       0       0
  2693 ;;Total ram usage:        4 bytes
  2694 ;; Hardware stack levels used: 1
  2695 ;; Hardware stack levels required when called: 2
  2696 ;; This function calls:
  2697 ;;		_Lcd_Write_Char
  2698 ;; This function is called by:
  2699 ;;		_main
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           
  2704                           ;psect for function _Lcd_Write_String
  2705  01AE                     _Lcd_Write_String:
  2706                           
  2707                           ;incstack = 0
  2708                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2709                           ;Lcd_Write_String@a stored from wreg
  2710  01AE  00F6               	movwf	Lcd_Write_String@a
  2711  01AF                     l1671:
  2712                           
  2713                           ;LCD.c: 55:     int i;;LCD.c: 56:     for (i = 0; a[i] != '\0'; i++)
  2714  01AF  01F4               	clrf	Lcd_Write_String@i
  2715  01B0  01F5               	clrf	Lcd_Write_String@i+1
  2716  01B1  29C3               	goto	l1677
  2717  01B2                     l1673:
  2718                           
  2719                           ;LCD.c: 57:         Lcd_Write_Char(a[i]);
  2720  01B2  0874               	movf	Lcd_Write_String@i,w
  2721  01B3  0776               	addwf	Lcd_Write_String@a,w
  2722  01B4  00F3               	movwf	??_Lcd_Write_String
  2723  01B5  0873               	movf	??_Lcd_Write_String,w
  2724  01B6  0084               	movwf	4
  2725  01B7  0800               	movf	0,w
  2726  01B8  120A  118A  2169  120A  118A  	fcall	_Lcd_Write_Char
  2727  01BD                     l1675:
  2728  01BD  3001               	movlw	1
  2729  01BE  07F4               	addwf	Lcd_Write_String@i,f
  2730  01BF  1803               	skipnc
  2731  01C0  0AF5               	incf	Lcd_Write_String@i+1,f
  2732  01C1  3000               	movlw	0
  2733  01C2  07F5               	addwf	Lcd_Write_String@i+1,f
  2734  01C3                     l1677:
  2735  01C3  0874               	movf	Lcd_Write_String@i,w
  2736  01C4  0776               	addwf	Lcd_Write_String@a,w
  2737  01C5  00F3               	movwf	??_Lcd_Write_String
  2738  01C6  0873               	movf	??_Lcd_Write_String,w
  2739  01C7  0084               	movwf	4
  2740  01C8  1383               	bcf	3,7	;select IRP bank0
  2741  01C9  0800               	movf	0,w
  2742  01CA  1D03               	btfss	3,2
  2743  01CB  29CD               	goto	u431
  2744  01CC  29CE               	goto	u430
  2745  01CD                     u431:
  2746  01CD  29B2               	goto	l1673
  2747  01CE                     u430:
  2748  01CE                     l223:
  2749  01CE  0008               	return
  2750  01CF                     __end_of_Lcd_Write_String:
  2751                           
  2752                           	psect	text13
  2753  0169                     __ptext13:	
  2754 ;; *************** function _Lcd_Write_Char *****************
  2755 ;; Defined at:
  2756 ;;		line 45 in file "LCD.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  a               1    wreg     unsigned char 
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;  a               1    2[COMMON] unsigned char 
  2761 ;; Return value:  Size  Location     Type
  2762 ;;                  1    wreg      void 
  2763 ;; Registers used:
  2764 ;;		wreg, status,2, status,0, pclath, cstack
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2770 ;;      Params:         0       0       0       0       0
  2771 ;;      Locals:         1       0       0       0       0
  2772 ;;      Temps:          1       0       0       0       0
  2773 ;;      Totals:         2       0       0       0       0
  2774 ;;Total ram usage:        2 bytes
  2775 ;; Hardware stack levels used: 1
  2776 ;; Hardware stack levels required when called: 1
  2777 ;; This function calls:
  2778 ;;		_Lcd_Port
  2779 ;; This function is called by:
  2780 ;;		_Lcd_Write_String
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784                           
  2785                           ;psect for function _Lcd_Write_Char
  2786  0169                     _Lcd_Write_Char:
  2787                           
  2788                           ;incstack = 0
  2789                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2790                           ;Lcd_Write_Char@a stored from wreg
  2791  0169  00F2               	movwf	Lcd_Write_Char@a
  2792  016A                     l1569:
  2793                           
  2794                           ;LCD.c: 46:     Lcd_Port(a);
  2795  016A  0872               	movf	Lcd_Write_Char@a,w
  2796  016B  120A  118A  213A  120A  118A  	fcall	_Lcd_Port
  2797  0170                     l1571:
  2798                           
  2799                           ;LCD.c: 47:     PORTEbits.RE1 = 1;
  2800  0170  1283               	bcf	3,5	;RP0=0, select bank0
  2801  0171  1303               	bcf	3,6	;RP1=0, select bank0
  2802  0172  1489               	bsf	9,1	;volatile
  2803  0173                     l1573:
  2804                           
  2805                           ;LCD.c: 48:     PORTEbits.RE2 = 0;
  2806  0173  1109               	bcf	9,2	;volatile
  2807  0174                     l1575:
  2808                           
  2809                           ;LCD.c: 49:     PORTEbits.RE0 = 1;
  2810  0174  1409               	bsf	9,0	;volatile
  2811  0175                     l1577:
  2812                           
  2813                           ;LCD.c: 50:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2814  0175  300D               	movlw	13
  2815  0176  00F1               	movwf	??_Lcd_Write_Char
  2816  0177                     u737:
  2817  0177  0BF1               	decfsz	??_Lcd_Write_Char,f
  2818  0178  2977               	goto	u737
  2819  0179                     l1579:
  2820                           
  2821                           ;LCD.c: 51:     PORTEbits.RE0 = 0;
  2822  0179  1283               	bcf	3,5	;RP0=0, select bank0
  2823  017A  1303               	bcf	3,6	;RP1=0, select bank0
  2824  017B  1009               	bcf	9,0	;volatile
  2825  017C                     l217:
  2826  017C  0008               	return
  2827  017D                     __end_of_Lcd_Write_Char:
  2828                           
  2829                           	psect	text14
  2830  01CF                     __ptext14:	
  2831 ;; *************** function _Lcd_Set_Cursor *****************
  2832 ;; Defined at:
  2833 ;;		line 20 in file "LCD.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;  a               1    wreg     unsigned char 
  2836 ;;  b               1    4[COMMON] unsigned char 
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;  a               1    6[COMMON] unsigned char 
  2839 ;;  temp            1    7[COMMON] unsigned char 
  2840 ;; Return value:  Size  Location     Type
  2841 ;;                  1    wreg      void 
  2842 ;; Registers used:
  2843 ;;		wreg, status,2, status,0, pclath, cstack
  2844 ;; Tracked objects:
  2845 ;;		On entry : 0/0
  2846 ;;		On exit  : 0/0
  2847 ;;		Unchanged: 0/0
  2848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2849 ;;      Params:         1       0       0       0       0
  2850 ;;      Locals:         2       0       0       0       0
  2851 ;;      Temps:          1       0       0       0       0
  2852 ;;      Totals:         4       0       0       0       0
  2853 ;;Total ram usage:        4 bytes
  2854 ;; Hardware stack levels used: 1
  2855 ;; Hardware stack levels required when called: 2
  2856 ;; This function calls:
  2857 ;;		_Lcd_Cmd
  2858 ;; This function is called by:
  2859 ;;		_main
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863                           
  2864                           ;psect for function _Lcd_Set_Cursor
  2865  01CF                     _Lcd_Set_Cursor:
  2866                           
  2867                           ;incstack = 0
  2868                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2869                           ;Lcd_Set_Cursor@a stored from wreg
  2870  01CF  00F6               	movwf	Lcd_Set_Cursor@a
  2871  01D0                     l1655:
  2872                           
  2873                           ;LCD.c: 21:     char temp;;LCD.c: 22:     if (a == 1) {
  2874  01D0  0376               	decf	Lcd_Set_Cursor@a,w
  2875  01D1  1D03               	btfss	3,2
  2876  01D2  29D4               	goto	u411
  2877  01D3  29D5               	goto	u410
  2878  01D4                     u411:
  2879  01D4  29E1               	goto	l1661
  2880  01D5                     u410:
  2881  01D5                     l1657:
  2882                           
  2883                           ;LCD.c: 23:         temp = 0x80 + b - 1;
  2884  01D5  0874               	movf	Lcd_Set_Cursor@b,w
  2885  01D6  3E7F               	addlw	127
  2886  01D7  00F5               	movwf	??_Lcd_Set_Cursor
  2887  01D8  0875               	movf	??_Lcd_Set_Cursor,w
  2888  01D9  00F7               	movwf	Lcd_Set_Cursor@temp
  2889  01DA                     l1659:
  2890                           
  2891                           ;LCD.c: 24:         Lcd_Cmd(temp);
  2892  01DA  0877               	movf	Lcd_Set_Cursor@temp,w
  2893  01DB  120A  118A  217D  120A  118A  	fcall	_Lcd_Cmd
  2894                           
  2895                           ;LCD.c: 25:     } else if (a == 2) {
  2896  01E0  29F2               	goto	l211
  2897  01E1                     l1661:
  2898  01E1  3002               	movlw	2
  2899  01E2  0676               	xorwf	Lcd_Set_Cursor@a,w
  2900  01E3  1D03               	btfss	3,2
  2901  01E4  29E6               	goto	u421
  2902  01E5  29E7               	goto	u420
  2903  01E6                     u421:
  2904  01E6  29F2               	goto	l211
  2905  01E7                     u420:
  2906  01E7                     l1663:
  2907                           
  2908                           ;LCD.c: 26:         temp = 0xC0 + b - 1;
  2909  01E7  0874               	movf	Lcd_Set_Cursor@b,w
  2910  01E8  3EBF               	addlw	191
  2911  01E9  00F5               	movwf	??_Lcd_Set_Cursor
  2912  01EA  0875               	movf	??_Lcd_Set_Cursor,w
  2913  01EB  00F7               	movwf	Lcd_Set_Cursor@temp
  2914  01EC                     l1665:
  2915                           
  2916                           ;LCD.c: 27:         Lcd_Cmd(temp);
  2917  01EC  0877               	movf	Lcd_Set_Cursor@temp,w
  2918  01ED  120A  118A  217D  120A  118A  	fcall	_Lcd_Cmd
  2919  01F2                     l211:
  2920  01F2  0008               	return
  2921  01F3                     __end_of_Lcd_Set_Cursor:
  2922                           
  2923                           	psect	text15
  2924  0195                     __ptext15:	
  2925 ;; *************** function _Lcd_Init *****************
  2926 ;; Defined at:
  2927 ;;		line 31 in file "LCD.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;		None
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;		None
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  1    wreg      void 
  2934 ;; Registers used:
  2935 ;;		wreg, status,2, status,0, pclath, cstack
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2941 ;;      Params:         0       0       0       0       0
  2942 ;;      Locals:         0       0       0       0       0
  2943 ;;      Temps:          0       0       0       0       0
  2944 ;;      Totals:         0       0       0       0       0
  2945 ;;Total ram usage:        0 bytes
  2946 ;; Hardware stack levels used: 1
  2947 ;; Hardware stack levels required when called: 2
  2948 ;; This function calls:
  2949 ;;		_Lcd_Cmd
  2950 ;; This function is called by:
  2951 ;;		_main
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           
  2956                           ;psect for function _Lcd_Init
  2957  0195                     _Lcd_Init:
  2958  0195                     l1653:	
  2959                           ;incstack = 0
  2960                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2961                           
  2962                           
  2963                           ;LCD.c: 39:     Lcd_Cmd(0x38);
  2964  0195  3038               	movlw	56
  2965  0196  120A  118A  217D  120A  118A  	fcall	_Lcd_Cmd
  2966                           
  2967                           ;LCD.c: 40:     Lcd_Cmd(0x06);
  2968  019B  3006               	movlw	6
  2969  019C  120A  118A  217D  120A  118A  	fcall	_Lcd_Cmd
  2970                           
  2971                           ;LCD.c: 41:     Lcd_Cmd(0x0c);
  2972  01A1  300C               	movlw	12
  2973  01A2  120A  118A  217D  120A  118A  	fcall	_Lcd_Cmd
  2974                           
  2975                           ;LCD.c: 42:     Lcd_Cmd(0x80);
  2976  01A7  3080               	movlw	128
  2977  01A8  120A  118A  217D  120A  118A  	fcall	_Lcd_Cmd
  2978  01AD                     l214:
  2979  01AD  0008               	return
  2980  01AE                     __end_of_Lcd_Init:
  2981                           
  2982                           	psect	text16
  2983  017D                     __ptext16:	
  2984 ;; *************** function _Lcd_Cmd *****************
  2985 ;; Defined at:
  2986 ;;		line 7 in file "LCD.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;  a               1    wreg     unsigned char 
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;  a               1    3[COMMON] unsigned char 
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  1    wreg      void 
  2993 ;; Registers used:
  2994 ;;		wreg, status,2, status,0, pclath, cstack
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3000 ;;      Params:         0       0       0       0       0
  3001 ;;      Locals:         1       0       0       0       0
  3002 ;;      Temps:          2       0       0       0       0
  3003 ;;      Totals:         3       0       0       0       0
  3004 ;;Total ram usage:        3 bytes
  3005 ;; Hardware stack levels used: 1
  3006 ;; Hardware stack levels required when called: 1
  3007 ;; This function calls:
  3008 ;;		_Lcd_Port
  3009 ;; This function is called by:
  3010 ;;		_Lcd_Set_Cursor
  3011 ;;		_Lcd_Init
  3012 ;;		_Lcd_Clear
  3013 ;;		_Lcd_Shift_Right
  3014 ;;		_Lcd_Shift_Left
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           
  3019                           ;psect for function _Lcd_Cmd
  3020  017D                     _Lcd_Cmd:
  3021                           
  3022                           ;incstack = 0
  3023                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3024                           ;Lcd_Cmd@a stored from wreg
  3025  017D  00F3               	movwf	Lcd_Cmd@a
  3026  017E                     l1557:
  3027                           
  3028                           ;LCD.c: 8:     Lcd_Port(a);
  3029  017E  0873               	movf	Lcd_Cmd@a,w
  3030  017F  120A  118A  213A  120A  118A  	fcall	_Lcd_Port
  3031  0184                     l1559:
  3032                           
  3033                           ;LCD.c: 9:     PORTEbits.RE1 = 0;
  3034  0184  1283               	bcf	3,5	;RP0=0, select bank0
  3035  0185  1303               	bcf	3,6	;RP1=0, select bank0
  3036  0186  1089               	bcf	9,1	;volatile
  3037  0187                     l1561:
  3038                           
  3039                           ;LCD.c: 10:     PORTEbits.RE2 = 0;
  3040  0187  1109               	bcf	9,2	;volatile
  3041  0188                     l1563:
  3042                           
  3043                           ;LCD.c: 11:     PORTEbits.RE0 = 1;
  3044  0188  1409               	bsf	9,0	;volatile
  3045  0189                     l1565:
  3046                           
  3047                           ;LCD.c: 12:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3048  0189  3007               	movlw	7
  3049  018A  00F2               	movwf	??_Lcd_Cmd+1
  3050  018B  307D               	movlw	125
  3051  018C  00F1               	movwf	??_Lcd_Cmd
  3052  018D                     u747:
  3053  018D  0BF1               	decfsz	??_Lcd_Cmd,f
  3054  018E  298D               	goto	u747
  3055  018F  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3056  0190  298D               	goto	u747
  3057  0191                     l1567:
  3058                           
  3059                           ;LCD.c: 13:     PORTEbits.RE0 = 0;
  3060  0191  1283               	bcf	3,5	;RP0=0, select bank0
  3061  0192  1303               	bcf	3,6	;RP1=0, select bank0
  3062  0193  1009               	bcf	9,0	;volatile
  3063  0194                     l202:
  3064  0194  0008               	return
  3065  0195                     __end_of_Lcd_Cmd:
  3066                           
  3067                           	psect	text17
  3068  013A                     __ptext17:	
  3069 ;; *************** function _Lcd_Port *****************
  3070 ;; Defined at:
  3071 ;;		line 3 in file "LCD.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;  a               1    wreg     unsigned char 
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  a               1    0[COMMON] unsigned char 
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      void 
  3078 ;; Registers used:
  3079 ;;		wreg
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3085 ;;      Params:         0       0       0       0       0
  3086 ;;      Locals:         1       0       0       0       0
  3087 ;;      Temps:          0       0       0       0       0
  3088 ;;      Totals:         1       0       0       0       0
  3089 ;;Total ram usage:        1 bytes
  3090 ;; Hardware stack levels used: 1
  3091 ;; This function calls:
  3092 ;;		Nothing
  3093 ;; This function is called by:
  3094 ;;		_Lcd_Cmd
  3095 ;;		_Lcd_Write_Char
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           
  3100                           ;psect for function _Lcd_Port
  3101  013A                     _Lcd_Port:
  3102                           
  3103                           ;incstack = 0
  3104                           ; Regs used in _Lcd_Port: [wreg]
  3105                           ;Lcd_Port@a stored from wreg
  3106  013A  00F0               	movwf	Lcd_Port@a
  3107  013B                     l1389:
  3108                           
  3109                           ;LCD.c: 4:     PORTD = a;
  3110  013B  0870               	movf	Lcd_Port@a,w
  3111  013C  1283               	bcf	3,5	;RP0=0, select bank0
  3112  013D  1303               	bcf	3,6	;RP1=0, select bank0
  3113  013E  0088               	movwf	8	;volatile
  3114  013F                     l199:
  3115  013F  0008               	return
  3116  0140                     __end_of_Lcd_Port:
  3117                           
  3118                           	psect	text18
  3119  04F6                     __ptext18:	
  3120 ;; *************** function _LECT1 *****************
  3121 ;; Defined at:
  3122 ;;		line 225 in file "main.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;		None
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;		None
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  1    wreg      void 
  3129 ;; Registers used:
  3130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3136 ;;      Params:         0       0       0       0       0
  3137 ;;      Locals:         0       0       0       0       0
  3138 ;;      Temps:          1       0       0       0       0
  3139 ;;      Totals:         1       0       0       0       0
  3140 ;;Total ram usage:        1 bytes
  3141 ;; Hardware stack levels used: 1
  3142 ;; Hardware stack levels required when called: 1
  3143 ;; This function calls:
  3144 ;;		_num_ascii
  3145 ;; This function is called by:
  3146 ;;		_main
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           
  3151                           ;psect for function _LECT1
  3152  04F6                     _LECT1:
  3153  04F6                     l1683:	
  3154                           ;incstack = 0
  3155                           ; Regs used in _LECT1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3156                           
  3157                           
  3158                           ;main.c: 226:     NUM = num_ascii(PARKH);
  3159  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  3160  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  3161  04F8  083F               	movf	_PARKH,w
  3162  04F9  120A  118A  2290  120A  118A  	fcall	_num_ascii
  3163  04FE  00F3               	movwf	??_LECT1
  3164  04FF  0873               	movf	??_LECT1,w
  3165  0500  1283               	bcf	3,5	;RP0=0, select bank0
  3166  0501  1303               	bcf	3,6	;RP1=0, select bank0
  3167  0502  00BE               	movwf	_NUM
  3168  0503                     l1685:
  3169                           
  3170                           ;main.c: 227:     if (DIA == 1){
  3171  0503  033C               	decf	_DIA,w
  3172  0504  1D03               	btfss	3,2
  3173  0505  2D07               	goto	u441
  3174  0506  2D08               	goto	u440
  3175  0507                     u441:
  3176  0507  2D15               	goto	l1689
  3177  0508                     u440:
  3178  0508                     l1687:
  3179                           
  3180                           ;main.c: 228:         C1 = 0x4C;
  3181  0508  304C               	movlw	76
  3182  0509  00F3               	movwf	??_LECT1
  3183  050A  0873               	movf	??_LECT1,w
  3184  050B  00B9               	movwf	_C1
  3185                           
  3186                           ;main.c: 229:         C2 = 0x75;
  3187  050C  3075               	movlw	117
  3188  050D  00F3               	movwf	??_LECT1
  3189  050E  0873               	movf	??_LECT1,w
  3190  050F  00B8               	movwf	_C2
  3191                           
  3192                           ;main.c: 230:         C3 = 0x6E;
  3193  0510  306E               	movlw	110
  3194  0511  00F3               	movwf	??_LECT1
  3195  0512  0873               	movf	??_LECT1,w
  3196  0513  00B7               	movwf	_C3
  3197                           
  3198                           ;main.c: 231:     }
  3199  0514  2D87               	goto	l152
  3200  0515                     l1689:
  3201  0515  3002               	movlw	2
  3202  0516  063C               	xorwf	_DIA,w
  3203  0517  1D03               	btfss	3,2
  3204  0518  2D1A               	goto	u451
  3205  0519  2D1B               	goto	u450
  3206  051A                     u451:
  3207  051A  2D28               	goto	l1693
  3208  051B                     u450:
  3209  051B                     l1691:
  3210                           
  3211                           ;main.c: 233:         C1 = 0x4D;
  3212  051B  304D               	movlw	77
  3213  051C  00F3               	movwf	??_LECT1
  3214  051D  0873               	movf	??_LECT1,w
  3215  051E  00B9               	movwf	_C1
  3216                           
  3217                           ;main.c: 234:         C2 = 0x61;
  3218  051F  3061               	movlw	97
  3219  0520  00F3               	movwf	??_LECT1
  3220  0521  0873               	movf	??_LECT1,w
  3221  0522  00B8               	movwf	_C2
  3222                           
  3223                           ;main.c: 235:         C3 = 0x72;
  3224  0523  3072               	movlw	114
  3225  0524  00F3               	movwf	??_LECT1
  3226  0525  0873               	movf	??_LECT1,w
  3227  0526  00B7               	movwf	_C3
  3228                           
  3229                           ;main.c: 236:     }
  3230  0527  2D87               	goto	l152
  3231  0528                     l1693:
  3232  0528  3003               	movlw	3
  3233  0529  063C               	xorwf	_DIA,w
  3234  052A  1D03               	btfss	3,2
  3235  052B  2D2D               	goto	u461
  3236  052C  2D2E               	goto	u460
  3237  052D                     u461:
  3238  052D  2D3B               	goto	l1697
  3239  052E                     u460:
  3240  052E                     l1695:
  3241                           
  3242                           ;main.c: 238:         C1 = 0x4D;
  3243  052E  304D               	movlw	77
  3244  052F  00F3               	movwf	??_LECT1
  3245  0530  0873               	movf	??_LECT1,w
  3246  0531  00B9               	movwf	_C1
  3247                           
  3248                           ;main.c: 239:         C2 = 0x69;
  3249  0532  3069               	movlw	105
  3250  0533  00F3               	movwf	??_LECT1
  3251  0534  0873               	movf	??_LECT1,w
  3252  0535  00B8               	movwf	_C2
  3253                           
  3254                           ;main.c: 240:         C3 = 0x65;
  3255  0536  3065               	movlw	101
  3256  0537  00F3               	movwf	??_LECT1
  3257  0538  0873               	movf	??_LECT1,w
  3258  0539  00B7               	movwf	_C3
  3259                           
  3260                           ;main.c: 241:     }
  3261  053A  2D87               	goto	l152
  3262  053B                     l1697:
  3263  053B  3004               	movlw	4
  3264  053C  063C               	xorwf	_DIA,w
  3265  053D  1D03               	btfss	3,2
  3266  053E  2D40               	goto	u471
  3267  053F  2D41               	goto	u470
  3268  0540                     u471:
  3269  0540  2D4E               	goto	l1701
  3270  0541                     u470:
  3271  0541                     l1699:
  3272                           
  3273                           ;main.c: 243:         C1 = 0x4A;
  3274  0541  304A               	movlw	74
  3275  0542  00F3               	movwf	??_LECT1
  3276  0543  0873               	movf	??_LECT1,w
  3277  0544  00B9               	movwf	_C1
  3278                           
  3279                           ;main.c: 244:         C2 = 0x75;
  3280  0545  3075               	movlw	117
  3281  0546  00F3               	movwf	??_LECT1
  3282  0547  0873               	movf	??_LECT1,w
  3283  0548  00B8               	movwf	_C2
  3284                           
  3285                           ;main.c: 245:         C3 = 0x65;
  3286  0549  3065               	movlw	101
  3287  054A  00F3               	movwf	??_LECT1
  3288  054B  0873               	movf	??_LECT1,w
  3289  054C  00B7               	movwf	_C3
  3290                           
  3291                           ;main.c: 246:     }
  3292  054D  2D87               	goto	l152
  3293  054E                     l1701:
  3294  054E  3005               	movlw	5
  3295  054F  063C               	xorwf	_DIA,w
  3296  0550  1D03               	btfss	3,2
  3297  0551  2D53               	goto	u481
  3298  0552  2D54               	goto	u480
  3299  0553                     u481:
  3300  0553  2D61               	goto	l1705
  3301  0554                     u480:
  3302  0554                     l1703:
  3303                           
  3304                           ;main.c: 248:         C1 = 0x56;
  3305  0554  3056               	movlw	86
  3306  0555  00F3               	movwf	??_LECT1
  3307  0556  0873               	movf	??_LECT1,w
  3308  0557  00B9               	movwf	_C1
  3309                           
  3310                           ;main.c: 249:         C2 = 0x69;
  3311  0558  3069               	movlw	105
  3312  0559  00F3               	movwf	??_LECT1
  3313  055A  0873               	movf	??_LECT1,w
  3314  055B  00B8               	movwf	_C2
  3315                           
  3316                           ;main.c: 250:         C3 = 0x65;
  3317  055C  3065               	movlw	101
  3318  055D  00F3               	movwf	??_LECT1
  3319  055E  0873               	movf	??_LECT1,w
  3320  055F  00B7               	movwf	_C3
  3321                           
  3322                           ;main.c: 251:     }
  3323  0560  2D87               	goto	l152
  3324  0561                     l1705:
  3325  0561  3006               	movlw	6
  3326  0562  063C               	xorwf	_DIA,w
  3327  0563  1D03               	btfss	3,2
  3328  0564  2D66               	goto	u491
  3329  0565  2D67               	goto	u490
  3330  0566                     u491:
  3331  0566  2D74               	goto	l1709
  3332  0567                     u490:
  3333  0567                     l1707:
  3334                           
  3335                           ;main.c: 253:         C1 = 0x53;
  3336  0567  3053               	movlw	83
  3337  0568  00F3               	movwf	??_LECT1
  3338  0569  0873               	movf	??_LECT1,w
  3339  056A  00B9               	movwf	_C1
  3340                           
  3341                           ;main.c: 254:         C2 = 0x61;
  3342  056B  3061               	movlw	97
  3343  056C  00F3               	movwf	??_LECT1
  3344  056D  0873               	movf	??_LECT1,w
  3345  056E  00B8               	movwf	_C2
  3346                           
  3347                           ;main.c: 255:         C3 = 0x62;
  3348  056F  3062               	movlw	98
  3349  0570  00F3               	movwf	??_LECT1
  3350  0571  0873               	movf	??_LECT1,w
  3351  0572  00B7               	movwf	_C3
  3352                           
  3353                           ;main.c: 256:     }
  3354  0573  2D87               	goto	l152
  3355  0574                     l1709:
  3356  0574  3007               	movlw	7
  3357  0575  063C               	xorwf	_DIA,w
  3358  0576  1D03               	btfss	3,2
  3359  0577  2D79               	goto	u501
  3360  0578  2D7A               	goto	u500
  3361  0579                     u501:
  3362  0579  2D87               	goto	l158
  3363  057A                     u500:
  3364  057A                     l1711:
  3365                           
  3366                           ;main.c: 258:         C1 = 0x44;
  3367  057A  3044               	movlw	68
  3368  057B  00F3               	movwf	??_LECT1
  3369  057C  0873               	movf	??_LECT1,w
  3370  057D  00B9               	movwf	_C1
  3371                           
  3372                           ;main.c: 259:         C2 = 0x6F;
  3373  057E  306F               	movlw	111
  3374  057F  00F3               	movwf	??_LECT1
  3375  0580  0873               	movf	??_LECT1,w
  3376  0581  00B8               	movwf	_C2
  3377                           
  3378                           ;main.c: 260:         C3 = 0x6D;
  3379  0582  306D               	movlw	109
  3380  0583  00F3               	movwf	??_LECT1
  3381  0584  0873               	movf	??_LECT1,w
  3382  0585  00B7               	movwf	_C3
  3383  0586  2D87               	goto	l152
  3384  0587                     l158:
  3385  0587                     l152:
  3386                           
  3387                           ;main.c: 262:     if (HORA<10){
  3388  0587  300A               	movlw	10
  3389  0588  023B               	subwf	_HORA,w
  3390  0589  1803               	skipnc
  3391  058A  2D8C               	goto	u511
  3392  058B  2D8D               	goto	u510
  3393  058C                     u511:
  3394  058C  2D9D               	goto	l1717
  3395  058D                     u510:
  3396  058D                     l1713:
  3397                           
  3398                           ;main.c: 263:         DH = 0x30;
  3399  058D  3030               	movlw	48
  3400  058E  00F3               	movwf	??_LECT1
  3401  058F  0873               	movf	??_LECT1,w
  3402  0590  00B5               	movwf	_DH
  3403  0591                     l1715:
  3404                           
  3405                           ;main.c: 264:         UH = num_ascii(HORA);
  3406  0591  083B               	movf	_HORA,w
  3407  0592  120A  118A  2290  120A  118A  	fcall	_num_ascii
  3408  0597  00F3               	movwf	??_LECT1
  3409  0598  0873               	movf	??_LECT1,w
  3410  0599  1283               	bcf	3,5	;RP0=0, select bank0
  3411  059A  1303               	bcf	3,6	;RP1=0, select bank0
  3412  059B  00B6               	movwf	_UH
  3413                           
  3414                           ;main.c: 265:     }
  3415  059C  2DCC               	goto	l1731
  3416  059D                     l1717:
  3417  059D  301A               	movlw	26
  3418  059E  023B               	subwf	_HORA,w
  3419  059F  1803               	skipnc
  3420  05A0  2DA2               	goto	u521
  3421  05A1  2DA3               	goto	u520
  3422  05A2                     u521:
  3423  05A2  2DB8               	goto	l1725
  3424  05A3                     u520:
  3425  05A3                     l1719:
  3426                           
  3427                           ;main.c: 267:         DH = 0x31;
  3428  05A3  3031               	movlw	49
  3429  05A4  00F3               	movwf	??_LECT1
  3430  05A5  0873               	movf	??_LECT1,w
  3431  05A6  00B5               	movwf	_DH
  3432  05A7                     l1721:
  3433                           
  3434                           ;main.c: 268:         con = HORA-16;
  3435  05A7  083B               	movf	_HORA,w
  3436  05A8  3EF0               	addlw	240
  3437  05A9  00F3               	movwf	??_LECT1
  3438  05AA  0873               	movf	??_LECT1,w
  3439  05AB  00B2               	movwf	_con
  3440  05AC                     l1723:
  3441                           
  3442                           ;main.c: 269:         UH = num_ascii(con);
  3443  05AC  0832               	movf	_con,w
  3444  05AD  120A  118A  2290  120A  118A  	fcall	_num_ascii
  3445  05B2  00F3               	movwf	??_LECT1
  3446  05B3  0873               	movf	??_LECT1,w
  3447  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  3448  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  3449  05B6  00B6               	movwf	_UH
  3450                           
  3451                           ;main.c: 270:     }
  3452  05B7  2DCC               	goto	l1731
  3453  05B8                     l1725:
  3454                           
  3455                           ;main.c: 272:         DH = 0x32;
  3456  05B8  3032               	movlw	50
  3457  05B9  00F3               	movwf	??_LECT1
  3458  05BA  0873               	movf	??_LECT1,w
  3459  05BB  00B5               	movwf	_DH
  3460  05BC                     l1727:
  3461                           
  3462                           ;main.c: 273:         con = HORA-32;
  3463  05BC  083B               	movf	_HORA,w
  3464  05BD  3EE0               	addlw	224
  3465  05BE  00F3               	movwf	??_LECT1
  3466  05BF  0873               	movf	??_LECT1,w
  3467  05C0  00B2               	movwf	_con
  3468  05C1                     l1729:
  3469                           
  3470                           ;main.c: 274:         UH = num_ascii(con);
  3471  05C1  0832               	movf	_con,w
  3472  05C2  120A  118A  2290  120A  118A  	fcall	_num_ascii
  3473  05C7  00F3               	movwf	??_LECT1
  3474  05C8  0873               	movf	??_LECT1,w
  3475  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  3476  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  3477  05CB  00B6               	movwf	_UH
  3478  05CC                     l1731:
  3479                           
  3480                           ;main.c: 276:     if (MIN<10){
  3481  05CC  300A               	movlw	10
  3482  05CD  023A               	subwf	_MIN,w
  3483  05CE  1803               	skipnc
  3484  05CF  2DD1               	goto	u531
  3485  05D0  2DD2               	goto	u530
  3486  05D1                     u531:
  3487  05D1  2DE2               	goto	l1737
  3488  05D2                     u530:
  3489  05D2                     l1733:
  3490                           
  3491                           ;main.c: 277:         DM = 0x30;
  3492  05D2  3030               	movlw	48
  3493  05D3  00F3               	movwf	??_LECT1
  3494  05D4  0873               	movf	??_LECT1,w
  3495  05D5  00B3               	movwf	_DM
  3496  05D6                     l1735:
  3497                           
  3498                           ;main.c: 278:         UM = num_ascii(MIN);
  3499  05D6  083A               	movf	_MIN,w
  3500  05D7  120A  118A  2290  120A  118A  	fcall	_num_ascii
  3501  05DC  00F3               	movwf	??_LECT1
  3502  05DD  0873               	movf	??_LECT1,w
  3503  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  3504  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  3505  05E0  00B4               	movwf	_UM
  3506                           
  3507                           ;main.c: 279:     }
  3508  05E1  2E69               	goto	l179
  3509  05E2                     l1737:
  3510  05E2  301A               	movlw	26
  3511  05E3  023A               	subwf	_MIN,w
  3512  05E4  1803               	skipnc
  3513  05E5  2DE7               	goto	u541
  3514  05E6  2DE8               	goto	u540
  3515  05E7                     u541:
  3516  05E7  2DFD               	goto	l1745
  3517  05E8                     u540:
  3518  05E8                     l1739:
  3519                           
  3520                           ;main.c: 281:         DM = 0x31;
  3521  05E8  3031               	movlw	49
  3522  05E9  00F3               	movwf	??_LECT1
  3523  05EA  0873               	movf	??_LECT1,w
  3524  05EB  00B3               	movwf	_DM
  3525  05EC                     l1741:
  3526                           
  3527                           ;main.c: 282:         con = MIN-16;
  3528  05EC  083A               	movf	_MIN,w
  3529  05ED  3EF0               	addlw	240
  3530  05EE  00F3               	movwf	??_LECT1
  3531  05EF  0873               	movf	??_LECT1,w
  3532  05F0  00B2               	movwf	_con
  3533  05F1                     l1743:
  3534                           
  3535                           ;main.c: 283:         UM = num_ascii(con);
  3536  05F1  0832               	movf	_con,w
  3537  05F2  120A  118A  2290  120A  118A  	fcall	_num_ascii
  3538  05F7  00F3               	movwf	??_LECT1
  3539  05F8  0873               	movf	??_LECT1,w
  3540  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  3541  05FA  1303               	bcf	3,6	;RP1=0, select bank0
  3542  05FB  00B4               	movwf	_UM
  3543                           
  3544                           ;main.c: 284:     }
  3545  05FC  2E69               	goto	l179
  3546  05FD                     l1745:
  3547  05FD  302A               	movlw	42
  3548  05FE  023A               	subwf	_MIN,w
  3549  05FF  1803               	skipnc
  3550  0600  2E02               	goto	u551
  3551  0601  2E03               	goto	u550
  3552  0602                     u551:
  3553  0602  2E18               	goto	l1753
  3554  0603                     u550:
  3555  0603                     l1747:
  3556                           
  3557                           ;main.c: 286:         DM = 0x32;
  3558  0603  3032               	movlw	50
  3559  0604  00F3               	movwf	??_LECT1
  3560  0605  0873               	movf	??_LECT1,w
  3561  0606  00B3               	movwf	_DM
  3562  0607                     l1749:
  3563                           
  3564                           ;main.c: 287:         con = MIN-32;
  3565  0607  083A               	movf	_MIN,w
  3566  0608  3EE0               	addlw	224
  3567  0609  00F3               	movwf	??_LECT1
  3568  060A  0873               	movf	??_LECT1,w
  3569  060B  00B2               	movwf	_con
  3570  060C                     l1751:
  3571                           
  3572                           ;main.c: 288:         UM = num_ascii(con);
  3573  060C  0832               	movf	_con,w
  3574  060D  120A  118A  2290  120A  118A  	fcall	_num_ascii
  3575  0612  00F3               	movwf	??_LECT1
  3576  0613  0873               	movf	??_LECT1,w
  3577  0614  1283               	bcf	3,5	;RP0=0, select bank0
  3578  0615  1303               	bcf	3,6	;RP1=0, select bank0
  3579  0616  00B4               	movwf	_UM
  3580                           
  3581                           ;main.c: 289:     }
  3582  0617  2E69               	goto	l179
  3583  0618                     l1753:
  3584  0618  303A               	movlw	58
  3585  0619  023A               	subwf	_MIN,w
  3586  061A  1803               	skipnc
  3587  061B  2E1D               	goto	u561
  3588  061C  2E1E               	goto	u560
  3589  061D                     u561:
  3590  061D  2E33               	goto	l1761
  3591  061E                     u560:
  3592  061E                     l1755:
  3593                           
  3594                           ;main.c: 291:         DM = 0x33;
  3595  061E  3033               	movlw	51
  3596  061F  00F3               	movwf	??_LECT1
  3597  0620  0873               	movf	??_LECT1,w
  3598  0621  00B3               	movwf	_DM
  3599  0622                     l1757:
  3600                           
  3601                           ;main.c: 292:         con = MIN-32-16;
  3602  0622  083A               	movf	_MIN,w
  3603  0623  3ED0               	addlw	208
  3604  0624  00F3               	movwf	??_LECT1
  3605  0625  0873               	movf	??_LECT1,w
  3606  0626  00B2               	movwf	_con
  3607  0627                     l1759:
  3608                           
  3609                           ;main.c: 293:         UM = num_ascii(con);
  3610  0627  0832               	movf	_con,w
  3611  0628  120A  118A  2290  120A  118A  	fcall	_num_ascii
  3612  062D  00F3               	movwf	??_LECT1
  3613  062E  0873               	movf	??_LECT1,w
  3614  062F  1283               	bcf	3,5	;RP0=0, select bank0
  3615  0630  1303               	bcf	3,6	;RP1=0, select bank0
  3616  0631  00B4               	movwf	_UM
  3617                           
  3618                           ;main.c: 294:     }
  3619  0632  2E69               	goto	l179
  3620  0633                     l1761:
  3621  0633  304A               	movlw	74
  3622  0634  023A               	subwf	_MIN,w
  3623  0635  1803               	skipnc
  3624  0636  2E38               	goto	u571
  3625  0637  2E39               	goto	u570
  3626  0638                     u571:
  3627  0638  2E4E               	goto	l1769
  3628  0639                     u570:
  3629  0639                     l1763:
  3630                           
  3631                           ;main.c: 296:         DM = 0x34;
  3632  0639  3034               	movlw	52
  3633  063A  00F3               	movwf	??_LECT1
  3634  063B  0873               	movf	??_LECT1,w
  3635  063C  00B3               	movwf	_DM
  3636  063D                     l1765:
  3637                           
  3638                           ;main.c: 297:         con = MIN-64;
  3639  063D  083A               	movf	_MIN,w
  3640  063E  3EC0               	addlw	192
  3641  063F  00F3               	movwf	??_LECT1
  3642  0640  0873               	movf	??_LECT1,w
  3643  0641  00B2               	movwf	_con
  3644  0642                     l1767:
  3645                           
  3646                           ;main.c: 298:         UM = num_ascii(con);
  3647  0642  0832               	movf	_con,w
  3648  0643  120A  118A  2290  120A  118A  	fcall	_num_ascii
  3649  0648  00F3               	movwf	??_LECT1
  3650  0649  0873               	movf	??_LECT1,w
  3651  064A  1283               	bcf	3,5	;RP0=0, select bank0
  3652  064B  1303               	bcf	3,6	;RP1=0, select bank0
  3653  064C  00B4               	movwf	_UM
  3654                           
  3655                           ;main.c: 299:     }
  3656  064D  2E69               	goto	l179
  3657  064E                     l1769:
  3658  064E  305A               	movlw	90
  3659  064F  023A               	subwf	_MIN,w
  3660  0650  1803               	skipnc
  3661  0651  2E53               	goto	u581
  3662  0652  2E54               	goto	u580
  3663  0653                     u581:
  3664  0653  2E69               	goto	l173
  3665  0654                     u580:
  3666  0654                     l1771:
  3667                           
  3668                           ;main.c: 301:         DM = 0x35;
  3669  0654  3035               	movlw	53
  3670  0655  00F3               	movwf	??_LECT1
  3671  0656  0873               	movf	??_LECT1,w
  3672  0657  00B3               	movwf	_DM
  3673  0658                     l1773:
  3674                           
  3675                           ;main.c: 302:         con = MIN-64-16;
  3676  0658  083A               	movf	_MIN,w
  3677  0659  3EB0               	addlw	176
  3678  065A  00F3               	movwf	??_LECT1
  3679  065B  0873               	movf	??_LECT1,w
  3680  065C  00B2               	movwf	_con
  3681  065D                     l1775:
  3682                           
  3683                           ;main.c: 303:         UM = num_ascii(con);
  3684  065D  0832               	movf	_con,w
  3685  065E  120A  118A  2290  120A  118A  	fcall	_num_ascii
  3686  0663  00F3               	movwf	??_LECT1
  3687  0664  0873               	movf	??_LECT1,w
  3688  0665  1283               	bcf	3,5	;RP0=0, select bank0
  3689  0666  1303               	bcf	3,6	;RP1=0, select bank0
  3690  0667  00B4               	movwf	_UM
  3691  0668  2E69               	goto	l179
  3692  0669                     l173:
  3693  0669                     l179:
  3694  0669  0008               	return
  3695  066A                     __end_of_LECT1:
  3696                           
  3697                           	psect	text19
  3698  0290                     __ptext19:	
  3699 ;; *************** function _num_ascii *****************
  3700 ;; Defined at:
  3701 ;;		line 3 in file "ASCII.c"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;  num             1    wreg     unsigned char 
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;  num             1    2[COMMON] unsigned char 
  3706 ;; Return value:  Size  Location     Type
  3707 ;;                  1    wreg      unsigned char 
  3708 ;; Registers used:
  3709 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3710 ;; Tracked objects:
  3711 ;;		On entry : 0/0
  3712 ;;		On exit  : 0/0
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3715 ;;      Params:         0       0       0       0       0
  3716 ;;      Locals:         1       0       0       0       0
  3717 ;;      Temps:          2       0       0       0       0
  3718 ;;      Totals:         3       0       0       0       0
  3719 ;;Total ram usage:        3 bytes
  3720 ;; Hardware stack levels used: 1
  3721 ;; This function calls:
  3722 ;;		Nothing
  3723 ;; This function is called by:
  3724 ;;		_LECT1
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727                           
  3728                           
  3729                           ;psect for function _num_ascii
  3730  0290                     _num_ascii:
  3731                           
  3732                           ;incstack = 0
  3733                           ; Regs used in _num_ascii: [wreg-fsr0h+status,2+status,0]
  3734                           ;num_ascii@num stored from wreg
  3735  0290  00F2               	movwf	num_ascii@num
  3736  0291                     l1481:
  3737                           
  3738                           ;ASCII.c: 4:  switch(num){
  3739  0291  2AA6               	goto	l1551
  3740  0292                     l1483:
  3741                           
  3742                           ;ASCII.c: 6:   return 0x30;
  3743  0292  3030               	movlw	48
  3744  0293  2ACE               	goto	l234
  3745  0294                     l1495:
  3746                           
  3747                           ;ASCII.c: 14:   return 0x31;
  3748  0294  3031               	movlw	49
  3749  0295  2ACE               	goto	l234
  3750  0296                     l1501:
  3751                           
  3752                           ;ASCII.c: 18:   return 0x32;
  3753  0296  3032               	movlw	50
  3754  0297  2ACE               	goto	l234
  3755  0298                     l1507:
  3756                           
  3757                           ;ASCII.c: 22:   return 0x33;
  3758  0298  3033               	movlw	51
  3759  0299  2ACE               	goto	l234
  3760  029A                     l1513:
  3761                           
  3762                           ;ASCII.c: 26:   return 0x34;
  3763  029A  3034               	movlw	52
  3764  029B  2ACE               	goto	l234
  3765  029C                     l1519:
  3766                           
  3767                           ;ASCII.c: 30:   return 0x35;
  3768  029C  3035               	movlw	53
  3769  029D  2ACE               	goto	l234
  3770  029E                     l1525:
  3771                           
  3772                           ;ASCII.c: 34:   return 0x36;
  3773  029E  3036               	movlw	54
  3774  029F  2ACE               	goto	l234
  3775  02A0                     l1531:
  3776                           
  3777                           ;ASCII.c: 38:   return 0x37;
  3778  02A0  3037               	movlw	55
  3779  02A1  2ACE               	goto	l234
  3780  02A2                     l1537:
  3781                           
  3782                           ;ASCII.c: 42:   return 0x38;
  3783  02A2  3038               	movlw	56
  3784  02A3  2ACE               	goto	l234
  3785  02A4                     l1543:
  3786                           
  3787                           ;ASCII.c: 46:   return 0x39;
  3788  02A4  3039               	movlw	57
  3789  02A5  2ACE               	goto	l234
  3790  02A6                     l1551:
  3791  02A6  0872               	movf	num_ascii@num,w
  3792  02A7  00F0               	movwf	??_num_ascii
  3793  02A8  01F1               	clrf	??_num_ascii+1
  3794                           
  3795                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3796                           ; Switch size 1, requested type "simple"
  3797                           ; Number of cases is 1, Range of values is 0 to 0
  3798                           ; switch strategies available:
  3799                           ; Name         Instructions Cycles
  3800                           ; simple_byte            4     3 (average)
  3801                           ; direct_byte           11     8 (fixed)
  3802                           ; jumptable            260     6 (fixed)
  3803                           ;	Chosen strategy is simple_byte
  3804  02A9  0871               	movf	??_num_ascii+1,w
  3805  02AA  3A00               	xorlw	0	; case 0
  3806  02AB  1903               	skipnz
  3807  02AC  2AAE               	goto	l1921
  3808  02AD  2A92               	goto	l1483
  3809  02AE                     l1921:
  3810                           
  3811                           ; Switch size 1, requested type "simple"
  3812                           ; Number of cases is 10, Range of values is 0 to 9
  3813                           ; switch strategies available:
  3814                           ; Name         Instructions Cycles
  3815                           ; simple_byte           31    16 (average)
  3816                           ; direct_byte           38     8 (fixed)
  3817                           ; jumptable            260     6 (fixed)
  3818                           ;	Chosen strategy is simple_byte
  3819  02AE  0870               	movf	??_num_ascii,w
  3820  02AF  3A00               	xorlw	0	; case 0
  3821  02B0  1903               	skipnz
  3822  02B1  2A92               	goto	l1483
  3823  02B2  3A01               	xorlw	1	; case 1
  3824  02B3  1903               	skipnz
  3825  02B4  2A94               	goto	l1495
  3826  02B5  3A03               	xorlw	3	; case 2
  3827  02B6  1903               	skipnz
  3828  02B7  2A96               	goto	l1501
  3829  02B8  3A01               	xorlw	1	; case 3
  3830  02B9  1903               	skipnz
  3831  02BA  2A98               	goto	l1507
  3832  02BB  3A07               	xorlw	7	; case 4
  3833  02BC  1903               	skipnz
  3834  02BD  2A9A               	goto	l1513
  3835  02BE  3A01               	xorlw	1	; case 5
  3836  02BF  1903               	skipnz
  3837  02C0  2A9C               	goto	l1519
  3838  02C1  3A03               	xorlw	3	; case 6
  3839  02C2  1903               	skipnz
  3840  02C3  2A9E               	goto	l1525
  3841  02C4  3A01               	xorlw	1	; case 7
  3842  02C5  1903               	skipnz
  3843  02C6  2AA0               	goto	l1531
  3844  02C7  3A0F               	xorlw	15	; case 8
  3845  02C8  1903               	skipnz
  3846  02C9  2AA2               	goto	l1537
  3847  02CA  3A01               	xorlw	1	; case 9
  3848  02CB  1903               	skipnz
  3849  02CC  2AA4               	goto	l1543
  3850  02CD  2A92               	goto	l1483
  3851  02CE                     l234:
  3852  02CE  0008               	return
  3853  02CF                     __end_of_num_ascii:
  3854  007E                     btemp	set	126	;btemp
  3855  007E                     wtemp0	set	126
  3856                           
  3857                           	psect	config
  3858                           
  3859                           ;Config register CONFIG1 @ 0x2007
  3860                           ;	Oscillator Selection bits
  3861                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3862                           ;	Watchdog Timer Enable bit
  3863                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3864                           ;	Power-up Timer Enable bit
  3865                           ;	PWRTE = OFF, PWRT disabled
  3866                           ;	RE3/MCLR pin function select bit
  3867                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3868                           ;	Code Protection bit
  3869                           ;	CP = OFF, Program memory code protection is disabled
  3870                           ;	Data Code Protection bit
  3871                           ;	CPD = OFF, Data memory code protection is disabled
  3872                           ;	Brown Out Reset Selection bits
  3873                           ;	BOREN = OFF, BOR disabled
  3874                           ;	Internal External Switchover bit
  3875                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3876                           ;	Fail-Safe Clock Monitor Enabled bit
  3877                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3878                           ;	Low Voltage Programming Enable bit
  3879                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3880                           ;	In-Circuit Debugger Mode bit
  3881                           ;	DEBUG = 0x1, unprogrammed default
  3882  2007                     	org	8199
  3883  2007  20D4               	dw	8404
  3884                           
  3885                           ;Config register CONFIG2 @ 0x2008
  3886                           ;	Brown-out Reset Selection bit
  3887                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3888                           ;	Flash Program Memory Self Write Enable bits
  3889                           ;	WRT = OFF, Write protection off
  3890  2008                     	org	8200
  3891  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     18      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> conver1@temporal(BANK0[16]), conver@temporal(BANK0[16]), 

    sp__conver	PTR const unsigned char  size(1) Largest target is 16
		 -> conver@temporal(BANK0[16]), 

    sp__conver1	PTR const unsigned char  size(1) Largest target is 16
		 -> conver1@temporal(BANK0[16]), 


Critical Paths under _main in COMMON

    _I2C_Master_Init->___lldiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _LECT1->_num_ascii

Critical Paths under _main in BANK0

    _main->_conver
    _main->_conver1
    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6646
                                             16 BANK0      2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                              _LECT1
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                             _conver
                            _conver1
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0    2857
                                              8 BANK0      2     2      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _osc_config
 ---------------------------------------------------------------------------------
 (2) _osc_config                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1846
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     577
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _conver1                                             17    17      0     385
                                              0 COMMON     1     1      0
                                              0 BANK0     16    16      0
 ---------------------------------------------------------------------------------
 (1) _conver                                              17    17      0     385
                                              0 COMMON     1     1      0
                                              0 BANK0     16    16      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     200
                                              3 COMMON     4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     330
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LECT1                                                1     1      0      22
                                              3 COMMON     1     1      0
                          _num_ascii
 ---------------------------------------------------------------------------------
 (2) _num_ascii                                            3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _LECT1
     _num_ascii
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _conver
   _conver1
   _setup
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Read
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _osc_config

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     12      20       5       40.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2E      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Aug 19 22:09:03 2021

                       _C1 0039                         _C2 0038                         _C3 0037  
                       l32 015C                         l50 0218                         l35 0168  
                       l51 021B                         l52 0220                         l44 0151  
                       _DH 0035                         l29 028F                         l38 0148  
                       l47 015B                         _DM 0033                         _UH 0036  
                       _UM 0034                        l202 0194                        l211 01F2  
                      l214 01AD                        l142 04F5                        l223 01CE  
                      l152 0587                        l217 017C                        l145 0312  
                      l234 02CE                        l148 0356                        l173 0669  
                      l158 0587                        l190 0257                        l179 0669  
                      l199 013F                        l367 03BC                        _DIA 003C  
                      _GIE 005F                        u300 0162                        u301 0161  
                      u310 0168                        u311 0167                        u320 0367  
                      u400 0214                        u321 0366                        u401 0213  
                      u410 01D5                        u411 01D4                        u500 057A  
                      u420 01E7                        u340 037B                        _MIN 003A  
                      u501 0579                        u421 01E6                        u341 037A  
                      u510 058D                        u430 01CE                        u511 058C  
                      u431 01CD                        u335 036C                        u520 05A3  
                      u440 0508                        u360 0396                        u521 05A2  
                      u441 0507                        u361 0395                        u530 05D2  
                      u450 051B                        u531 05D1                        u451 051A  
                      u355 037D                        u540 05E8                        u460 052E  
                      u380 03B4                        u541 05E7                        u461 052D  
                      u381 03B3                        u365 0392                        u550 0603  
                      u470 0541                        u390 026F                        u551 0602  
                      u471 0540                        u375 03A6                        u607 06EA  
                      u560 061E                        u480 0554                        u561 061D  
                      u481 0553                        u617 0711                        u570 0639  
                      u490 0567                        u571 0638                        u491 0566  
                      u395 026A                        u707 0494                        u627 073D  
                      u580 0654                        u581 0653                        u717 04C4  
                      u637 0764                        u727 04F0                        u647 0790  
                      u737 0177                        u657 07B7                        u747 018D  
                      u667 07E3                        u677 040C                        u597 06BE  
                      u687 0438                        _NUM 003E                        u697 0468  
                      _con 0032                        fsr0 0004                        indf 0000  
                     l1401 0384                       l1403 0396                       l1411 03B4  
                     l1501 0296                       l1405 03A4                       l1421 028C  
                     l1407 03A5                       l1423 028D                       l1415 0258  
                     l1431 0149                       l1513 029A                       l1409 03AE  
                     l1425 028E                       l1417 025C                       l1441 01F8  
                     l1433 014E                       l1601 0416                       l1531 02A0  
                     l1507 0298                       l1419 025F                       l1451 021C  
                     l1443 0200                       l1427 0140                       l1435 0152  
                     l1611 0442                       l1603 041F                       l1525 029E  
                     l1701 054E                       l1445 0209                       l1429 0145  
                     l1437 0157                       l1461 022B                       l1621 046D  
                     l1613 044B                       l1605 042D                       l1543 02A4  
                     l1519 029C                       l1551 02A6                       l1711 057A  
                     l1703 0554                       l1391 0357                       l1447 020E  
                     l1439 01F3                       l1471 023F                       l1463 0231  
                     l1455 0222                       l1631 0499                       l1623 0472  
                     l1615 0454                       l1607 0432                       l1537 02A2  
                     l1481 0291                       l1721 05A7                       l1713 058D  
                     l1705 0561                       l1561 0187                       l1393 0367  
                     l1385 015C                       l1449 0214                       l1465 0233  
                     l1457 0223                       l1641 04BE                       l1633 049E  
                     l1625 047B                       l1617 045D                       l1609 043D  
                     l1801 06B8                       l1483 0292                       l1723 05AC  
                     l1731 05CC                       l1715 0591                       l1707 0567  
                     l1563 0188                       l1571 0170                       l1395 036A  
                     l1387 0162                       l1467 0239                       l1459 0229  
                     l1475 0241                       l1651 04EA                       l1643 04C9  
                     l1635 04A7                       l1627 0489                       l1619 0462  
                     l1811 06E4                       l1803 06C3                       l1741 05EC  
                     l1733 05D2                       l1725 05B8                       l1717 059D  
                     l1709 0574                       l1389 013B                       l1565 0189  
                     l1557 017E                       l1653 0195                       l1661 01E1  
                     l1573 0173                       l1397 0377                       l1469 023B  
                     l1645 04CE                       l1637 04B0                       l1629 048E  
                     l1581 03BD                       l1821 070B                       l1813 06EF  
                     l1805 06C8                       l1495 0294                       l1751 060C  
                     l1743 05F1                       l1735 05D6                       l1727 05BC  
                     l1719 05A3                       l1567 0191                       l1559 0184  
                     l1663 01E7                       l1655 01D0                       l1575 0174  
                     l1671 01AF                       l1399 037B                       l1647 04D7  
                     l1639 04B9                       l1591 03EF                       l1583 03CC  
                     l1831 0737                       l1823 0716                       l1815 06F4  
                     l1807 06D1                       l1921 02AE                       l1761 0633  
                     l1753 0618                       l1745 05FD                       l1737 05E2  
                     l1729 05C1                       l1665 01EC                       l1657 01D5  
                     l1577 0175                       l1569 016A                       l1673 01B2  
                     l1649 04E5                       l1593 03F8                       l1585 03D2  
                     l1841 075E                       l1833 0742                       l1825 071B  
                     l1817 06FD                       l1809 06DF                       l1771 0654  
                     l1763 0639                       l1755 061E                       l1747 0603  
                     l1739 05E8                       l1691 051B                       l1683 04F6  
                     l1659 01DA                       l1579 0179                       l1675 01BD  
                     l1667 0313                       l1595 0401                       l1587 03E1  
                     l1851 078A                       l1843 0769                       l1835 0747  
                     l1827 0724                       l1819 0706                       l1773 0658  
                     l1765 063D                       l1757 0622                       l1749 0607  
                     l1693 0528                       l1685 0503                       l1677 01C3  
                     l1597 0406                       l1589 03E6                       l1861 07B1  
                     l1853 0795                       l1845 076E                       l1837 0750  
                     l1829 0732                       l1781 066A                       l1775 065D  
                     l1767 0642                       l1759 0627                       l1695 052E  
                     l1687 0508                       l1679 02CF                       l1919 0249  
                     l1599 0411                       l1871 07DD                       l1863 07BC  
                     l1855 079A                       l1847 0777                       l1839 0759  
                     l1791 0698                       l1783 066F                       l1769 064E  
                     l1697 053B                       l1689 0515                       l1865 07C1  
                     l1857 07A3                       l1849 0785                       l1793 069D  
                     l1785 0674                       l1699 0541                       l1867 07CA  
                     l1859 07AC                       l1795 06A2                       l1787 0686  
                     l1869 07D8                       l1797 06AB                       l1789 068E  
                     l1799 06B3                       _HORA 003B                       _PEIE 005E  
        ?_Lcd_Write_String 0070                       _main 066A                       btemp 007E  
                     start 0000         ??_Lcd_Write_String 0073             osc_config@freq 0072  
          __end_of_Lcd_Cmd 0195            conver1@temporal 0020           ?_I2C_Master_Init 0020  
         ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070                      _ANSEL 0188            __end_of___lldiv 03BD  
                    _LECT1 04F6                      _PARKH 003F                      _PORTA 0005  
                    _PORTB 0006                      _PORTD 0008    __size_of_Lcd_Set_Cursor 0024  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
                    _SSPIE 0463                      _TRISE 0089                      _SSPIF 0063  
          __end_of_conver1 0357                      _setup 03BD                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 01AE           __end_of_Lcd_Port 0140  
          __initialization 07EC               __end_of_main 07EC                     ??_main 0030  
                   ?_LECT1 0070          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070  
       ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072                     _BASURA 003D  
                   ?_setup 0070                     _ANSELH 0189                  ??_Lcd_Cmd 0071  
  __size_of_Lcd_Write_Char 0014                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
                ??___lldiv 0078                     _conver 02CF                  ??_conver1 0070  
          Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0074    __end_of__initialization 07FC  
            __end_of_LECT1 066A             __pcstackCOMMON 0070              __end_of_setup 04F6  
                  ??_LECT1 0073             _Lcd_Set_Cursor 01CF                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                    ??_setup 0028                 __pbssBANK0 0032  
               __pmaintext 066A                    ?_conver 0070  __size_of_Lcd_Write_String 0021  
   __end_of_Lcd_Set_Cursor 01F3         __size_of_num_ascii 003F                 ??_Lcd_Init 0074  
               ??_Lcd_Port 0070                    _SSPCON2 0091                    _SSPSTAT 0094  
           _Lcd_Write_Char 0169                    _Lcd_Cmd 017D                    ___lldiv 0357  
          __size_of_conver 0044            ?_Lcd_Set_Cursor 0074                    __ptext1 03BD  
                  __ptext2 0221                    __ptext3 0152                    __ptext4 0149  
                  __ptext5 0140                    __ptext6 01F3                    __ptext7 015C  
                  __ptext8 0258                    __ptext9 0357                    _conver1 0313  
 __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D  
 __size_of_I2C_Master_Stop 0009     __end_of_Lcd_Write_Char 017D       end_of_initialization 07FC  
               _osc_config 0221          __end_of_num_ascii 02CF  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070            ___lldiv@counter 007D  
         I2C_Master_Init@c 0020           I2C_Master_Read@a 0070                  Lcd_Port@a 0070  
                _PORTEbits 0009                  _TRISCbits 0087            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0076          Lcd_Write_String@i 0074           _Lcd_Write_String 01AE  
           __end_of_conver 0313        start_initialization 07EC          __size_of_Lcd_Init 0019  
        __size_of_Lcd_Port 0006          ??_I2C_Master_Init 0024          ??_I2C_Master_Read 0072  
        ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070                ?_osc_config 0070  
                 ??_conver 0070            Lcd_Write_Char@a 0072                  ___latbits 0002  
            __pcstackBANK0 0020                   ?_Lcd_Cmd 0070           _I2C_Master_Start 0140  
         _I2C_Master_Write 0152           ??_Lcd_Set_Cursor 0075                   ?___lldiv 0070  
                 ?_conver1 0070             __size_of_LECT1 0174        __size_of_osc_config 0037  
           conver@temporal 0020             __size_of_setup 0139                   Lcd_Cmd@a 0073  
                _num_ascii 0290           ??_Lcd_Write_Char 0071                   _Lcd_Init 0195  
                 _Lcd_Port 013A        I2C_Master_Read@temp 0074   __end_of_Lcd_Write_String 01CF  
         __size_of_Lcd_Cmd 0018                 ?_num_ascii 0070           __size_of___lldiv 0066  
         __size_of_conver1 0044            _I2C_Master_Init 0258            _I2C_Master_Read 01F3  
          _I2C_Master_Wait 015C            _I2C_Master_Stop 0149                   __ptext10 0313  
                 __ptext11 02CF                   __ptext12 01AE                   __ptext13 0169  
                 __ptext14 01CF                   __ptext15 0195                   __ptext16 017D  
                 __ptext17 013A                   __ptext18 04F6                   __ptext19 0290  
             ??_osc_config 0070              __size_of_main 0182   __end_of_I2C_Master_Start 0149  
 __end_of_I2C_Master_Write 015C         __end_of_osc_config 0258           ___lldiv@dividend 0074  
             num_ascii@num 0072                 _OSCCONbits 008F                ??_num_ascii 0070  
  __end_of_I2C_Master_Init 0290    __end_of_I2C_Master_Read 0221    __end_of_I2C_Master_Wait 0169  
  __end_of_I2C_Master_Stop 0152         Lcd_Set_Cursor@temp 0077           ___lldiv@quotient 0079  
        I2C_Master_Write@d 0070                _SSPCON2bits 0091  
