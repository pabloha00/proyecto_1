

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Aug 23 21:45:35 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0088                     	;# 
   190  0089                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  008F                     	;# 
   195  0090                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0094                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  0105                     	;# 
   214  0107                     	;# 
   215  0108                     	;# 
   216  0109                     	;# 
   217  010C                     	;# 
   218  010C                     	;# 
   219  010D                     	;# 
   220  010E                     	;# 
   221  010F                     	;# 
   222  0185                     	;# 
   223  0187                     	;# 
   224  0188                     	;# 
   225  0189                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  000E                     	;# 
   243  000E                     	;# 
   244  000F                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001D                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  0081                     	;# 
   264  0085                     	;# 
   265  0086                     	;# 
   266  0087                     	;# 
   267  0088                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  008F                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  0105                     	;# 
   292  0107                     	;# 
   293  0108                     	;# 
   294  0109                     	;# 
   295  010C                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  0185                     	;# 
   301  0187                     	;# 
   302  0188                     	;# 
   303  0189                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0008                     	;# 
   315  0009                     	;# 
   316  000A                     	;# 
   317  000B                     	;# 
   318  000C                     	;# 
   319  000D                     	;# 
   320  000E                     	;# 
   321  000E                     	;# 
   322  000F                     	;# 
   323  0010                     	;# 
   324  0011                     	;# 
   325  0012                     	;# 
   326  0013                     	;# 
   327  0014                     	;# 
   328  0015                     	;# 
   329  0015                     	;# 
   330  0016                     	;# 
   331  0017                     	;# 
   332  0018                     	;# 
   333  0019                     	;# 
   334  001A                     	;# 
   335  001B                     	;# 
   336  001B                     	;# 
   337  001C                     	;# 
   338  001D                     	;# 
   339  001E                     	;# 
   340  001F                     	;# 
   341  0081                     	;# 
   342  0085                     	;# 
   343  0086                     	;# 
   344  0087                     	;# 
   345  0088                     	;# 
   346  0089                     	;# 
   347  008C                     	;# 
   348  008D                     	;# 
   349  008E                     	;# 
   350  008F                     	;# 
   351  0090                     	;# 
   352  0091                     	;# 
   353  0092                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0094                     	;# 
   358  0095                     	;# 
   359  0096                     	;# 
   360  0097                     	;# 
   361  0098                     	;# 
   362  0099                     	;# 
   363  009A                     	;# 
   364  009B                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  009F                     	;# 
   369  0105                     	;# 
   370  0107                     	;# 
   371  0108                     	;# 
   372  0109                     	;# 
   373  010C                     	;# 
   374  010C                     	;# 
   375  010D                     	;# 
   376  010E                     	;# 
   377  010F                     	;# 
   378  0185                     	;# 
   379  0187                     	;# 
   380  0188                     	;# 
   381  0189                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384  0000                     	;# 
   385  0001                     	;# 
   386  0002                     	;# 
   387  0003                     	;# 
   388  0004                     	;# 
   389  0005                     	;# 
   390  0006                     	;# 
   391  0007                     	;# 
   392  0008                     	;# 
   393  0009                     	;# 
   394  000A                     	;# 
   395  000B                     	;# 
   396  000C                     	;# 
   397  000D                     	;# 
   398  000E                     	;# 
   399  000E                     	;# 
   400  000F                     	;# 
   401  0010                     	;# 
   402  0011                     	;# 
   403  0012                     	;# 
   404  0013                     	;# 
   405  0014                     	;# 
   406  0015                     	;# 
   407  0015                     	;# 
   408  0016                     	;# 
   409  0017                     	;# 
   410  0018                     	;# 
   411  0019                     	;# 
   412  001A                     	;# 
   413  001B                     	;# 
   414  001B                     	;# 
   415  001C                     	;# 
   416  001D                     	;# 
   417  001E                     	;# 
   418  001F                     	;# 
   419  0081                     	;# 
   420  0085                     	;# 
   421  0086                     	;# 
   422  0087                     	;# 
   423  0088                     	;# 
   424  0089                     	;# 
   425  008C                     	;# 
   426  008D                     	;# 
   427  008E                     	;# 
   428  008F                     	;# 
   429  0090                     	;# 
   430  0091                     	;# 
   431  0092                     	;# 
   432  0093                     	;# 
   433  0093                     	;# 
   434  0093                     	;# 
   435  0094                     	;# 
   436  0095                     	;# 
   437  0096                     	;# 
   438  0097                     	;# 
   439  0098                     	;# 
   440  0099                     	;# 
   441  009A                     	;# 
   442  009B                     	;# 
   443  009C                     	;# 
   444  009D                     	;# 
   445  009E                     	;# 
   446  009F                     	;# 
   447  0105                     	;# 
   448  0107                     	;# 
   449  0108                     	;# 
   450  0109                     	;# 
   451  010C                     	;# 
   452  010C                     	;# 
   453  010D                     	;# 
   454  010E                     	;# 
   455  010F                     	;# 
   456  0185                     	;# 
   457  0187                     	;# 
   458  0188                     	;# 
   459  0189                     	;# 
   460  018C                     	;# 
   461  018D                     	;# 
   462  0000                     	;# 
   463  0001                     	;# 
   464  0002                     	;# 
   465  0003                     	;# 
   466  0004                     	;# 
   467  0005                     	;# 
   468  0006                     	;# 
   469  0007                     	;# 
   470  0008                     	;# 
   471  0009                     	;# 
   472  000A                     	;# 
   473  000B                     	;# 
   474  000C                     	;# 
   475  000D                     	;# 
   476  000E                     	;# 
   477  000E                     	;# 
   478  000F                     	;# 
   479  0010                     	;# 
   480  0011                     	;# 
   481  0012                     	;# 
   482  0013                     	;# 
   483  0014                     	;# 
   484  0015                     	;# 
   485  0015                     	;# 
   486  0016                     	;# 
   487  0017                     	;# 
   488  0018                     	;# 
   489  0019                     	;# 
   490  001A                     	;# 
   491  001B                     	;# 
   492  001B                     	;# 
   493  001C                     	;# 
   494  001D                     	;# 
   495  001E                     	;# 
   496  001F                     	;# 
   497  0081                     	;# 
   498  0085                     	;# 
   499  0086                     	;# 
   500  0087                     	;# 
   501  0088                     	;# 
   502  0089                     	;# 
   503  008C                     	;# 
   504  008D                     	;# 
   505  008E                     	;# 
   506  008F                     	;# 
   507  0090                     	;# 
   508  0091                     	;# 
   509  0092                     	;# 
   510  0093                     	;# 
   511  0093                     	;# 
   512  0093                     	;# 
   513  0094                     	;# 
   514  0095                     	;# 
   515  0096                     	;# 
   516  0097                     	;# 
   517  0098                     	;# 
   518  0099                     	;# 
   519  009A                     	;# 
   520  009B                     	;# 
   521  009C                     	;# 
   522  009D                     	;# 
   523  009E                     	;# 
   524  009F                     	;# 
   525  0105                     	;# 
   526  0107                     	;# 
   527  0108                     	;# 
   528  0109                     	;# 
   529  010C                     	;# 
   530  010C                     	;# 
   531  010D                     	;# 
   532  010E                     	;# 
   533  010F                     	;# 
   534  0185                     	;# 
   535  0187                     	;# 
   536  0188                     	;# 
   537  0189                     	;# 
   538  018C                     	;# 
   539  018D                     	;# 
   540  0000                     	;# 
   541  0001                     	;# 
   542  0002                     	;# 
   543  0003                     	;# 
   544  0004                     	;# 
   545  0005                     	;# 
   546  0006                     	;# 
   547  0007                     	;# 
   548  0008                     	;# 
   549  0009                     	;# 
   550  000A                     	;# 
   551  000B                     	;# 
   552  000C                     	;# 
   553  000D                     	;# 
   554  000E                     	;# 
   555  000E                     	;# 
   556  000F                     	;# 
   557  0010                     	;# 
   558  0011                     	;# 
   559  0012                     	;# 
   560  0013                     	;# 
   561  0014                     	;# 
   562  0015                     	;# 
   563  0015                     	;# 
   564  0016                     	;# 
   565  0017                     	;# 
   566  0018                     	;# 
   567  0019                     	;# 
   568  001A                     	;# 
   569  001B                     	;# 
   570  001B                     	;# 
   571  001C                     	;# 
   572  001D                     	;# 
   573  001E                     	;# 
   574  001F                     	;# 
   575  0081                     	;# 
   576  0085                     	;# 
   577  0086                     	;# 
   578  0087                     	;# 
   579  0088                     	;# 
   580  0089                     	;# 
   581  008C                     	;# 
   582  008D                     	;# 
   583  008E                     	;# 
   584  008F                     	;# 
   585  0090                     	;# 
   586  0091                     	;# 
   587  0092                     	;# 
   588  0093                     	;# 
   589  0093                     	;# 
   590  0093                     	;# 
   591  0094                     	;# 
   592  0095                     	;# 
   593  0096                     	;# 
   594  0097                     	;# 
   595  0098                     	;# 
   596  0099                     	;# 
   597  009A                     	;# 
   598  009B                     	;# 
   599  009C                     	;# 
   600  009D                     	;# 
   601  009E                     	;# 
   602  009F                     	;# 
   603  0105                     	;# 
   604  0107                     	;# 
   605  0108                     	;# 
   606  0109                     	;# 
   607  010C                     	;# 
   608  010C                     	;# 
   609  010D                     	;# 
   610  010E                     	;# 
   611  010F                     	;# 
   612  0185                     	;# 
   613  0187                     	;# 
   614  0188                     	;# 
   615  0189                     	;# 
   616  018C                     	;# 
   617  018D                     	;# 
   618  0018                     _RCSTAbits	set	24
   619  0009                     _PORTEbits	set	9
   620  0019                     _TXREG	set	25
   621  0008                     _PORTD	set	8
   622  0006                     _PORTB	set	6
   623  0005                     _PORTA	set	5
   624  000C                     _PIR1bits	set	12
   625  0013                     _SSPBUF	set	19
   626  0014                     _SSPCON	set	20
   627  0063                     _SSPIF	set	99
   628  005E                     _PEIE	set	94
   629  005F                     _GIE	set	95
   630  0099                     _SPBRG	set	153
   631  009A                     _SPBRGH	set	154
   632  0098                     _TXSTAbits	set	152
   633  008F                     _OSCCONbits	set	143
   634  008C                     _PIE1bits	set	140
   635  0089                     _TRISE	set	137
   636  0088                     _TRISD	set	136
   637  0086                     _TRISB	set	134
   638  0085                     _TRISA	set	133
   639  0091                     _SSPCON2bits	set	145
   640  0087                     _TRISCbits	set	135
   641  0094                     _SSPSTAT	set	148
   642  0093                     _SSPADD	set	147
   643  0091                     _SSPCON2	set	145
   644  0463                     _SSPIE	set	1123
   645  043C                     _TRISC4	set	1084
   646  043B                     _TRISC3	set	1083
   647  0187                     _BAUDCTLbits	set	391
   648  0189                     _ANSELH	set	393
   649  0188                     _ANSEL	set	392
   650                           
   651                           	psect	cinit
   652  000F                     start_initialization:	
   653                           ; #config settings
   654                           
   655  000F                     __initialization:
   656                           
   657                           ; Clear objects allocated to COMMON
   658  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   659  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   660  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   661                           
   662                           ; Clear objects allocated to BANK0
   663  0012  1283               	bcf	3,5	;RP0=0, select bank0
   664  0013  1303               	bcf	3,6	;RP1=0, select bank0
   665  0014  01C2               	clrf	__pbssBANK0& (0+127)
   666  0015  01C3               	clrf	(__pbssBANK0+1)& (0+127)
   667  0016  01C4               	clrf	(__pbssBANK0+2)& (0+127)
   668  0017  01C5               	clrf	(__pbssBANK0+3)& (0+127)
   669  0018  01C6               	clrf	(__pbssBANK0+4)& (0+127)
   670  0019  01C7               	clrf	(__pbssBANK0+5)& (0+127)
   671  001A  01C8               	clrf	(__pbssBANK0+6)& (0+127)
   672  001B  01C9               	clrf	(__pbssBANK0+7)& (0+127)
   673  001C  01CA               	clrf	(__pbssBANK0+8)& (0+127)
   674  001D  01CB               	clrf	(__pbssBANK0+9)& (0+127)
   675  001E  01CC               	clrf	(__pbssBANK0+10)& (0+127)
   676  001F  01CD               	clrf	(__pbssBANK0+11)& (0+127)
   677  0020  01CE               	clrf	(__pbssBANK0+12)& (0+127)
   678  0021  01CF               	clrf	(__pbssBANK0+13)& (0+127)
   679  0022  01D0               	clrf	(__pbssBANK0+14)& (0+127)
   680  0023                     end_of_initialization:	
   681                           ;End of C runtime variable initialization code
   682                           
   683  0023                     __end_of__initialization:
   684  0023  0183               	clrf	3
   685  0024  120A  118A  2827   	ljmp	_main	;jump to C main() function
   686                           
   687                           	psect	bssCOMMON
   688  0078                     __pbssCOMMON:
   689  0078                     _con:
   690  0078                     	ds	1
   691  0079                     _MIN:
   692  0079                     	ds	1
   693  007A                     _DIA:
   694  007A                     	ds	1
   695                           
   696                           	psect	bssBANK0
   697  0042                     __pbssBANK0:
   698  0042                     _temperatura:
   699  0042                     	ds	1
   700  0043                     _toggleTX:
   701  0043                     	ds	1
   702  0044                     _CERRADO:
   703  0044                     	ds	1
   704  0045                     _DM:
   705  0045                     	ds	1
   706  0046                     _UM:
   707  0046                     	ds	1
   708  0047                     _DH:
   709  0047                     	ds	1
   710  0048                     _UH:
   711  0048                     	ds	1
   712  0049                     _C3:
   713  0049                     	ds	1
   714  004A                     _C2:
   715  004A                     	ds	1
   716  004B                     _C1:
   717  004B                     	ds	1
   718  004C                     _TEMP:
   719  004C                     	ds	1
   720  004D                     _HORA:
   721  004D                     	ds	1
   722  004E                     _BASURA:
   723  004E                     	ds	1
   724  004F                     _NUM:
   725  004F                     	ds	1
   726  0050                     _PARKH:
   727  0050                     	ds	1
   728                           
   729                           	psect	cstackCOMMON
   730  0070                     __pcstackCOMMON:
   731  0070                     ?_envio:
   732  0070                     ??_envio:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  0070                     ?_setup:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0070                     ?_Lcd_Init:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0070                     ?_Lcd_Write_String:	
   742                           ; 1 bytes @ 0x0
   743                           
   744  0070                     ?_conver1:	
   745                           ; 1 bytes @ 0x0
   746                           
   747  0070                     ?_conver:	
   748                           ; 1 bytes @ 0x0
   749                           
   750  0070                     ?_LECT1:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0070                     ?_osc_config:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0070                     ?_uart_config:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0070                     ?_num_ascii:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0070                     ?_I2C_Master_Wait:	
   763                           ; 1 bytes @ 0x0
   764                           
   765  0070                     ?_I2C_Master_Start:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0070                     ?_I2C_Master_Stop:	
   769                           ; 1 bytes @ 0x0
   770                           
   771  0070                     ?_ISR:	
   772                           ; 1 bytes @ 0x0
   773                           
   774  0070                     ?_main:	
   775                           ; 1 bytes @ 0x0
   776                           
   777  0070                     ?_Lcd_Port:	
   778                           ; 1 bytes @ 0x0
   779                           
   780  0070                     ?_Lcd_Cmd:	
   781                           ; 1 bytes @ 0x0
   782                           
   783  0070                     ?_Lcd_Write_Char:	
   784                           ; 1 bytes @ 0x0
   785                           
   786                           
   787                           ; 1 bytes @ 0x0
   788  0070                     	ds	1
   789  0071                     ??_ISR:
   790                           
   791                           ; 1 bytes @ 0x1
   792  0071                     	ds	2
   793  0073                     ??_conver:
   794  0073                     ??_osc_config:	
   795                           ; 1 bytes @ 0x3
   796                           
   797  0073                     ??_uart_config:	
   798                           ; 1 bytes @ 0x3
   799                           
   800  0073                     ??_num_ascii:	
   801                           ; 1 bytes @ 0x3
   802                           
   803  0073                     ??_I2C_Master_Wait:	
   804                           ; 1 bytes @ 0x3
   805                           
   806  0073                     ??_I2C_Master_Start:	
   807                           ; 1 bytes @ 0x3
   808                           
   809  0073                     ??_I2C_Master_Stop:	
   810                           ; 1 bytes @ 0x3
   811                           
   812  0073                     ?_I2C_Master_Write:	
   813                           ; 1 bytes @ 0x3
   814                           
   815  0073                     ??_Lcd_Port:	
   816                           ; 1 bytes @ 0x3
   817                           
   818  0073                     ??___lldiv:	
   819                           ; 1 bytes @ 0x3
   820                           
   821  0073                     ?_I2C_Master_Read:	
   822                           ; 1 bytes @ 0x3
   823                           
   824  0073                     ?___awdiv:	
   825                           ; 2 bytes @ 0x3
   826                           
   827  0073                     Lcd_Port@a:	
   828                           ; 2 bytes @ 0x3
   829                           
   830  0073                     I2C_Master_Write@d:	
   831                           ; 1 bytes @ 0x3
   832                           
   833  0073                     I2C_Master_Read@a:	
   834                           ; 2 bytes @ 0x3
   835                           
   836  0073                     ___awdiv@divisor:	
   837                           ; 2 bytes @ 0x3
   838                           
   839                           
   840                           ; 2 bytes @ 0x3
   841  0073                     	ds	1
   842  0074                     ??_I2C_Master_Init:
   843  0074                     ??_Lcd_Cmd:	
   844                           ; 1 bytes @ 0x4
   845                           
   846  0074                     ??_Lcd_Write_Char:	
   847                           ; 1 bytes @ 0x4
   848                           
   849                           
   850                           ; 1 bytes @ 0x4
   851  0074                     	ds	1
   852  0075                     ??_I2C_Master_Write:
   853  0075                     ??_I2C_Master_Read:	
   854                           ; 1 bytes @ 0x5
   855                           
   856  0075                     osc_config@freq:	
   857                           ; 1 bytes @ 0x5
   858                           
   859  0075                     Lcd_Write_Char@a:	
   860                           ; 1 bytes @ 0x5
   861                           
   862  0075                     num_ascii@num:	
   863                           ; 1 bytes @ 0x5
   864                           
   865  0075                     ___awdiv@dividend:	
   866                           ; 1 bytes @ 0x5
   867                           
   868                           
   869                           ; 2 bytes @ 0x5
   870  0075                     	ds	1
   871  0076                     ??_Lcd_Write_String:
   872  0076                     ??_LECT1:	
   873                           ; 1 bytes @ 0x6
   874                           
   875  0076                     Lcd_Cmd@a:	
   876                           ; 1 bytes @ 0x6
   877                           
   878                           
   879                           ; 1 bytes @ 0x6
   880  0076                     	ds	1
   881  0077                     ??_Lcd_Init:
   882  0077                     ?_Lcd_Set_Cursor:	
   883                           ; 1 bytes @ 0x7
   884                           
   885  0077                     ??___awdiv:	
   886                           ; 1 bytes @ 0x7
   887                           
   888  0077                     Lcd_Set_Cursor@b:	
   889                           ; 1 bytes @ 0x7
   890                           
   891                           
   892                           ; 1 bytes @ 0x7
   893  0077                     	ds	1
   894                           
   895                           	psect	cstackBANK0
   896  0020                     __pcstackBANK0:
   897  0020                     ??_Lcd_Set_Cursor:
   898  0020                     ?___lldiv:	
   899                           ; 1 bytes @ 0x0
   900                           
   901  0020                     ___awdiv@counter:	
   902                           ; 4 bytes @ 0x0
   903                           
   904  0020                     I2C_Master_Read@temp:	
   905                           ; 1 bytes @ 0x0
   906                           
   907  0020                     Lcd_Write_String@i:	
   908                           ; 2 bytes @ 0x0
   909                           
   910  0020                     ___lldiv@divisor:	
   911                           ; 2 bytes @ 0x0
   912                           
   913  0020                     conver@temporal:	
   914                           ; 4 bytes @ 0x0
   915                           
   916                           
   917                           ; 16 bytes @ 0x0
   918  0020                     	ds	1
   919  0021                     Lcd_Set_Cursor@a:
   920  0021                     ___awdiv@sign:	
   921                           ; 1 bytes @ 0x1
   922                           
   923                           
   924                           ; 1 bytes @ 0x1
   925  0021                     	ds	1
   926  0022                     Lcd_Set_Cursor@temp:
   927  0022                     Lcd_Write_String@a:	
   928                           ; 1 bytes @ 0x2
   929                           
   930  0022                     ___awdiv@quotient:	
   931                           ; 1 bytes @ 0x2
   932                           
   933                           
   934                           ; 2 bytes @ 0x2
   935  0022                     	ds	2
   936  0024                     ?___awmod:
   937  0024                     ___awmod@divisor:	
   938                           ; 2 bytes @ 0x4
   939                           
   940  0024                     ___lldiv@dividend:	
   941                           ; 2 bytes @ 0x4
   942                           
   943                           
   944                           ; 4 bytes @ 0x4
   945  0024                     	ds	2
   946  0026                     ___awmod@dividend:
   947                           
   948                           ; 2 bytes @ 0x6
   949  0026                     	ds	2
   950  0028                     ??___awmod:
   951  0028                     ___lldiv@quotient:	
   952                           ; 1 bytes @ 0x8
   953                           
   954                           
   955                           ; 4 bytes @ 0x8
   956  0028                     	ds	1
   957  0029                     ___awmod@counter:
   958                           
   959                           ; 1 bytes @ 0x9
   960  0029                     	ds	1
   961  002A                     ___awmod@sign:
   962                           
   963                           ; 1 bytes @ 0xA
   964  002A                     	ds	1
   965  002B                     ??_conver1:
   966                           
   967                           ; 1 bytes @ 0xB
   968  002B                     	ds	1
   969  002C                     ___lldiv@counter:
   970                           
   971                           ; 1 bytes @ 0xC
   972  002C                     	ds	1
   973  002D                     ?_I2C_Master_Init:
   974  002D                     I2C_Master_Init@c:	
   975                           ; 1 bytes @ 0xD
   976                           
   977                           
   978                           ; 4 bytes @ 0xD
   979  002D                     	ds	1
   980  002E                     conver1@temporal:
   981                           
   982                           ; 16 bytes @ 0xE
   983  002E                     	ds	2
   984  0030                     conver@temporal_275:
   985                           
   986                           ; 16 bytes @ 0x10
   987  0030                     	ds	1
   988  0031                     ??_setup:
   989                           
   990                           ; 1 bytes @ 0x11
   991  0031                     	ds	15
   992  0040                     ??_main:
   993                           
   994                           ; 1 bytes @ 0x20
   995  0040                     	ds	2
   996                           
   997                           	psect	maintext
   998  0027                     __pmaintext:	
   999 ;;
  1000 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1001 ;;
  1002 ;; *************** function _main *****************
  1003 ;; Defined at:
  1004 ;;		line 84 in file "main.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;		None
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;		None
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1013 ;; Tracked objects:
  1014 ;;		On entry : B00/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1018 ;;      Params:         0       0       0       0       0
  1019 ;;      Locals:         0       0       0       0       0
  1020 ;;      Temps:          0       2       0       0       0
  1021 ;;      Totals:         0       2       0       0       0
  1022 ;;Total ram usage:        2 bytes
  1023 ;; Hardware stack levels required when called: 5
  1024 ;; This function calls:
  1025 ;;		_I2C_Master_Read
  1026 ;;		_I2C_Master_Start
  1027 ;;		_I2C_Master_Stop
  1028 ;;		_I2C_Master_Write
  1029 ;;		_LECT1
  1030 ;;		_Lcd_Init
  1031 ;;		_Lcd_Set_Cursor
  1032 ;;		_Lcd_Write_String
  1033 ;;		_conver
  1034 ;;		_conver1
  1035 ;;		_setup
  1036 ;; This function is called by:
  1037 ;;		Startup code after reset
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           
  1042                           ;psect for function _main
  1043  0027                     _main:
  1044  0027                     l2691:	
  1045                           ;incstack = 0
  1046                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1047                           
  1048                           
  1049                           ;main.c: 85:     setup();
  1050  0027  120A  118A  23AB  120A  118A  	fcall	_setup
  1051  002C                     l2693:
  1052                           
  1053                           ;main.c: 86:     Lcd_Init();
  1054  002C  120A  158A  2706  120A  118A  	fcall	_Lcd_Init
  1055  0031                     l2695:
  1056                           
  1057                           ;main.c: 89:         Lcd_Set_Cursor(1,1);
  1058  0031  01F7               	clrf	Lcd_Set_Cursor@b
  1059  0032  0AF7               	incf	Lcd_Set_Cursor@b,f
  1060  0033  3001               	movlw	1
  1061  0034  120A  158A  2744  120A  118A  	fcall	_Lcd_Set_Cursor
  1062                           
  1063                           ;main.c: 90:         Lcd_Write_String(conver1());
  1064  0039  120A  118A  25D5  120A  118A  	fcall	_conver1
  1065  003E  120A  158A  271F  120A  118A  	fcall	_Lcd_Write_String
  1066  0043                     l2697:
  1067                           
  1068                           ;main.c: 91:         Lcd_Set_Cursor(2,1);
  1069  0043  01F7               	clrf	Lcd_Set_Cursor@b
  1070  0044  0AF7               	incf	Lcd_Set_Cursor@b,f
  1071  0045  3002               	movlw	2
  1072  0046  120A  158A  2744  120A  118A  	fcall	_Lcd_Set_Cursor
  1073  004B                     l2699:
  1074                           
  1075                           ;main.c: 92:         Lcd_Write_String(conver());
  1076  004B  120A  118A  254A  120A  118A  	fcall	_conver
  1077  0050  120A  158A  271F  120A  118A  	fcall	_Lcd_Write_String
  1078  0055                     l2701:
  1079                           
  1080                           ;main.c: 93:         LECT1();
  1081  0055  120A  118A  2201  120A  118A  	fcall	_LECT1
  1082  005A                     l2703:
  1083                           
  1084                           ;main.c: 95:         I2C_Master_Start();
  1085  005A  120A  158A  2693  120A  118A  	fcall	_I2C_Master_Start
  1086  005F                     l2705:
  1087                           
  1088                           ;main.c: 96:         I2C_Master_Write(0x50);
  1089  005F  3050               	movlw	80
  1090  0060  00F3               	movwf	I2C_Master_Write@d
  1091  0061  3000               	movlw	0
  1092  0062  00F4               	movwf	I2C_Master_Write@d+1
  1093  0063  120A  158A  26A5  120A  118A  	fcall	_I2C_Master_Write
  1094  0068                     l2707:
  1095                           
  1096                           ;main.c: 97:         I2C_Master_Write(0);
  1097  0068  3000               	movlw	0
  1098  0069  00F3               	movwf	I2C_Master_Write@d
  1099  006A  00F4               	movwf	I2C_Master_Write@d+1
  1100  006B  120A  158A  26A5  120A  118A  	fcall	_I2C_Master_Write
  1101  0070                     l2709:
  1102                           
  1103                           ;main.c: 98:         I2C_Master_Stop();
  1104  0070  120A  158A  269C  120A  118A  	fcall	_I2C_Master_Stop
  1105  0075                     l2711:
  1106                           
  1107                           ;main.c: 99:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1108  0075  301A               	movlw	26
  1109  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1110  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1111  0078  00C1               	movwf	??_main+1
  1112  0079  30F7               	movlw	247
  1113  007A  00C0               	movwf	??_main
  1114  007B                     u1467:
  1115  007B  0BC0               	decfsz	??_main,f
  1116  007C  287B               	goto	u1467
  1117  007D  0BC1               	decfsz	??_main+1,f
  1118  007E  287B               	goto	u1467
  1119  007F  2880               	nop2
  1120  0080                     l2713:
  1121                           
  1122                           ;main.c: 101:         I2C_Master_Start();
  1123  0080  120A  158A  2693  120A  118A  	fcall	_I2C_Master_Start
  1124  0085                     l2715:
  1125                           
  1126                           ;main.c: 102:         I2C_Master_Write(0x51);
  1127  0085  3051               	movlw	81
  1128  0086  00F3               	movwf	I2C_Master_Write@d
  1129  0087  3000               	movlw	0
  1130  0088  00F4               	movwf	I2C_Master_Write@d+1
  1131  0089  120A  158A  26A5  120A  118A  	fcall	_I2C_Master_Write
  1132  008E                     l2717:
  1133                           
  1134                           ;main.c: 103:         PARKH = I2C_Master_Read(0);
  1135  008E  3000               	movlw	0
  1136  008F  00F3               	movwf	I2C_Master_Read@a
  1137  0090  00F4               	movwf	I2C_Master_Read@a+1
  1138  0091  120A  158A  2799  120A  118A  	fcall	_I2C_Master_Read
  1139  0096  0873               	movf	?_I2C_Master_Read,w
  1140  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1141  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1142  0099  00C0               	movwf	??_main
  1143  009A  0840               	movf	??_main,w
  1144  009B  00D0               	movwf	_PARKH
  1145  009C                     l2719:
  1146                           
  1147                           ;main.c: 104:         I2C_Master_Stop();
  1148  009C  120A  158A  269C  120A  118A  	fcall	_I2C_Master_Stop
  1149  00A1                     l2721:
  1150                           
  1151                           ;main.c: 105:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1152  00A1  301A               	movlw	26
  1153  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  1154  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  1155  00A4  00C1               	movwf	??_main+1
  1156  00A5  30F7               	movlw	247
  1157  00A6  00C0               	movwf	??_main
  1158  00A7                     u1477:
  1159  00A7  0BC0               	decfsz	??_main,f
  1160  00A8  28A7               	goto	u1477
  1161  00A9  0BC1               	decfsz	??_main+1,f
  1162  00AA  28A7               	goto	u1477
  1163  00AB  28AC               	nop2
  1164  00AC                     l2723:
  1165                           
  1166                           ;main.c: 107:         I2C_Master_Start();
  1167  00AC  120A  158A  2693  120A  118A  	fcall	_I2C_Master_Start
  1168  00B1                     l2725:
  1169                           
  1170                           ;main.c: 108:         I2C_Master_Write(0x60);
  1171  00B1  3060               	movlw	96
  1172  00B2  00F3               	movwf	I2C_Master_Write@d
  1173  00B3  3000               	movlw	0
  1174  00B4  00F4               	movwf	I2C_Master_Write@d+1
  1175  00B5  120A  158A  26A5  120A  118A  	fcall	_I2C_Master_Write
  1176  00BA                     l2727:
  1177                           
  1178                           ;main.c: 109:         I2C_Master_Write(CERRADO);
  1179  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1180  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1181  00BC  0844               	movf	_CERRADO,w
  1182  00BD  00C0               	movwf	??_main
  1183  00BE  01C1               	clrf	??_main+1
  1184  00BF  0840               	movf	??_main,w
  1185  00C0  00F3               	movwf	I2C_Master_Write@d
  1186  00C1  0841               	movf	??_main+1,w
  1187  00C2  00F4               	movwf	I2C_Master_Write@d+1
  1188  00C3  120A  158A  26A5  120A  118A  	fcall	_I2C_Master_Write
  1189  00C8                     l2729:
  1190                           
  1191                           ;main.c: 110:         I2C_Master_Stop();
  1192  00C8  120A  158A  269C  120A  118A  	fcall	_I2C_Master_Stop
  1193  00CD                     l2731:
  1194                           
  1195                           ;main.c: 111:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1196  00CD  301A               	movlw	26
  1197  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1198  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  1199  00D0  00C1               	movwf	??_main+1
  1200  00D1  30F7               	movlw	247
  1201  00D2  00C0               	movwf	??_main
  1202  00D3                     u1487:
  1203  00D3  0BC0               	decfsz	??_main,f
  1204  00D4  28D3               	goto	u1487
  1205  00D5  0BC1               	decfsz	??_main+1,f
  1206  00D6  28D3               	goto	u1487
  1207  00D7  28D8               	nop2
  1208  00D8                     l2733:
  1209                           
  1210                           ;main.c: 113:         I2C_Master_Start();
  1211  00D8  120A  158A  2693  120A  118A  	fcall	_I2C_Master_Start
  1212  00DD                     l2735:
  1213                           
  1214                           ;main.c: 114:         I2C_Master_Write(0x61);
  1215  00DD  3061               	movlw	97
  1216  00DE  00F3               	movwf	I2C_Master_Write@d
  1217  00DF  3000               	movlw	0
  1218  00E0  00F4               	movwf	I2C_Master_Write@d+1
  1219  00E1  120A  158A  26A5  120A  118A  	fcall	_I2C_Master_Write
  1220  00E6                     l2737:
  1221                           
  1222                           ;main.c: 115:         temperatura = I2C_Master_Read(0);
  1223  00E6  3000               	movlw	0
  1224  00E7  00F3               	movwf	I2C_Master_Read@a
  1225  00E8  00F4               	movwf	I2C_Master_Read@a+1
  1226  00E9  120A  158A  2799  120A  118A  	fcall	_I2C_Master_Read
  1227  00EE  0873               	movf	?_I2C_Master_Read,w
  1228  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1229  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  1230  00F1  00C0               	movwf	??_main
  1231  00F2  0840               	movf	??_main,w
  1232  00F3  00C2               	movwf	_temperatura
  1233  00F4                     l2739:
  1234                           
  1235                           ;main.c: 116:         I2C_Master_Stop();
  1236  00F4  120A  158A  269C  120A  118A  	fcall	_I2C_Master_Stop
  1237  00F9                     l2741:
  1238                           
  1239                           ;main.c: 117:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1240  00F9  301A               	movlw	26
  1241  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  1242  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  1243  00FC  00C1               	movwf	??_main+1
  1244  00FD  30F7               	movlw	247
  1245  00FE  00C0               	movwf	??_main
  1246  00FF                     u1497:
  1247  00FF  0BC0               	decfsz	??_main,f
  1248  0100  28FF               	goto	u1497
  1249  0101  0BC1               	decfsz	??_main+1,f
  1250  0102  28FF               	goto	u1497
  1251  0103  2904               	nop2
  1252  0104                     l2743:
  1253                           
  1254                           ;main.c: 119:         I2C_Master_Start();
  1255  0104  120A  158A  2693  120A  118A  	fcall	_I2C_Master_Start
  1256  0109                     l2745:
  1257                           
  1258                           ;main.c: 120:         I2C_Master_Write(0xD0);
  1259  0109  30D0               	movlw	208
  1260  010A  00F3               	movwf	I2C_Master_Write@d
  1261  010B  3000               	movlw	0
  1262  010C  00F4               	movwf	I2C_Master_Write@d+1
  1263  010D  120A  158A  26A5  120A  118A  	fcall	_I2C_Master_Write
  1264  0112                     l2747:
  1265                           
  1266                           ;main.c: 121:         I2C_Master_Write(0x02);
  1267  0112  3002               	movlw	2
  1268  0113  00F3               	movwf	I2C_Master_Write@d
  1269  0114  3000               	movlw	0
  1270  0115  00F4               	movwf	I2C_Master_Write@d+1
  1271  0116  120A  158A  26A5  120A  118A  	fcall	_I2C_Master_Write
  1272  011B                     l2749:
  1273                           
  1274                           ;main.c: 122:         I2C_Master_Stop();
  1275  011B  120A  158A  269C  120A  118A  	fcall	_I2C_Master_Stop
  1276  0120                     l2751:
  1277                           
  1278                           ;main.c: 123:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1279  0120  301A               	movlw	26
  1280  0121  1283               	bcf	3,5	;RP0=0, select bank0
  1281  0122  1303               	bcf	3,6	;RP1=0, select bank0
  1282  0123  00C1               	movwf	??_main+1
  1283  0124  30F7               	movlw	247
  1284  0125  00C0               	movwf	??_main
  1285  0126                     u1507:
  1286  0126  0BC0               	decfsz	??_main,f
  1287  0127  2926               	goto	u1507
  1288  0128  0BC1               	decfsz	??_main+1,f
  1289  0129  2926               	goto	u1507
  1290  012A  292B               	nop2
  1291  012B                     l2753:
  1292                           
  1293                           ;main.c: 125:         I2C_Master_Start();
  1294  012B  120A  158A  2693  120A  118A  	fcall	_I2C_Master_Start
  1295  0130                     l2755:
  1296                           
  1297                           ;main.c: 126:         I2C_Master_Write(0xD1);
  1298  0130  30D1               	movlw	209
  1299  0131  00F3               	movwf	I2C_Master_Write@d
  1300  0132  3000               	movlw	0
  1301  0133  00F4               	movwf	I2C_Master_Write@d+1
  1302  0134  120A  158A  26A5  120A  118A  	fcall	_I2C_Master_Write
  1303  0139                     l2757:
  1304                           
  1305                           ;main.c: 127:         HORA = I2C_Master_Read(0);
  1306  0139  3000               	movlw	0
  1307  013A  00F3               	movwf	I2C_Master_Read@a
  1308  013B  00F4               	movwf	I2C_Master_Read@a+1
  1309  013C  120A  158A  2799  120A  118A  	fcall	_I2C_Master_Read
  1310  0141  0873               	movf	?_I2C_Master_Read,w
  1311  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1312  0143  1303               	bcf	3,6	;RP1=0, select bank0
  1313  0144  00C0               	movwf	??_main
  1314  0145  0840               	movf	??_main,w
  1315  0146  00CD               	movwf	_HORA
  1316  0147                     l2759:
  1317                           
  1318                           ;main.c: 128:         I2C_Master_Stop();
  1319  0147  120A  158A  269C  120A  118A  	fcall	_I2C_Master_Stop
  1320  014C                     l2761:
  1321                           
  1322                           ;main.c: 129:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1323  014C  301A               	movlw	26
  1324  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1325  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1326  014F  00C1               	movwf	??_main+1
  1327  0150  30F7               	movlw	247
  1328  0151  00C0               	movwf	??_main
  1329  0152                     u1517:
  1330  0152  0BC0               	decfsz	??_main,f
  1331  0153  2952               	goto	u1517
  1332  0154  0BC1               	decfsz	??_main+1,f
  1333  0155  2952               	goto	u1517
  1334  0156  2957               	nop2
  1335  0157                     l2763:
  1336                           
  1337                           ;main.c: 131:         I2C_Master_Start();
  1338  0157  120A  158A  2693  120A  118A  	fcall	_I2C_Master_Start
  1339  015C                     l2765:
  1340                           
  1341                           ;main.c: 132:         I2C_Master_Write(0xD0);
  1342  015C  30D0               	movlw	208
  1343  015D  00F3               	movwf	I2C_Master_Write@d
  1344  015E  3000               	movlw	0
  1345  015F  00F4               	movwf	I2C_Master_Write@d+1
  1346  0160  120A  158A  26A5  120A  118A  	fcall	_I2C_Master_Write
  1347  0165                     l2767:
  1348                           
  1349                           ;main.c: 133:         I2C_Master_Write(0x03);
  1350  0165  3003               	movlw	3
  1351  0166  00F3               	movwf	I2C_Master_Write@d
  1352  0167  3000               	movlw	0
  1353  0168  00F4               	movwf	I2C_Master_Write@d+1
  1354  0169  120A  158A  26A5  120A  118A  	fcall	_I2C_Master_Write
  1355  016E                     l2769:
  1356                           
  1357                           ;main.c: 134:         I2C_Master_Stop();
  1358  016E  120A  158A  269C  120A  118A  	fcall	_I2C_Master_Stop
  1359  0173                     l2771:
  1360                           
  1361                           ;main.c: 135:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1362  0173  301A               	movlw	26
  1363  0174  1283               	bcf	3,5	;RP0=0, select bank0
  1364  0175  1303               	bcf	3,6	;RP1=0, select bank0
  1365  0176  00C1               	movwf	??_main+1
  1366  0177  30F7               	movlw	247
  1367  0178  00C0               	movwf	??_main
  1368  0179                     u1527:
  1369  0179  0BC0               	decfsz	??_main,f
  1370  017A  2979               	goto	u1527
  1371  017B  0BC1               	decfsz	??_main+1,f
  1372  017C  2979               	goto	u1527
  1373  017D  297E               	nop2
  1374  017E                     l2773:
  1375                           
  1376                           ;main.c: 137:         I2C_Master_Start();
  1377  017E  120A  158A  2693  120A  118A  	fcall	_I2C_Master_Start
  1378  0183                     l2775:
  1379                           
  1380                           ;main.c: 138:         I2C_Master_Write(0xD1);
  1381  0183  30D1               	movlw	209
  1382  0184  00F3               	movwf	I2C_Master_Write@d
  1383  0185  3000               	movlw	0
  1384  0186  00F4               	movwf	I2C_Master_Write@d+1
  1385  0187  120A  158A  26A5  120A  118A  	fcall	_I2C_Master_Write
  1386  018C                     l2777:
  1387                           
  1388                           ;main.c: 139:         DIA = I2C_Master_Read(0);
  1389  018C  3000               	movlw	0
  1390  018D  00F3               	movwf	I2C_Master_Read@a
  1391  018E  00F4               	movwf	I2C_Master_Read@a+1
  1392  018F  120A  158A  2799  120A  118A  	fcall	_I2C_Master_Read
  1393  0194  0873               	movf	?_I2C_Master_Read,w
  1394  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1395  0196  1303               	bcf	3,6	;RP1=0, select bank0
  1396  0197  00C0               	movwf	??_main
  1397  0198  0840               	movf	??_main,w
  1398  0199  00FA               	movwf	_DIA
  1399  019A                     l2779:
  1400                           
  1401                           ;main.c: 140:         I2C_Master_Stop();
  1402  019A  120A  158A  269C  120A  118A  	fcall	_I2C_Master_Stop
  1403  019F                     l2781:
  1404                           
  1405                           ;main.c: 141:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1406  019F  301A               	movlw	26
  1407  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1408  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  1409  01A2  00C1               	movwf	??_main+1
  1410  01A3  30F7               	movlw	247
  1411  01A4  00C0               	movwf	??_main
  1412  01A5                     u1537:
  1413  01A5  0BC0               	decfsz	??_main,f
  1414  01A6  29A5               	goto	u1537
  1415  01A7  0BC1               	decfsz	??_main+1,f
  1416  01A8  29A5               	goto	u1537
  1417  01A9  29AA               	nop2
  1418  01AA                     l2783:
  1419                           
  1420                           ;main.c: 143:         I2C_Master_Start();
  1421  01AA  120A  158A  2693  120A  118A  	fcall	_I2C_Master_Start
  1422  01AF                     l2785:
  1423                           
  1424                           ;main.c: 144:         I2C_Master_Write(0xD0);
  1425  01AF  30D0               	movlw	208
  1426  01B0  00F3               	movwf	I2C_Master_Write@d
  1427  01B1  3000               	movlw	0
  1428  01B2  00F4               	movwf	I2C_Master_Write@d+1
  1429  01B3  120A  158A  26A5  120A  118A  	fcall	_I2C_Master_Write
  1430  01B8                     l2787:
  1431                           
  1432                           ;main.c: 145:         I2C_Master_Write(0x01);
  1433  01B8  3001               	movlw	1
  1434  01B9  00F3               	movwf	I2C_Master_Write@d
  1435  01BA  3000               	movlw	0
  1436  01BB  00F4               	movwf	I2C_Master_Write@d+1
  1437  01BC  120A  158A  26A5  120A  118A  	fcall	_I2C_Master_Write
  1438  01C1                     l2789:
  1439                           
  1440                           ;main.c: 146:         I2C_Master_Stop();
  1441  01C1  120A  158A  269C  120A  118A  	fcall	_I2C_Master_Stop
  1442  01C6                     l2791:
  1443                           
  1444                           ;main.c: 147:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1445  01C6  301A               	movlw	26
  1446  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  1447  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  1448  01C9  00C1               	movwf	??_main+1
  1449  01CA  30F7               	movlw	247
  1450  01CB  00C0               	movwf	??_main
  1451  01CC                     u1547:
  1452  01CC  0BC0               	decfsz	??_main,f
  1453  01CD  29CC               	goto	u1547
  1454  01CE  0BC1               	decfsz	??_main+1,f
  1455  01CF  29CC               	goto	u1547
  1456  01D0  29D1               	nop2
  1457  01D1                     l2793:
  1458                           
  1459                           ;main.c: 149:         I2C_Master_Start();
  1460  01D1  120A  158A  2693  120A  118A  	fcall	_I2C_Master_Start
  1461  01D6                     l2795:
  1462                           
  1463                           ;main.c: 150:         I2C_Master_Write(0xD1);
  1464  01D6  30D1               	movlw	209
  1465  01D7  00F3               	movwf	I2C_Master_Write@d
  1466  01D8  3000               	movlw	0
  1467  01D9  00F4               	movwf	I2C_Master_Write@d+1
  1468  01DA  120A  158A  26A5  120A  118A  	fcall	_I2C_Master_Write
  1469  01DF                     l2797:
  1470                           
  1471                           ;main.c: 151:         MIN = I2C_Master_Read(0);
  1472  01DF  3000               	movlw	0
  1473  01E0  00F3               	movwf	I2C_Master_Read@a
  1474  01E1  00F4               	movwf	I2C_Master_Read@a+1
  1475  01E2  120A  158A  2799  120A  118A  	fcall	_I2C_Master_Read
  1476  01E7  0873               	movf	?_I2C_Master_Read,w
  1477  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  1478  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  1479  01EA  00C0               	movwf	??_main
  1480  01EB  0840               	movf	??_main,w
  1481  01EC  00F9               	movwf	_MIN
  1482  01ED                     l2799:
  1483                           
  1484                           ;main.c: 152:         I2C_Master_Stop();
  1485  01ED  120A  158A  269C  120A  118A  	fcall	_I2C_Master_Stop
  1486  01F2                     l2801:
  1487                           
  1488                           ;main.c: 153:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1489  01F2  301A               	movlw	26
  1490  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  1491  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  1492  01F5  00C1               	movwf	??_main+1
  1493  01F6  30F7               	movlw	247
  1494  01F7  00C0               	movwf	??_main
  1495  01F8                     u1557:
  1496  01F8  0BC0               	decfsz	??_main,f
  1497  01F9  29F8               	goto	u1557
  1498  01FA  0BC1               	decfsz	??_main+1,f
  1499  01FB  29F8               	goto	u1557
  1500  01FC  29FD               	nop2
  1501  01FD  2831               	goto	l2695
  1502  01FE  120A  118A  280C   	ljmp	start
  1503  0201                     __end_of_main:
  1504                           
  1505                           	psect	text1
  1506  03AB                     __ptext1:	
  1507 ;; *************** function _setup *****************
  1508 ;; Defined at:
  1509 ;;		line 161 in file "main.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;		None
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;		None
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  1    wreg      void 
  1516 ;; Registers used:
  1517 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1523 ;;      Params:         0       0       0       0       0
  1524 ;;      Locals:         0       0       0       0       0
  1525 ;;      Temps:          0       2       0       0       0
  1526 ;;      Totals:         0       2       0       0       0
  1527 ;;Total ram usage:        2 bytes
  1528 ;; Hardware stack levels used: 1
  1529 ;; Hardware stack levels required when called: 4
  1530 ;; This function calls:
  1531 ;;		_I2C_Master_Init
  1532 ;;		_I2C_Master_Read
  1533 ;;		_I2C_Master_Start
  1534 ;;		_I2C_Master_Stop
  1535 ;;		_I2C_Master_Write
  1536 ;;		_osc_config
  1537 ;;		_uart_config
  1538 ;; This function is called by:
  1539 ;;		_main
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           
  1544                           ;psect for function _setup
  1545  03AB                     _setup:
  1546  03AB                     l2553:	
  1547                           ;incstack = 0
  1548                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1549                           
  1550                           
  1551                           ;main.c: 162:     ANSEL = 0;
  1552  03AB  1683               	bsf	3,5	;RP0=1, select bank3
  1553  03AC  1703               	bsf	3,6	;RP1=1, select bank3
  1554  03AD  0188               	clrf	8	;volatile
  1555                           
  1556                           ;main.c: 163:     ANSELH = 0;
  1557  03AE  0189               	clrf	9	;volatile
  1558                           
  1559                           ;main.c: 164:     TRISA = 0;
  1560  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  1561  03B0  1303               	bcf	3,6	;RP1=0, select bank1
  1562  03B1  0185               	clrf	5	;volatile
  1563                           
  1564                           ;main.c: 165:     TRISB = 0;
  1565  03B2  0186               	clrf	6	;volatile
  1566  03B3                     l2555:
  1567                           
  1568                           ;main.c: 166:     TRISCbits.TRISC6 = 0;
  1569  03B3  1307               	bcf	7,6	;volatile
  1570  03B4                     l2557:
  1571                           
  1572                           ;main.c: 167:     TRISCbits.TRISC7 = 1;
  1573  03B4  1787               	bsf	7,7	;volatile
  1574                           
  1575                           ;main.c: 168:     TRISD = 0;
  1576  03B5  0188               	clrf	8	;volatile
  1577                           
  1578                           ;main.c: 169:     TRISE = 0;
  1579  03B6  0189               	clrf	9	;volatile
  1580                           
  1581                           ;main.c: 170:     PORTA = 0;
  1582  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  1583  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  1584  03B9  0185               	clrf	5	;volatile
  1585                           
  1586                           ;main.c: 171:     PORTB = 0;
  1587  03BA  0186               	clrf	6	;volatile
  1588                           
  1589                           ;main.c: 172:     PORTD = 0;
  1590  03BB  0188               	clrf	8	;volatile
  1591  03BC                     l2559:
  1592                           
  1593                           ;main.c: 173:     osc_config(8);
  1594  03BC  3008               	movlw	8
  1595  03BD  120A  158A  27C9  120A  118A  	fcall	_osc_config
  1596  03C2                     l2561:
  1597                           
  1598                           ;main.c: 174:     PIE1bits.RCIE = 0;
  1599  03C2  1683               	bsf	3,5	;RP0=1, select bank1
  1600  03C3  1303               	bcf	3,6	;RP1=0, select bank1
  1601  03C4  128C               	bcf	12,5	;volatile
  1602  03C5                     l2563:
  1603                           
  1604                           ;main.c: 175:     PIE1bits.TXIE = 1;
  1605  03C5  160C               	bsf	12,4	;volatile
  1606  03C6                     l2565:
  1607                           
  1608                           ;main.c: 176:     uart_config();
  1609  03C6  120A  158A  26D8  120A  118A  	fcall	_uart_config
  1610  03CB                     l2567:
  1611                           
  1612                           ;main.c: 177:     I2C_Master_Init(100000);
  1613  03CB  3000               	movlw	0
  1614  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  1615  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  1616  03CE  00B0               	movwf	I2C_Master_Init@c+3
  1617  03CF  3001               	movlw	1
  1618  03D0  00AF               	movwf	I2C_Master_Init@c+2
  1619  03D1  3086               	movlw	134
  1620  03D2  00AE               	movwf	I2C_Master_Init@c+1
  1621  03D3  30A0               	movlw	160
  1622  03D4  00AD               	movwf	I2C_Master_Init@c
  1623  03D5  120A  118A  27B9  120A  118A  	fcall	_I2C_Master_Init
  1624  03DA                     l2569:
  1625                           
  1626                           ;main.c: 179:     I2C_Master_Start();
  1627  03DA  120A  158A  2693  120A  118A  	fcall	_I2C_Master_Start
  1628  03DF                     l2571:
  1629                           
  1630                           ;main.c: 180:     I2C_Master_Write(0xD0);
  1631  03DF  30D0               	movlw	208
  1632  03E0  00F3               	movwf	I2C_Master_Write@d
  1633  03E1  3000               	movlw	0
  1634  03E2  00F4               	movwf	I2C_Master_Write@d+1
  1635  03E3  120A  158A  26A5  120A  118A  	fcall	_I2C_Master_Write
  1636  03E8                     l2573:
  1637                           
  1638                           ;main.c: 181:     I2C_Master_Write(0x02);
  1639  03E8  3002               	movlw	2
  1640  03E9  00F3               	movwf	I2C_Master_Write@d
  1641  03EA  3000               	movlw	0
  1642  03EB  00F4               	movwf	I2C_Master_Write@d+1
  1643  03EC  120A  158A  26A5  120A  118A  	fcall	_I2C_Master_Write
  1644  03F1                     l2575:
  1645                           
  1646                           ;main.c: 182:     I2C_Master_Write(0x21);
  1647  03F1  3021               	movlw	33
  1648  03F2  00F3               	movwf	I2C_Master_Write@d
  1649  03F3  3000               	movlw	0
  1650  03F4  00F4               	movwf	I2C_Master_Write@d+1
  1651  03F5  120A  158A  26A5  120A  118A  	fcall	_I2C_Master_Write
  1652  03FA                     l2577:
  1653                           
  1654                           ;main.c: 183:     I2C_Master_Stop();
  1655  03FA  120A  158A  269C  120A  118A  	fcall	_I2C_Master_Stop
  1656  03FF                     l2579:
  1657                           
  1658                           ;main.c: 184:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1659  03FF  301A               	movlw	26
  1660  0400  1283               	bcf	3,5	;RP0=0, select bank0
  1661  0401  1303               	bcf	3,6	;RP1=0, select bank0
  1662  0402  00B2               	movwf	??_setup+1
  1663  0403  30F7               	movlw	247
  1664  0404  00B1               	movwf	??_setup
  1665  0405                     u1567:
  1666  0405  0BB1               	decfsz	??_setup,f
  1667  0406  2C05               	goto	u1567
  1668  0407  0BB2               	decfsz	??_setup+1,f
  1669  0408  2C05               	goto	u1567
  1670  0409  2C0A               	nop2
  1671  040A                     l2581:
  1672                           
  1673                           ;main.c: 186:     I2C_Master_Start();
  1674  040A  120A  158A  2693  120A  118A  	fcall	_I2C_Master_Start
  1675  040F                     l2583:
  1676                           
  1677                           ;main.c: 187:     I2C_Master_Write(0xD1);
  1678  040F  30D1               	movlw	209
  1679  0410  00F3               	movwf	I2C_Master_Write@d
  1680  0411  3000               	movlw	0
  1681  0412  00F4               	movwf	I2C_Master_Write@d+1
  1682  0413  120A  158A  26A5  120A  118A  	fcall	_I2C_Master_Write
  1683  0418                     l2585:
  1684                           
  1685                           ;main.c: 188:     BASURA = I2C_Master_Read(0);
  1686  0418  3000               	movlw	0
  1687  0419  00F3               	movwf	I2C_Master_Read@a
  1688  041A  00F4               	movwf	I2C_Master_Read@a+1
  1689  041B  120A  158A  2799  120A  118A  	fcall	_I2C_Master_Read
  1690  0420  0873               	movf	?_I2C_Master_Read,w
  1691  0421  1283               	bcf	3,5	;RP0=0, select bank0
  1692  0422  1303               	bcf	3,6	;RP1=0, select bank0
  1693  0423  00B1               	movwf	??_setup
  1694  0424  0831               	movf	??_setup,w
  1695  0425  00CE               	movwf	_BASURA
  1696  0426                     l2587:
  1697                           
  1698                           ;main.c: 189:     I2C_Master_Stop();
  1699  0426  120A  158A  269C  120A  118A  	fcall	_I2C_Master_Stop
  1700  042B                     l2589:
  1701                           
  1702                           ;main.c: 190:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1703  042B  301A               	movlw	26
  1704  042C  1283               	bcf	3,5	;RP0=0, select bank0
  1705  042D  1303               	bcf	3,6	;RP1=0, select bank0
  1706  042E  00B2               	movwf	??_setup+1
  1707  042F  30F7               	movlw	247
  1708  0430  00B1               	movwf	??_setup
  1709  0431                     u1577:
  1710  0431  0BB1               	decfsz	??_setup,f
  1711  0432  2C31               	goto	u1577
  1712  0433  0BB2               	decfsz	??_setup+1,f
  1713  0434  2C31               	goto	u1577
  1714  0435  2C36               	nop2
  1715  0436                     l2591:
  1716                           
  1717                           ;main.c: 192:     I2C_Master_Start();
  1718  0436  120A  158A  2693  120A  118A  	fcall	_I2C_Master_Start
  1719  043B                     l2593:
  1720                           
  1721                           ;main.c: 193:     I2C_Master_Write(0xD0);
  1722  043B  30D0               	movlw	208
  1723  043C  00F3               	movwf	I2C_Master_Write@d
  1724  043D  3000               	movlw	0
  1725  043E  00F4               	movwf	I2C_Master_Write@d+1
  1726  043F  120A  158A  26A5  120A  118A  	fcall	_I2C_Master_Write
  1727  0444                     l2595:
  1728                           
  1729                           ;main.c: 194:     I2C_Master_Write(0x01);
  1730  0444  3001               	movlw	1
  1731  0445  00F3               	movwf	I2C_Master_Write@d
  1732  0446  3000               	movlw	0
  1733  0447  00F4               	movwf	I2C_Master_Write@d+1
  1734  0448  120A  158A  26A5  120A  118A  	fcall	_I2C_Master_Write
  1735  044D                     l2597:
  1736                           
  1737                           ;main.c: 195:     I2C_Master_Write(0x59);
  1738  044D  3059               	movlw	89
  1739  044E  00F3               	movwf	I2C_Master_Write@d
  1740  044F  3000               	movlw	0
  1741  0450  00F4               	movwf	I2C_Master_Write@d+1
  1742  0451  120A  158A  26A5  120A  118A  	fcall	_I2C_Master_Write
  1743  0456                     l2599:
  1744                           
  1745                           ;main.c: 196:     I2C_Master_Stop();
  1746  0456  120A  158A  269C  120A  118A  	fcall	_I2C_Master_Stop
  1747  045B                     l2601:
  1748                           
  1749                           ;main.c: 197:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1750  045B  301A               	movlw	26
  1751  045C  1283               	bcf	3,5	;RP0=0, select bank0
  1752  045D  1303               	bcf	3,6	;RP1=0, select bank0
  1753  045E  00B2               	movwf	??_setup+1
  1754  045F  30F7               	movlw	247
  1755  0460  00B1               	movwf	??_setup
  1756  0461                     u1587:
  1757  0461  0BB1               	decfsz	??_setup,f
  1758  0462  2C61               	goto	u1587
  1759  0463  0BB2               	decfsz	??_setup+1,f
  1760  0464  2C61               	goto	u1587
  1761  0465  2C66               	nop2
  1762  0466                     l2603:
  1763                           
  1764                           ;main.c: 199:     I2C_Master_Start();
  1765  0466  120A  158A  2693  120A  118A  	fcall	_I2C_Master_Start
  1766  046B                     l2605:
  1767                           
  1768                           ;main.c: 200:     I2C_Master_Write(0xD1);
  1769  046B  30D1               	movlw	209
  1770  046C  00F3               	movwf	I2C_Master_Write@d
  1771  046D  3000               	movlw	0
  1772  046E  00F4               	movwf	I2C_Master_Write@d+1
  1773  046F  120A  158A  26A5  120A  118A  	fcall	_I2C_Master_Write
  1774  0474                     l2607:
  1775                           
  1776                           ;main.c: 201:     BASURA = I2C_Master_Read(0);
  1777  0474  3000               	movlw	0
  1778  0475  00F3               	movwf	I2C_Master_Read@a
  1779  0476  00F4               	movwf	I2C_Master_Read@a+1
  1780  0477  120A  158A  2799  120A  118A  	fcall	_I2C_Master_Read
  1781  047C  0873               	movf	?_I2C_Master_Read,w
  1782  047D  1283               	bcf	3,5	;RP0=0, select bank0
  1783  047E  1303               	bcf	3,6	;RP1=0, select bank0
  1784  047F  00B1               	movwf	??_setup
  1785  0480  0831               	movf	??_setup,w
  1786  0481  00CE               	movwf	_BASURA
  1787  0482                     l2609:
  1788                           
  1789                           ;main.c: 202:     I2C_Master_Stop();
  1790  0482  120A  158A  269C  120A  118A  	fcall	_I2C_Master_Stop
  1791  0487                     l2611:
  1792                           
  1793                           ;main.c: 203:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1794  0487  301A               	movlw	26
  1795  0488  1283               	bcf	3,5	;RP0=0, select bank0
  1796  0489  1303               	bcf	3,6	;RP1=0, select bank0
  1797  048A  00B2               	movwf	??_setup+1
  1798  048B  30F7               	movlw	247
  1799  048C  00B1               	movwf	??_setup
  1800  048D                     u1597:
  1801  048D  0BB1               	decfsz	??_setup,f
  1802  048E  2C8D               	goto	u1597
  1803  048F  0BB2               	decfsz	??_setup+1,f
  1804  0490  2C8D               	goto	u1597
  1805  0491  2C92               	nop2
  1806  0492                     l2613:
  1807                           
  1808                           ;main.c: 205:     I2C_Master_Start();
  1809  0492  120A  158A  2693  120A  118A  	fcall	_I2C_Master_Start
  1810  0497                     l2615:
  1811                           
  1812                           ;main.c: 206:     I2C_Master_Write(0xD0);
  1813  0497  30D0               	movlw	208
  1814  0498  00F3               	movwf	I2C_Master_Write@d
  1815  0499  3000               	movlw	0
  1816  049A  00F4               	movwf	I2C_Master_Write@d+1
  1817  049B  120A  158A  26A5  120A  118A  	fcall	_I2C_Master_Write
  1818  04A0                     l2617:
  1819                           
  1820                           ;main.c: 207:     I2C_Master_Write(0x00);
  1821  04A0  3000               	movlw	0
  1822  04A1  00F3               	movwf	I2C_Master_Write@d
  1823  04A2  00F4               	movwf	I2C_Master_Write@d+1
  1824  04A3  120A  158A  26A5  120A  118A  	fcall	_I2C_Master_Write
  1825  04A8                     l2619:
  1826                           
  1827                           ;main.c: 208:     I2C_Master_Write(0x58);
  1828  04A8  3058               	movlw	88
  1829  04A9  00F3               	movwf	I2C_Master_Write@d
  1830  04AA  3000               	movlw	0
  1831  04AB  00F4               	movwf	I2C_Master_Write@d+1
  1832  04AC  120A  158A  26A5  120A  118A  	fcall	_I2C_Master_Write
  1833  04B1                     l2621:
  1834                           
  1835                           ;main.c: 209:     I2C_Master_Stop();
  1836  04B1  120A  158A  269C  120A  118A  	fcall	_I2C_Master_Stop
  1837  04B6                     l2623:
  1838                           
  1839                           ;main.c: 210:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1840  04B6  301A               	movlw	26
  1841  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  1842  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  1843  04B9  00B2               	movwf	??_setup+1
  1844  04BA  30F7               	movlw	247
  1845  04BB  00B1               	movwf	??_setup
  1846  04BC                     u1607:
  1847  04BC  0BB1               	decfsz	??_setup,f
  1848  04BD  2CBC               	goto	u1607
  1849  04BE  0BB2               	decfsz	??_setup+1,f
  1850  04BF  2CBC               	goto	u1607
  1851  04C0  2CC1               	nop2
  1852  04C1                     l2625:
  1853                           
  1854                           ;main.c: 212:     I2C_Master_Start();
  1855  04C1  120A  158A  2693  120A  118A  	fcall	_I2C_Master_Start
  1856  04C6                     l2627:
  1857                           
  1858                           ;main.c: 213:     I2C_Master_Write(0xD1);
  1859  04C6  30D1               	movlw	209
  1860  04C7  00F3               	movwf	I2C_Master_Write@d
  1861  04C8  3000               	movlw	0
  1862  04C9  00F4               	movwf	I2C_Master_Write@d+1
  1863  04CA  120A  158A  26A5  120A  118A  	fcall	_I2C_Master_Write
  1864  04CF                     l2629:
  1865                           
  1866                           ;main.c: 214:     BASURA = I2C_Master_Read(0);
  1867  04CF  3000               	movlw	0
  1868  04D0  00F3               	movwf	I2C_Master_Read@a
  1869  04D1  00F4               	movwf	I2C_Master_Read@a+1
  1870  04D2  120A  158A  2799  120A  118A  	fcall	_I2C_Master_Read
  1871  04D7  0873               	movf	?_I2C_Master_Read,w
  1872  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  1873  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  1874  04DA  00B1               	movwf	??_setup
  1875  04DB  0831               	movf	??_setup,w
  1876  04DC  00CE               	movwf	_BASURA
  1877  04DD                     l2631:
  1878                           
  1879                           ;main.c: 215:     I2C_Master_Stop();
  1880  04DD  120A  158A  269C  120A  118A  	fcall	_I2C_Master_Stop
  1881  04E2                     l2633:
  1882                           
  1883                           ;main.c: 216:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1884  04E2  301A               	movlw	26
  1885  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  1886  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  1887  04E5  00B2               	movwf	??_setup+1
  1888  04E6  30F7               	movlw	247
  1889  04E7  00B1               	movwf	??_setup
  1890  04E8                     u1617:
  1891  04E8  0BB1               	decfsz	??_setup,f
  1892  04E9  2CE8               	goto	u1617
  1893  04EA  0BB2               	decfsz	??_setup+1,f
  1894  04EB  2CE8               	goto	u1617
  1895  04EC  2CED               	nop2
  1896  04ED                     l2635:
  1897                           
  1898                           ;main.c: 218:     I2C_Master_Start();
  1899  04ED  120A  158A  2693  120A  118A  	fcall	_I2C_Master_Start
  1900  04F2                     l2637:
  1901                           
  1902                           ;main.c: 219:     I2C_Master_Write(0xD0);
  1903  04F2  30D0               	movlw	208
  1904  04F3  00F3               	movwf	I2C_Master_Write@d
  1905  04F4  3000               	movlw	0
  1906  04F5  00F4               	movwf	I2C_Master_Write@d+1
  1907  04F6  120A  158A  26A5  120A  118A  	fcall	_I2C_Master_Write
  1908  04FB                     l2639:
  1909                           
  1910                           ;main.c: 220:     I2C_Master_Write(0x03);
  1911  04FB  3003               	movlw	3
  1912  04FC  00F3               	movwf	I2C_Master_Write@d
  1913  04FD  3000               	movlw	0
  1914  04FE  00F4               	movwf	I2C_Master_Write@d+1
  1915  04FF  120A  158A  26A5  120A  118A  	fcall	_I2C_Master_Write
  1916  0504                     l2641:
  1917                           
  1918                           ;main.c: 221:     I2C_Master_Write(0x06);
  1919  0504  3006               	movlw	6
  1920  0505  00F3               	movwf	I2C_Master_Write@d
  1921  0506  3000               	movlw	0
  1922  0507  00F4               	movwf	I2C_Master_Write@d+1
  1923  0508  120A  158A  26A5  120A  118A  	fcall	_I2C_Master_Write
  1924  050D                     l2643:
  1925                           
  1926                           ;main.c: 222:     I2C_Master_Stop();
  1927  050D  120A  158A  269C  120A  118A  	fcall	_I2C_Master_Stop
  1928  0512                     l2645:
  1929                           
  1930                           ;main.c: 223:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1931  0512  301A               	movlw	26
  1932  0513  1283               	bcf	3,5	;RP0=0, select bank0
  1933  0514  1303               	bcf	3,6	;RP1=0, select bank0
  1934  0515  00B2               	movwf	??_setup+1
  1935  0516  30F7               	movlw	247
  1936  0517  00B1               	movwf	??_setup
  1937  0518                     u1627:
  1938  0518  0BB1               	decfsz	??_setup,f
  1939  0519  2D18               	goto	u1627
  1940  051A  0BB2               	decfsz	??_setup+1,f
  1941  051B  2D18               	goto	u1627
  1942  051C  2D1D               	nop2
  1943  051D                     l2647:
  1944                           
  1945                           ;main.c: 225:     I2C_Master_Start();
  1946  051D  120A  158A  2693  120A  118A  	fcall	_I2C_Master_Start
  1947  0522                     l2649:
  1948                           
  1949                           ;main.c: 226:     I2C_Master_Write(0xD1);
  1950  0522  30D1               	movlw	209
  1951  0523  00F3               	movwf	I2C_Master_Write@d
  1952  0524  3000               	movlw	0
  1953  0525  00F4               	movwf	I2C_Master_Write@d+1
  1954  0526  120A  158A  26A5  120A  118A  	fcall	_I2C_Master_Write
  1955  052B                     l2651:
  1956                           
  1957                           ;main.c: 227:     BASURA = I2C_Master_Read(0);
  1958  052B  3000               	movlw	0
  1959  052C  00F3               	movwf	I2C_Master_Read@a
  1960  052D  00F4               	movwf	I2C_Master_Read@a+1
  1961  052E  120A  158A  2799  120A  118A  	fcall	_I2C_Master_Read
  1962  0533  0873               	movf	?_I2C_Master_Read,w
  1963  0534  1283               	bcf	3,5	;RP0=0, select bank0
  1964  0535  1303               	bcf	3,6	;RP1=0, select bank0
  1965  0536  00B1               	movwf	??_setup
  1966  0537  0831               	movf	??_setup,w
  1967  0538  00CE               	movwf	_BASURA
  1968  0539                     l2653:
  1969                           
  1970                           ;main.c: 228:     I2C_Master_Stop();
  1971  0539  120A  158A  269C  120A  118A  	fcall	_I2C_Master_Stop
  1972  053E                     l2655:
  1973                           
  1974                           ;main.c: 229:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1975  053E  301A               	movlw	26
  1976  053F  1283               	bcf	3,5	;RP0=0, select bank0
  1977  0540  1303               	bcf	3,6	;RP1=0, select bank0
  1978  0541  00B2               	movwf	??_setup+1
  1979  0542  30F7               	movlw	247
  1980  0543  00B1               	movwf	??_setup
  1981  0544                     u1637:
  1982  0544  0BB1               	decfsz	??_setup,f
  1983  0545  2D44               	goto	u1637
  1984  0546  0BB2               	decfsz	??_setup+1,f
  1985  0547  2D44               	goto	u1637
  1986  0548  2D49               	nop2
  1987  0549                     l168:
  1988  0549  0008               	return
  1989  054A                     __end_of_setup:
  1990                           
  1991                           	psect	text2
  1992  0ED8                     __ptext2:	
  1993 ;; *************** function _uart_config *****************
  1994 ;; Defined at:
  1995 ;;		line 20 in file "UART_CONFIG.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;		None
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;		None
  2000 ;; Return value:  Size  Location     Type
  2001 ;;                  1    wreg      void 
  2002 ;; Registers used:
  2003 ;;		wreg, status,2
  2004 ;; Tracked objects:
  2005 ;;		On entry : 0/0
  2006 ;;		On exit  : 0/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2009 ;;      Params:         0       0       0       0       0
  2010 ;;      Locals:         0       0       0       0       0
  2011 ;;      Temps:          0       0       0       0       0
  2012 ;;      Totals:         0       0       0       0       0
  2013 ;;Total ram usage:        0 bytes
  2014 ;; Hardware stack levels used: 1
  2015 ;; Hardware stack levels required when called: 2
  2016 ;; This function calls:
  2017 ;;		Nothing
  2018 ;; This function is called by:
  2019 ;;		_setup
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           
  2024                           ;psect for function _uart_config
  2025  0ED8                     _uart_config:
  2026  0ED8                     l1761:	
  2027                           ;incstack = 0
  2028                           ; Regs used in _uart_config: [wreg+status,2]
  2029                           
  2030                           
  2031                           ;UART_CONFIG.c: 23:     TXSTAbits.SYNC = 0;
  2032  0ED8  1683               	bsf	3,5	;RP0=1, select bank1
  2033  0ED9  1303               	bcf	3,6	;RP1=0, select bank1
  2034  0EDA  1218               	bcf	24,4	;volatile
  2035                           
  2036                           ;UART_CONFIG.c: 24:  TXSTAbits.BRGH = 1;
  2037  0EDB  1518               	bsf	24,2	;volatile
  2038                           
  2039                           ;UART_CONFIG.c: 25:  TXSTAbits.TX9 = 0;
  2040  0EDC  1318               	bcf	24,6	;volatile
  2041                           
  2042                           ;UART_CONFIG.c: 26:  BAUDCTLbits.BRG16 = 0;
  2043  0EDD  1683               	bsf	3,5	;RP0=1, select bank3
  2044  0EDE  1703               	bsf	3,6	;RP1=1, select bank3
  2045  0EDF  1187               	bcf	7,3	;volatile
  2046  0EE0                     l1763:
  2047                           
  2048                           ;UART_CONFIG.c: 27:  SPBRGH = 0;
  2049  0EE0  1683               	bsf	3,5	;RP0=1, select bank1
  2050  0EE1  1303               	bcf	3,6	;RP1=0, select bank1
  2051  0EE2  019A               	clrf	26	;volatile
  2052  0EE3                     l1765:
  2053                           
  2054                           ;UART_CONFIG.c: 28:  SPBRG = 51;
  2055  0EE3  3033               	movlw	51
  2056  0EE4  0099               	movwf	25	;volatile
  2057  0EE5                     l1767:
  2058                           
  2059                           ;UART_CONFIG.c: 30:  RCSTAbits.SPEN = 1;
  2060  0EE5  1283               	bcf	3,5	;RP0=0, select bank0
  2061  0EE6  1303               	bcf	3,6	;RP1=0, select bank0
  2062  0EE7  1798               	bsf	24,7	;volatile
  2063  0EE8                     l1769:
  2064                           
  2065                           ;UART_CONFIG.c: 31:  RCSTAbits.RX9 = 0;
  2066  0EE8  1318               	bcf	24,6	;volatile
  2067  0EE9                     l1771:
  2068                           
  2069                           ;UART_CONFIG.c: 32:  RCSTAbits.CREN = 1;
  2070  0EE9  1618               	bsf	24,4	;volatile
  2071  0EEA                     l1773:
  2072                           
  2073                           ;UART_CONFIG.c: 33:  TXSTAbits.TXEN = 1;
  2074  0EEA  1683               	bsf	3,5	;RP0=1, select bank1
  2075  0EEB  1303               	bcf	3,6	;RP1=0, select bank1
  2076  0EEC  1698               	bsf	24,5	;volatile
  2077  0EED                     l303:
  2078  0EED  0008               	return
  2079  0EEE                     __end_of_uart_config:
  2080                           
  2081                           	psect	text3
  2082  0FC9                     __ptext3:	
  2083 ;; *************** function _osc_config *****************
  2084 ;; Defined at:
  2085 ;;		line 17 in file "Osc_config.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;  freq            1    wreg     unsigned char 
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;  freq            1    5[COMMON] unsigned char 
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  1    wreg      void 
  2092 ;; Registers used:
  2093 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2099 ;;      Params:         0       0       0       0       0
  2100 ;;      Locals:         1       0       0       0       0
  2101 ;;      Temps:          2       0       0       0       0
  2102 ;;      Totals:         3       0       0       0       0
  2103 ;;Total ram usage:        3 bytes
  2104 ;; Hardware stack levels used: 1
  2105 ;; Hardware stack levels required when called: 2
  2106 ;; This function calls:
  2107 ;;		Nothing
  2108 ;; This function is called by:
  2109 ;;		_setup
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113                           
  2114                           ;psect for function _osc_config
  2115  0FC9                     _osc_config:
  2116                           
  2117                           ;incstack = 0
  2118                           ; Regs used in _osc_config: [wreg-fsr0h+status,2+status,0]
  2119                           ;osc_config@freq stored from wreg
  2120  0FC9  00F5               	movwf	osc_config@freq
  2121  0FCA                     l1735:
  2122                           
  2123                           ;Osc_config.c: 17: void osc_config(uint8_t freq);Osc_config.c: 18: {;Osc_config.c: 19:  
      +                             switch(freq)
  2124  0FCA  2FE9               	goto	l1755
  2125  0FCB                     l1737:
  2126                           
  2127                           ;Osc_config.c: 22:             OSCCONbits.IRCF=0b100;
  2128  0FCB  1683               	bsf	3,5	;RP0=1, select bank1
  2129  0FCC  1303               	bcf	3,6	;RP1=0, select bank1
  2130  0FCD  080F               	movf	15,w	;volatile
  2131  0FCE  398F               	andlw	-113
  2132  0FCF  3840               	iorlw	64
  2133  0FD0  008F               	movwf	15	;volatile
  2134  0FD1                     l1739:
  2135                           
  2136                           ;Osc_config.c: 23:             OSCCONbits.SCS=1;
  2137  0FD1  140F               	bsf	15,0	;volatile
  2138                           
  2139                           ;Osc_config.c: 24:             break;
  2140  0FD2  2FFF               	goto	l235
  2141  0FD3                     l1741:
  2142                           
  2143                           ;Osc_config.c: 27:             OSCCONbits.IRCF=0b101;
  2144  0FD3  1683               	bsf	3,5	;RP0=1, select bank1
  2145  0FD4  1303               	bcf	3,6	;RP1=0, select bank1
  2146  0FD5  080F               	movf	15,w	;volatile
  2147  0FD6  398F               	andlw	-113
  2148  0FD7  3850               	iorlw	80
  2149  0FD8  008F               	movwf	15	;volatile
  2150  0FD9                     l1743:
  2151                           
  2152                           ;Osc_config.c: 28:             OSCCONbits.SCS=1;
  2153  0FD9  140F               	bsf	15,0	;volatile
  2154                           
  2155                           ;Osc_config.c: 29:             break;
  2156  0FDA  2FFF               	goto	l235
  2157  0FDB                     l1745:
  2158                           
  2159                           ;Osc_config.c: 32:             OSCCONbits.IRCF=0b110;
  2160  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  2161  0FDC  1303               	bcf	3,6	;RP1=0, select bank1
  2162  0FDD  080F               	movf	15,w	;volatile
  2163  0FDE  398F               	andlw	-113
  2164  0FDF  3860               	iorlw	96
  2165  0FE0  008F               	movwf	15	;volatile
  2166  0FE1                     l1747:
  2167                           
  2168                           ;Osc_config.c: 33:             OSCCONbits.SCS=1;
  2169  0FE1  140F               	bsf	15,0	;volatile
  2170                           
  2171                           ;Osc_config.c: 34:             break;
  2172  0FE2  2FFF               	goto	l235
  2173  0FE3                     l1749:
  2174                           
  2175                           ;Osc_config.c: 37:             OSCCONbits.IRCF=0b111;
  2176  0FE3  3070               	movlw	112
  2177  0FE4  1683               	bsf	3,5	;RP0=1, select bank1
  2178  0FE5  1303               	bcf	3,6	;RP1=0, select bank1
  2179  0FE6  048F               	iorwf	15,f	;volatile
  2180  0FE7                     l1751:
  2181                           
  2182                           ;Osc_config.c: 38:             OSCCONbits.SCS=1;
  2183  0FE7  140F               	bsf	15,0	;volatile
  2184                           
  2185                           ;Osc_config.c: 39:             break;
  2186  0FE8  2FFF               	goto	l235
  2187  0FE9                     l1755:
  2188  0FE9  0875               	movf	osc_config@freq,w
  2189  0FEA  00F3               	movwf	??_osc_config
  2190  0FEB  01F4               	clrf	??_osc_config+1
  2191                           
  2192                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2193                           ; Switch size 1, requested type "simple"
  2194                           ; Number of cases is 1, Range of values is 0 to 0
  2195                           ; switch strategies available:
  2196                           ; Name         Instructions Cycles
  2197                           ; simple_byte            4     3 (average)
  2198                           ; direct_byte           11     8 (fixed)
  2199                           ; jumptable            260     6 (fixed)
  2200                           ;	Chosen strategy is simple_byte
  2201  0FEC  0874               	movf	??_osc_config+1,w
  2202  0FED  3A00               	xorlw	0	; case 0
  2203  0FEE  1903               	skipnz
  2204  0FEF  2FF1               	goto	l2849
  2205  0FF0  2FFF               	goto	l235
  2206  0FF1                     l2849:
  2207                           
  2208                           ; Switch size 1, requested type "simple"
  2209                           ; Number of cases is 4, Range of values is 1 to 8
  2210                           ; switch strategies available:
  2211                           ; Name         Instructions Cycles
  2212                           ; simple_byte           13     7 (average)
  2213                           ; direct_byte           35    11 (fixed)
  2214                           ; jumptable            263     9 (fixed)
  2215                           ;	Chosen strategy is simple_byte
  2216  0FF1  0873               	movf	??_osc_config,w
  2217  0FF2  3A01               	xorlw	1	; case 1
  2218  0FF3  1903               	skipnz
  2219  0FF4  2FCB               	goto	l1737
  2220  0FF5  3A03               	xorlw	3	; case 2
  2221  0FF6  1903               	skipnz
  2222  0FF7  2FD3               	goto	l1741
  2223  0FF8  3A06               	xorlw	6	; case 4
  2224  0FF9  1903               	skipnz
  2225  0FFA  2FDB               	goto	l1745
  2226  0FFB  3A0C               	xorlw	12	; case 8
  2227  0FFC  1903               	skipnz
  2228  0FFD  2FE3               	goto	l1749
  2229  0FFE  2FFF               	goto	l235
  2230  0FFF                     l235:
  2231  0FFF  0008               	return
  2232  1000                     __end_of_osc_config:
  2233                           
  2234                           	psect	text4
  2235  0EA5                     __ptext4:	
  2236 ;; *************** function _I2C_Master_Write *****************
  2237 ;; Defined at:
  2238 ;;		line 65 in file "I2C.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;  d               2    3[COMMON] unsigned int 
  2241 ;; Auto vars:     Size  Location     Type
  2242 ;;		None
  2243 ;; Return value:  Size  Location     Type
  2244 ;;                  1    wreg      void 
  2245 ;; Registers used:
  2246 ;;		wreg, status,2, status,0, pclath, cstack
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : 0/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2252 ;;      Params:         2       0       0       0       0
  2253 ;;      Locals:         0       0       0       0       0
  2254 ;;      Temps:          0       0       0       0       0
  2255 ;;      Totals:         2       0       0       0       0
  2256 ;;Total ram usage:        2 bytes
  2257 ;; Hardware stack levels used: 1
  2258 ;; Hardware stack levels required when called: 3
  2259 ;; This function calls:
  2260 ;;		_I2C_Master_Wait
  2261 ;; This function is called by:
  2262 ;;		_main
  2263 ;;		_setup
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267                           
  2268                           ;psect for function _I2C_Master_Write
  2269  0EA5                     _I2C_Master_Write:
  2270  0EA5                     l2471:	
  2271                           ;incstack = 0
  2272                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2273                           
  2274                           
  2275                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2276  0EA5  120A  118A  27F3  120A  158A  	fcall	_I2C_Master_Wait
  2277  0EAA                     l2473:
  2278                           
  2279                           ;I2C.c: 68:     SSPBUF = d;
  2280  0EAA  0873               	movf	I2C_Master_Write@d,w
  2281  0EAB  1283               	bcf	3,5	;RP0=0, select bank0
  2282  0EAC  1303               	bcf	3,6	;RP1=0, select bank0
  2283  0EAD  0093               	movwf	19	;volatile
  2284  0EAE                     l47:
  2285  0EAE  0008               	return
  2286  0EAF                     __end_of_I2C_Master_Write:
  2287                           
  2288                           	psect	text5
  2289  0E9C                     __ptext5:	
  2290 ;; *************** function _I2C_Master_Stop *****************
  2291 ;; Defined at:
  2292 ;;		line 55 in file "I2C.c"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;		None
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;		None
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1    wreg      void 
  2299 ;; Registers used:
  2300 ;;		wreg, status,2, status,0, pclath, cstack
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2306 ;;      Params:         0       0       0       0       0
  2307 ;;      Locals:         0       0       0       0       0
  2308 ;;      Temps:          0       0       0       0       0
  2309 ;;      Totals:         0       0       0       0       0
  2310 ;;Total ram usage:        0 bytes
  2311 ;; Hardware stack levels used: 1
  2312 ;; Hardware stack levels required when called: 3
  2313 ;; This function calls:
  2314 ;;		_I2C_Master_Wait
  2315 ;; This function is called by:
  2316 ;;		_main
  2317 ;;		_setup
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           
  2322                           ;psect for function _I2C_Master_Stop
  2323  0E9C                     _I2C_Master_Stop:
  2324  0E9C                     l2467:	
  2325                           ;incstack = 0
  2326                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2327                           
  2328                           
  2329                           ;I2C.c: 57:     I2C_Master_Wait();
  2330  0E9C  120A  118A  27F3  120A  158A  	fcall	_I2C_Master_Wait
  2331  0EA1                     l2469:
  2332                           
  2333                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2334  0EA1  1683               	bsf	3,5	;RP0=1, select bank1
  2335  0EA2  1303               	bcf	3,6	;RP1=0, select bank1
  2336  0EA3  1511               	bsf	17,2	;volatile
  2337  0EA4                     l44:
  2338  0EA4  0008               	return
  2339  0EA5                     __end_of_I2C_Master_Stop:
  2340                           
  2341                           	psect	text6
  2342  0E93                     __ptext6:	
  2343 ;; *************** function _I2C_Master_Start *****************
  2344 ;; Defined at:
  2345 ;;		line 39 in file "I2C.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;		None
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;		None
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  1    wreg      void 
  2352 ;; Registers used:
  2353 ;;		wreg, status,2, status,0, pclath, cstack
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2359 ;;      Params:         0       0       0       0       0
  2360 ;;      Locals:         0       0       0       0       0
  2361 ;;      Temps:          0       0       0       0       0
  2362 ;;      Totals:         0       0       0       0       0
  2363 ;;Total ram usage:        0 bytes
  2364 ;; Hardware stack levels used: 1
  2365 ;; Hardware stack levels required when called: 3
  2366 ;; This function calls:
  2367 ;;		_I2C_Master_Wait
  2368 ;; This function is called by:
  2369 ;;		_main
  2370 ;;		_setup
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           
  2375                           ;psect for function _I2C_Master_Start
  2376  0E93                     _I2C_Master_Start:
  2377  0E93                     l2463:	
  2378                           ;incstack = 0
  2379                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2380                           
  2381                           
  2382                           ;I2C.c: 41:     I2C_Master_Wait();
  2383  0E93  120A  118A  27F3  120A  158A  	fcall	_I2C_Master_Wait
  2384  0E98                     l2465:
  2385                           
  2386                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2387  0E98  1683               	bsf	3,5	;RP0=1, select bank1
  2388  0E99  1303               	bcf	3,6	;RP1=0, select bank1
  2389  0E9A  1411               	bsf	17,0	;volatile
  2390  0E9B                     l38:
  2391  0E9B  0008               	return
  2392  0E9C                     __end_of_I2C_Master_Start:
  2393                           
  2394                           	psect	text7
  2395  0F99                     __ptext7:	
  2396 ;; *************** function _I2C_Master_Read *****************
  2397 ;; Defined at:
  2398 ;;		line 74 in file "I2C.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;  a               2    3[COMMON] unsigned short 
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;  temp            2    0[BANK0 ] unsigned short 
  2403 ;; Return value:  Size  Location     Type
  2404 ;;                  2    3[COMMON] unsigned short 
  2405 ;; Registers used:
  2406 ;;		wreg, status,2, status,0, pclath, cstack
  2407 ;; Tracked objects:
  2408 ;;		On entry : 0/0
  2409 ;;		On exit  : 0/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2412 ;;      Params:         2       0       0       0       0
  2413 ;;      Locals:         0       2       0       0       0
  2414 ;;      Temps:          2       0       0       0       0
  2415 ;;      Totals:         4       2       0       0       0
  2416 ;;Total ram usage:        6 bytes
  2417 ;; Hardware stack levels used: 1
  2418 ;; Hardware stack levels required when called: 3
  2419 ;; This function calls:
  2420 ;;		_I2C_Master_Wait
  2421 ;; This function is called by:
  2422 ;;		_main
  2423 ;;		_setup
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           
  2428                           ;psect for function _I2C_Master_Read
  2429  0F99                     _I2C_Master_Read:
  2430  0F99                     l2475:	
  2431                           ;incstack = 0
  2432                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2433                           
  2434                           
  2435                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2436  0F99  120A  118A  27F3  120A  158A  	fcall	_I2C_Master_Wait
  2437  0F9E                     l2477:
  2438                           
  2439                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2440  0F9E  1683               	bsf	3,5	;RP0=1, select bank1
  2441  0F9F  1303               	bcf	3,6	;RP1=0, select bank1
  2442  0FA0  1591               	bsf	17,3	;volatile
  2443                           
  2444                           ;I2C.c: 79:     I2C_Master_Wait();
  2445  0FA1  120A  118A  27F3  120A  158A  	fcall	_I2C_Master_Wait
  2446  0FA6                     l2479:
  2447                           
  2448                           ;I2C.c: 80:     temp = SSPBUF;
  2449  0FA6  1283               	bcf	3,5	;RP0=0, select bank0
  2450  0FA7  1303               	bcf	3,6	;RP1=0, select bank0
  2451  0FA8  0813               	movf	19,w	;volatile
  2452  0FA9  00F5               	movwf	??_I2C_Master_Read
  2453  0FAA  01F6               	clrf	??_I2C_Master_Read+1
  2454  0FAB  0875               	movf	??_I2C_Master_Read,w
  2455  0FAC  00A0               	movwf	I2C_Master_Read@temp
  2456  0FAD  0876               	movf	??_I2C_Master_Read+1,w
  2457  0FAE  00A1               	movwf	I2C_Master_Read@temp+1
  2458  0FAF                     l2481:
  2459                           
  2460                           ;I2C.c: 81:     I2C_Master_Wait();
  2461  0FAF  120A  118A  27F3  120A  158A  	fcall	_I2C_Master_Wait
  2462  0FB4                     l2483:
  2463                           
  2464                           ;I2C.c: 82:     if(a == 1){
  2465  0FB4  0373               	decf	I2C_Master_Read@a,w
  2466  0FB5  0474               	iorwf	I2C_Master_Read@a+1,w
  2467  0FB6  1D03               	btfss	3,2
  2468  0FB7  2FB9               	goto	u1331
  2469  0FB8  2FBA               	goto	u1330
  2470  0FB9                     u1331:
  2471  0FB9  2FBE               	goto	l50
  2472  0FBA                     u1330:
  2473  0FBA                     l2485:
  2474                           
  2475                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2476  0FBA  1683               	bsf	3,5	;RP0=1, select bank1
  2477  0FBB  1303               	bcf	3,6	;RP1=0, select bank1
  2478  0FBC  1291               	bcf	17,5	;volatile
  2479                           
  2480                           ;I2C.c: 84:     }else{
  2481  0FBD  2FC1               	goto	l51
  2482  0FBE                     l50:
  2483                           
  2484                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2485  0FBE  1683               	bsf	3,5	;RP0=1, select bank1
  2486  0FBF  1303               	bcf	3,6	;RP1=0, select bank1
  2487  0FC0  1691               	bsf	17,5	;volatile
  2488  0FC1                     l51:	
  2489                           ;I2C.c: 86:     }
  2490                           
  2491                           
  2492                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2493  0FC1  1611               	bsf	17,4	;volatile
  2494  0FC2                     l2487:
  2495                           
  2496                           ;I2C.c: 88:     return temp;
  2497  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  2498  0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  2499  0FC4  0821               	movf	I2C_Master_Read@temp+1,w
  2500  0FC5  00F4               	movwf	?_I2C_Master_Read+1
  2501  0FC6  0820               	movf	I2C_Master_Read@temp,w
  2502  0FC7  00F3               	movwf	?_I2C_Master_Read
  2503  0FC8                     l52:
  2504  0FC8  0008               	return
  2505  0FC9                     __end_of_I2C_Master_Read:
  2506                           
  2507                           	psect	text8
  2508  07F3                     __ptext8:	
  2509 ;; *************** function _I2C_Master_Wait *****************
  2510 ;; Defined at:
  2511 ;;		line 32 in file "I2C.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;		None
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;		None
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  1    wreg      void 
  2518 ;; Registers used:
  2519 ;;		wreg, status,2
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2525 ;;      Params:         0       0       0       0       0
  2526 ;;      Locals:         0       0       0       0       0
  2527 ;;      Temps:          0       0       0       0       0
  2528 ;;      Totals:         0       0       0       0       0
  2529 ;;Total ram usage:        0 bytes
  2530 ;; Hardware stack levels used: 1
  2531 ;; Hardware stack levels required when called: 2
  2532 ;; This function calls:
  2533 ;;		Nothing
  2534 ;; This function is called by:
  2535 ;;		_I2C_Master_Start
  2536 ;;		_I2C_Master_Stop
  2537 ;;		_I2C_Master_Write
  2538 ;;		_I2C_Master_Read
  2539 ;;		_I2C_Master_RepeatedStart
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543                           
  2544                           ;psect for function _I2C_Master_Wait
  2545  07F3                     _I2C_Master_Wait:
  2546  07F3                     l2421:	
  2547                           ;incstack = 0
  2548                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2549                           
  2550  07F3                     l32:	
  2551                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2552                           
  2553  07F3  1683               	bsf	3,5	;RP0=1, select bank1
  2554  07F4  1303               	bcf	3,6	;RP1=0, select bank1
  2555  07F5  1914               	btfsc	20,2	;volatile
  2556  07F6  2FF8               	goto	u1231
  2557  07F7  2FF9               	goto	u1230
  2558  07F8                     u1231:
  2559  07F8  2FF3               	goto	l32
  2560  07F9                     u1230:
  2561  07F9                     l2423:
  2562  07F9  0811               	movf	17,w	;volatile
  2563  07FA  391F               	andlw	31
  2564  07FB  1D03               	btfss	3,2
  2565  07FC  2FFE               	goto	u1241
  2566  07FD  2FFF               	goto	u1240
  2567  07FE                     u1241:
  2568  07FE  2FF3               	goto	l32
  2569  07FF                     u1240:
  2570  07FF                     l35:
  2571  07FF  0008               	return
  2572  0800                     __end_of_I2C_Master_Wait:
  2573                           
  2574                           	psect	text9
  2575  07B9                     __ptext9:	
  2576 ;; *************** function _I2C_Master_Init *****************
  2577 ;; Defined at:
  2578 ;;		line 16 in file "I2C.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;  c               4   13[BANK0 ] const unsigned long 
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;		None
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  1    wreg      void 
  2585 ;; Registers used:
  2586 ;;		wreg, status,2, status,0, pclath, cstack
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2592 ;;      Params:         0       4       0       0       0
  2593 ;;      Locals:         0       0       0       0       0
  2594 ;;      Temps:          4       0       0       0       0
  2595 ;;      Totals:         4       4       0       0       0
  2596 ;;Total ram usage:        8 bytes
  2597 ;; Hardware stack levels used: 1
  2598 ;; Hardware stack levels required when called: 3
  2599 ;; This function calls:
  2600 ;;		___lldiv
  2601 ;; This function is called by:
  2602 ;;		_setup
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           
  2607                           ;psect for function _I2C_Master_Init
  2608  07B9                     _I2C_Master_Init:
  2609  07B9                     l2451:	
  2610                           ;incstack = 0
  2611                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2612                           
  2613                           
  2614                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2615  07B9  3028               	movlw	40
  2616  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  2617  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  2618  07BC  0094               	movwf	20	;volatile
  2619  07BD                     l2453:
  2620                           
  2621                           ;I2C.c: 19:     SSPCON2 = 0;
  2622  07BD  1683               	bsf	3,5	;RP0=1, select bank1
  2623  07BE  1303               	bcf	3,6	;RP1=0, select bank1
  2624  07BF  0191               	clrf	17	;volatile
  2625  07C0                     l2455:
  2626                           
  2627                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2628  07C0  1283               	bcf	3,5	;RP0=0, select bank0
  2629  07C1  1303               	bcf	3,6	;RP1=0, select bank0
  2630  07C2  082D               	movf	I2C_Master_Init@c,w
  2631  07C3  00F4               	movwf	??_I2C_Master_Init
  2632  07C4  082E               	movf	I2C_Master_Init@c+1,w
  2633  07C5  00F5               	movwf	??_I2C_Master_Init+1
  2634  07C6  082F               	movf	I2C_Master_Init@c+2,w
  2635  07C7  00F6               	movwf	??_I2C_Master_Init+2
  2636  07C8  0830               	movf	I2C_Master_Init@c+3,w
  2637  07C9  00F7               	movwf	??_I2C_Master_Init+3
  2638  07CA  3002               	movlw	2
  2639  07CB                     u1325:
  2640  07CB  1003               	clrc
  2641  07CC  0DF4               	rlf	??_I2C_Master_Init,f
  2642  07CD  0DF5               	rlf	??_I2C_Master_Init+1,f
  2643  07CE  0DF6               	rlf	??_I2C_Master_Init+2,f
  2644  07CF  0DF7               	rlf	??_I2C_Master_Init+3,f
  2645  07D0                     u1320:
  2646  07D0  3EFF               	addlw	-1
  2647  07D1  1D03               	skipz
  2648  07D2  2FCB               	goto	u1325
  2649  07D3  0877               	movf	??_I2C_Master_Init+3,w
  2650  07D4  00A3               	movwf	___lldiv@divisor+3
  2651  07D5  0876               	movf	??_I2C_Master_Init+2,w
  2652  07D6  00A2               	movwf	___lldiv@divisor+2
  2653  07D7  0875               	movf	??_I2C_Master_Init+1,w
  2654  07D8  00A1               	movwf	___lldiv@divisor+1
  2655  07D9  0874               	movf	??_I2C_Master_Init,w
  2656  07DA  00A0               	movwf	___lldiv@divisor
  2657  07DB  3000               	movlw	0
  2658  07DC  00A7               	movwf	___lldiv@dividend+3
  2659  07DD  307A               	movlw	122
  2660  07DE  00A6               	movwf	___lldiv@dividend+2
  2661  07DF  3012               	movlw	18
  2662  07E0  00A5               	movwf	___lldiv@dividend+1
  2663  07E1  3000               	movlw	0
  2664  07E2  00A4               	movwf	___lldiv@dividend
  2665  07E3  120A  118A  26B7  120A  118A  	fcall	___lldiv
  2666  07E8  1283               	bcf	3,5	;RP0=0, select bank0
  2667  07E9  1303               	bcf	3,6	;RP1=0, select bank0
  2668  07EA  0820               	movf	?___lldiv,w
  2669  07EB  3EFF               	addlw	255
  2670  07EC  1683               	bsf	3,5	;RP0=1, select bank1
  2671  07ED  1303               	bcf	3,6	;RP1=0, select bank1
  2672  07EE  0093               	movwf	19	;volatile
  2673  07EF                     l2457:
  2674                           
  2675                           ;I2C.c: 21:     SSPSTAT = 0;
  2676  07EF  0194               	clrf	20	;volatile
  2677  07F0                     l2459:
  2678                           
  2679                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2680  07F0  1587               	bsf	7,3	;volatile
  2681  07F1                     l2461:
  2682                           
  2683                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2684  07F1  1607               	bsf	7,4	;volatile
  2685  07F2                     l29:
  2686  07F2  0008               	return
  2687  07F3                     __end_of_I2C_Master_Init:
  2688                           
  2689                           	psect	text10
  2690  06B7                     __ptext10:	
  2691 ;; *************** function ___lldiv *****************
  2692 ;; Defined at:
  2693 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  2694 ;; Parameters:    Size  Location     Type
  2695 ;;  divisor         4    0[BANK0 ] unsigned long 
  2696 ;;  dividend        4    4[BANK0 ] unsigned long 
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;  quotient        4    8[BANK0 ] unsigned long 
  2699 ;;  counter         1   12[BANK0 ] unsigned char 
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  4    0[BANK0 ] unsigned long 
  2702 ;; Registers used:
  2703 ;;		wreg, status,2, status,0
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2709 ;;      Params:         0       8       0       0       0
  2710 ;;      Locals:         0       5       0       0       0
  2711 ;;      Temps:          1       0       0       0       0
  2712 ;;      Totals:         1      13       0       0       0
  2713 ;;Total ram usage:       14 bytes
  2714 ;; Hardware stack levels used: 1
  2715 ;; Hardware stack levels required when called: 2
  2716 ;; This function calls:
  2717 ;;		Nothing
  2718 ;; This function is called by:
  2719 ;;		_I2C_Master_Init
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           
  2724                           ;psect for function ___lldiv
  2725  06B7                     ___lldiv:
  2726  06B7                     l2427:	
  2727                           ;incstack = 0
  2728                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2729                           
  2730  06B7  3000               	movlw	0
  2731  06B8  1283               	bcf	3,5	;RP0=0, select bank0
  2732  06B9  1303               	bcf	3,6	;RP1=0, select bank0
  2733  06BA  00AB               	movwf	___lldiv@quotient+3
  2734  06BB  3000               	movlw	0
  2735  06BC  00AA               	movwf	___lldiv@quotient+2
  2736  06BD  3000               	movlw	0
  2737  06BE  00A9               	movwf	___lldiv@quotient+1
  2738  06BF  3000               	movlw	0
  2739  06C0  00A8               	movwf	___lldiv@quotient
  2740  06C1  0823               	movf	___lldiv@divisor+3,w
  2741  06C2  0422               	iorwf	___lldiv@divisor+2,w
  2742  06C3  0421               	iorwf	___lldiv@divisor+1,w
  2743  06C4  0420               	iorwf	___lldiv@divisor,w
  2744  06C5  1903               	skipnz
  2745  06C6  2EC8               	goto	u1251
  2746  06C7  2EC9               	goto	u1250
  2747  06C8                     u1251:
  2748  06C8  2F16               	goto	l2447
  2749  06C9                     u1250:
  2750  06C9                     l2429:
  2751  06C9  01AC               	clrf	___lldiv@counter
  2752  06CA  0AAC               	incf	___lldiv@counter,f
  2753  06CB  2ED9               	goto	l2433
  2754  06CC                     l2431:
  2755  06CC  3001               	movlw	1
  2756  06CD  00F3               	movwf	??___lldiv
  2757  06CE                     u1265:
  2758  06CE  1003               	clrc
  2759  06CF  0DA0               	rlf	___lldiv@divisor,f
  2760  06D0  0DA1               	rlf	___lldiv@divisor+1,f
  2761  06D1  0DA2               	rlf	___lldiv@divisor+2,f
  2762  06D2  0DA3               	rlf	___lldiv@divisor+3,f
  2763  06D3  0BF3               	decfsz	??___lldiv,f
  2764  06D4  2ECE               	goto	u1265
  2765  06D5  3001               	movlw	1
  2766  06D6  00F3               	movwf	??___lldiv
  2767  06D7  0873               	movf	??___lldiv,w
  2768  06D8  07AC               	addwf	___lldiv@counter,f
  2769  06D9                     l2433:
  2770  06D9  1FA3               	btfss	___lldiv@divisor+3,7
  2771  06DA  2EDC               	goto	u1271
  2772  06DB  2EDD               	goto	u1270
  2773  06DC                     u1271:
  2774  06DC  2ECC               	goto	l2431
  2775  06DD                     u1270:
  2776  06DD                     l2435:
  2777  06DD  3001               	movlw	1
  2778  06DE  00F3               	movwf	??___lldiv
  2779  06DF                     u1285:
  2780  06DF  1003               	clrc
  2781  06E0  0DA8               	rlf	___lldiv@quotient,f
  2782  06E1  0DA9               	rlf	___lldiv@quotient+1,f
  2783  06E2  0DAA               	rlf	___lldiv@quotient+2,f
  2784  06E3  0DAB               	rlf	___lldiv@quotient+3,f
  2785  06E4  0BF3               	decfsz	??___lldiv,f
  2786  06E5  2EDF               	goto	u1285
  2787  06E6                     l2437:
  2788  06E6  0823               	movf	___lldiv@divisor+3,w
  2789  06E7  0227               	subwf	___lldiv@dividend+3,w
  2790  06E8  1D03               	skipz
  2791  06E9  2EF4               	goto	u1295
  2792  06EA  0822               	movf	___lldiv@divisor+2,w
  2793  06EB  0226               	subwf	___lldiv@dividend+2,w
  2794  06EC  1D03               	skipz
  2795  06ED  2EF4               	goto	u1295
  2796  06EE  0821               	movf	___lldiv@divisor+1,w
  2797  06EF  0225               	subwf	___lldiv@dividend+1,w
  2798  06F0  1D03               	skipz
  2799  06F1  2EF4               	goto	u1295
  2800  06F2  0820               	movf	___lldiv@divisor,w
  2801  06F3  0224               	subwf	___lldiv@dividend,w
  2802  06F4                     u1295:
  2803  06F4  1C03               	skipc
  2804  06F5  2EF7               	goto	u1291
  2805  06F6  2EF8               	goto	u1290
  2806  06F7                     u1291:
  2807  06F7  2F07               	goto	l2443
  2808  06F8                     u1290:
  2809  06F8                     l2439:
  2810  06F8  0820               	movf	___lldiv@divisor,w
  2811  06F9  02A4               	subwf	___lldiv@dividend,f
  2812  06FA  0821               	movf	___lldiv@divisor+1,w
  2813  06FB  1C03               	skipc
  2814  06FC  0F21               	incfsz	___lldiv@divisor+1,w
  2815  06FD  02A5               	subwf	___lldiv@dividend+1,f
  2816  06FE  0822               	movf	___lldiv@divisor+2,w
  2817  06FF  1C03               	skipc
  2818  0700  0F22               	incfsz	___lldiv@divisor+2,w
  2819  0701  02A6               	subwf	___lldiv@dividend+2,f
  2820  0702  0823               	movf	___lldiv@divisor+3,w
  2821  0703  1C03               	skipc
  2822  0704  0F23               	incfsz	___lldiv@divisor+3,w
  2823  0705  02A7               	subwf	___lldiv@dividend+3,f
  2824  0706                     l2441:
  2825  0706  1428               	bsf	___lldiv@quotient,0
  2826  0707                     l2443:
  2827  0707  3001               	movlw	1
  2828  0708                     u1305:
  2829  0708  1003               	clrc
  2830  0709  0CA3               	rrf	___lldiv@divisor+3,f
  2831  070A  0CA2               	rrf	___lldiv@divisor+2,f
  2832  070B  0CA1               	rrf	___lldiv@divisor+1,f
  2833  070C  0CA0               	rrf	___lldiv@divisor,f
  2834  070D  3EFF               	addlw	-1
  2835  070E  1D03               	skipz
  2836  070F  2F08               	goto	u1305
  2837  0710                     l2445:
  2838  0710  3001               	movlw	1
  2839  0711  02AC               	subwf	___lldiv@counter,f
  2840  0712  1D03               	btfss	3,2
  2841  0713  2F15               	goto	u1311
  2842  0714  2F16               	goto	u1310
  2843  0715                     u1311:
  2844  0715  2EDD               	goto	l2435
  2845  0716                     u1310:
  2846  0716                     l2447:
  2847  0716  082B               	movf	___lldiv@quotient+3,w
  2848  0717  00A3               	movwf	?___lldiv+3
  2849  0718  082A               	movf	___lldiv@quotient+2,w
  2850  0719  00A2               	movwf	?___lldiv+2
  2851  071A  0829               	movf	___lldiv@quotient+1,w
  2852  071B  00A1               	movwf	?___lldiv+1
  2853  071C  0828               	movf	___lldiv@quotient,w
  2854  071D  00A0               	movwf	?___lldiv
  2855  071E                     l425:
  2856  071E  0008               	return
  2857  071F                     __end_of___lldiv:
  2858                           
  2859                           	psect	text11
  2860  05D5                     __ptext11:	
  2861 ;; *************** function _conver1 *****************
  2862 ;; Defined at:
  2863 ;;		line 275 in file "main.c"
  2864 ;; Parameters:    Size  Location     Type
  2865 ;;		None
  2866 ;; Auto vars:     Size  Location     Type
  2867 ;;  temporal       16   14[BANK0 ] unsigned char [16]
  2868 ;; Return value:  Size  Location     Type
  2869 ;;                  1    wreg      PTR const unsigned char 
  2870 ;; Registers used:
  2871 ;;		wreg, status,2, status,0, pclath, cstack
  2872 ;; Tracked objects:
  2873 ;;		On entry : 0/0
  2874 ;;		On exit  : 0/0
  2875 ;;		Unchanged: 0/0
  2876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2877 ;;      Params:         0       0       0       0       0
  2878 ;;      Locals:         0      16       0       0       0
  2879 ;;      Temps:          0       3       0       0       0
  2880 ;;      Totals:         0      19       0       0       0
  2881 ;;Total ram usage:       19 bytes
  2882 ;; Hardware stack levels used: 1
  2883 ;; Hardware stack levels required when called: 3
  2884 ;; This function calls:
  2885 ;;		___awdiv
  2886 ;;		___awmod
  2887 ;; This function is called by:
  2888 ;;		_main
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           
  2893                           ;psect for function _conver1
  2894  05D5                     _conver1:
  2895  05D5                     l2671:	
  2896                           ;incstack = 0
  2897                           ; Regs used in _conver1: [wreg+status,2+status,0+pclath+cstack]
  2898                           
  2899                           
  2900                           ;main.c: 277:     char temporal[16];;main.c: 278:     temporal[0] = C1;
  2901  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  2902  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  2903  05D7  084B               	movf	_C1,w
  2904  05D8  00AB               	movwf	??_conver1
  2905  05D9  082B               	movf	??_conver1,w
  2906  05DA  00AE               	movwf	conver1@temporal
  2907                           
  2908                           ;main.c: 279:     temporal[1] = C2;
  2909  05DB  084A               	movf	_C2,w
  2910  05DC  00AB               	movwf	??_conver1
  2911  05DD  082B               	movf	??_conver1,w
  2912  05DE  00AF               	movwf	conver1@temporal+1
  2913                           
  2914                           ;main.c: 280:     temporal[2] = C3;
  2915  05DF  0849               	movf	_C3,w
  2916  05E0  00AB               	movwf	??_conver1
  2917  05E1  082B               	movf	??_conver1,w
  2918  05E2  00B0               	movwf	conver1@temporal+2
  2919                           
  2920                           ;main.c: 281:     temporal[3] = 0x2E;
  2921  05E3  302E               	movlw	46
  2922  05E4  00AB               	movwf	??_conver1
  2923  05E5  082B               	movf	??_conver1,w
  2924  05E6  00B1               	movwf	conver1@temporal+3
  2925                           
  2926                           ;main.c: 282:     temporal[4] = 0x20;
  2927  05E7  3020               	movlw	32
  2928  05E8  00AB               	movwf	??_conver1
  2929  05E9  082B               	movf	??_conver1,w
  2930  05EA  00B2               	movwf	conver1@temporal+4
  2931                           
  2932                           ;main.c: 283:     temporal[5] = DH;
  2933  05EB  0847               	movf	_DH,w
  2934  05EC  00AB               	movwf	??_conver1
  2935  05ED  082B               	movf	??_conver1,w
  2936  05EE  00B3               	movwf	conver1@temporal+5
  2937                           
  2938                           ;main.c: 284:     temporal[6] = UH;
  2939  05EF  0848               	movf	_UH,w
  2940  05F0  00AB               	movwf	??_conver1
  2941  05F1  082B               	movf	??_conver1,w
  2942  05F2  00B4               	movwf	conver1@temporal+6
  2943                           
  2944                           ;main.c: 285:     temporal[7] = 0x3A;
  2945  05F3  303A               	movlw	58
  2946  05F4  00AB               	movwf	??_conver1
  2947  05F5  082B               	movf	??_conver1,w
  2948  05F6  00B5               	movwf	conver1@temporal+7
  2949                           
  2950                           ;main.c: 286:     temporal[8] = DM;
  2951  05F7  0845               	movf	_DM,w
  2952  05F8  00AB               	movwf	??_conver1
  2953  05F9  082B               	movf	??_conver1,w
  2954  05FA  00B6               	movwf	conver1@temporal+8
  2955                           
  2956                           ;main.c: 287:     temporal[9] = UM;
  2957  05FB  0846               	movf	_UM,w
  2958  05FC  00AB               	movwf	??_conver1
  2959  05FD  082B               	movf	??_conver1,w
  2960  05FE  00B7               	movwf	conver1@temporal+9
  2961                           
  2962                           ;main.c: 288:     temporal[10] = 0x20;
  2963  05FF  3020               	movlw	32
  2964  0600  00AB               	movwf	??_conver1
  2965  0601  082B               	movf	??_conver1,w
  2966  0602  00B8               	movwf	conver1@temporal+10
  2967  0603                     l2673:
  2968                           
  2969                           ;main.c: 289:     temporal[11] = ((temperatura/10)%10+0x30);
  2970  0603  300A               	movlw	10
  2971  0604  00A4               	movwf	___awmod@divisor
  2972  0605  3000               	movlw	0
  2973  0606  00A5               	movwf	___awmod@divisor+1
  2974  0607  300A               	movlw	10
  2975  0608  00F3               	movwf	___awdiv@divisor
  2976  0609  3000               	movlw	0
  2977  060A  00F4               	movwf	___awdiv@divisor+1
  2978  060B  0842               	movf	_temperatura,w
  2979  060C  00AB               	movwf	??_conver1
  2980  060D  01AC               	clrf	??_conver1+1
  2981  060E  082B               	movf	??_conver1,w
  2982  060F  00F5               	movwf	___awdiv@dividend
  2983  0610  082C               	movf	??_conver1+1,w
  2984  0611  00F6               	movwf	___awdiv@dividend+1
  2985  0612  120A  118A  264E  120A  118A  	fcall	___awdiv
  2986  0617  0874               	movf	?___awdiv+1,w
  2987  0618  1283               	bcf	3,5	;RP0=0, select bank0
  2988  0619  1303               	bcf	3,6	;RP1=0, select bank0
  2989  061A  00A7               	movwf	___awmod@dividend+1
  2990  061B  0873               	movf	?___awdiv,w
  2991  061C  00A6               	movwf	___awmod@dividend
  2992  061D  120A  118A  271F  120A  118A  	fcall	___awmod
  2993  0622  1283               	bcf	3,5	;RP0=0, select bank0
  2994  0623  1303               	bcf	3,6	;RP1=0, select bank0
  2995  0624  0824               	movf	?___awmod,w
  2996  0625  3E30               	addlw	48
  2997  0626  00AD               	movwf	??_conver1+2
  2998  0627  082D               	movf	??_conver1+2,w
  2999  0628  00B9               	movwf	conver1@temporal+11
  3000  0629                     l2675:
  3001                           
  3002                           ;main.c: 290:     temporal[12] = ((temperatura%10)+0x30);
  3003  0629  300A               	movlw	10
  3004  062A  00A4               	movwf	___awmod@divisor
  3005  062B  3000               	movlw	0
  3006  062C  00A5               	movwf	___awmod@divisor+1
  3007  062D  0842               	movf	_temperatura,w
  3008  062E  00AB               	movwf	??_conver1
  3009  062F  01AC               	clrf	??_conver1+1
  3010  0630  082B               	movf	??_conver1,w
  3011  0631  00A6               	movwf	___awmod@dividend
  3012  0632  082C               	movf	??_conver1+1,w
  3013  0633  00A7               	movwf	___awmod@dividend+1
  3014  0634  120A  118A  271F  120A  118A  	fcall	___awmod
  3015  0639  1283               	bcf	3,5	;RP0=0, select bank0
  3016  063A  1303               	bcf	3,6	;RP1=0, select bank0
  3017  063B  0824               	movf	?___awmod,w
  3018  063C  3E30               	addlw	48
  3019  063D  00AD               	movwf	??_conver1+2
  3020  063E  082D               	movf	??_conver1+2,w
  3021  063F  00BA               	movwf	conver1@temporal+12
  3022                           
  3023                           ;main.c: 291:     temporal[13] = 0xDF;
  3024  0640  30DF               	movlw	223
  3025  0641  00AB               	movwf	??_conver1
  3026  0642  082B               	movf	??_conver1,w
  3027  0643  00BB               	movwf	conver1@temporal+13
  3028                           
  3029                           ;main.c: 292:     temporal[14] = 0x43;
  3030  0644  3043               	movlw	67
  3031  0645  00AB               	movwf	??_conver1
  3032  0646  082B               	movf	??_conver1,w
  3033  0647  00BC               	movwf	conver1@temporal+14
  3034                           
  3035                           ;main.c: 293:     temporal[15] = 0x20;
  3036  0648  3020               	movlw	32
  3037  0649  00AB               	movwf	??_conver1
  3038  064A  082B               	movf	??_conver1,w
  3039  064B  00BD               	movwf	conver1@temporal+15
  3040                           
  3041                           ;main.c: 294:     return temporal;
  3042  064C  302E               	movlw	(low (conver1@temporal| 0))& (0+255)
  3043  064D                     l176:
  3044  064D  0008               	return
  3045  064E                     __end_of_conver1:
  3046                           
  3047                           	psect	text12
  3048  071F                     __ptext12:	
  3049 ;; *************** function ___awmod *****************
  3050 ;; Defined at:
  3051 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;  divisor         2    4[BANK0 ] int 
  3054 ;;  dividend        2    6[BANK0 ] int 
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;  sign            1   10[BANK0 ] unsigned char 
  3057 ;;  counter         1    9[BANK0 ] unsigned char 
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  2    4[BANK0 ] int 
  3060 ;; Registers used:
  3061 ;;		wreg, status,2, status,0
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3067 ;;      Params:         0       4       0       0       0
  3068 ;;      Locals:         0       2       0       0       0
  3069 ;;      Temps:          0       1       0       0       0
  3070 ;;      Totals:         0       7       0       0       0
  3071 ;;Total ram usage:        7 bytes
  3072 ;; Hardware stack levels used: 1
  3073 ;; Hardware stack levels required when called: 2
  3074 ;; This function calls:
  3075 ;;		Nothing
  3076 ;; This function is called by:
  3077 ;;		_conver1
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           
  3082                           ;psect for function ___awmod
  3083  071F                     ___awmod:
  3084  071F                     l2515:	
  3085                           ;incstack = 0
  3086                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3087                           
  3088  071F  1283               	bcf	3,5	;RP0=0, select bank0
  3089  0720  1303               	bcf	3,6	;RP1=0, select bank0
  3090  0721  01AA               	clrf	___awmod@sign
  3091  0722                     l2517:
  3092  0722  1FA7               	btfss	___awmod@dividend+1,7
  3093  0723  2F25               	goto	u1341
  3094  0724  2F26               	goto	u1340
  3095  0725                     u1341:
  3096  0725  2F2D               	goto	l2523
  3097  0726                     u1340:
  3098  0726                     l2519:
  3099  0726  09A6               	comf	___awmod@dividend,f
  3100  0727  09A7               	comf	___awmod@dividend+1,f
  3101  0728  0AA6               	incf	___awmod@dividend,f
  3102  0729  1903               	skipnz
  3103  072A  0AA7               	incf	___awmod@dividend+1,f
  3104  072B                     l2521:
  3105  072B  01AA               	clrf	___awmod@sign
  3106  072C  0AAA               	incf	___awmod@sign,f
  3107  072D                     l2523:
  3108  072D  1FA5               	btfss	___awmod@divisor+1,7
  3109  072E  2F30               	goto	u1351
  3110  072F  2F31               	goto	u1350
  3111  0730                     u1351:
  3112  0730  2F36               	goto	l2527
  3113  0731                     u1350:
  3114  0731                     l2525:
  3115  0731  09A4               	comf	___awmod@divisor,f
  3116  0732  09A5               	comf	___awmod@divisor+1,f
  3117  0733  0AA4               	incf	___awmod@divisor,f
  3118  0734  1903               	skipnz
  3119  0735  0AA5               	incf	___awmod@divisor+1,f
  3120  0736                     l2527:
  3121  0736  0824               	movf	___awmod@divisor,w
  3122  0737  0425               	iorwf	___awmod@divisor+1,w
  3123  0738  1903               	btfsc	3,2
  3124  0739  2F3B               	goto	u1361
  3125  073A  2F3C               	goto	u1360
  3126  073B                     u1361:
  3127  073B  2F6B               	goto	l2545
  3128  073C                     u1360:
  3129  073C                     l2529:
  3130  073C  01A9               	clrf	___awmod@counter
  3131  073D  0AA9               	incf	___awmod@counter,f
  3132  073E  2F4A               	goto	l2535
  3133  073F                     l2531:
  3134  073F  3001               	movlw	1
  3135  0740                     u1375:
  3136  0740  1003               	clrc
  3137  0741  0DA4               	rlf	___awmod@divisor,f
  3138  0742  0DA5               	rlf	___awmod@divisor+1,f
  3139  0743  3EFF               	addlw	-1
  3140  0744  1D03               	skipz
  3141  0745  2F40               	goto	u1375
  3142  0746                     l2533:
  3143  0746  3001               	movlw	1
  3144  0747  00A8               	movwf	??___awmod
  3145  0748  0828               	movf	??___awmod,w
  3146  0749  07A9               	addwf	___awmod@counter,f
  3147  074A                     l2535:
  3148  074A  1FA5               	btfss	___awmod@divisor+1,7
  3149  074B  2F4D               	goto	u1381
  3150  074C  2F4E               	goto	u1380
  3151  074D                     u1381:
  3152  074D  2F3F               	goto	l2531
  3153  074E                     u1380:
  3154  074E                     l2537:
  3155  074E  0825               	movf	___awmod@divisor+1,w
  3156  074F  0227               	subwf	___awmod@dividend+1,w
  3157  0750  1D03               	skipz
  3158  0751  2F54               	goto	u1395
  3159  0752  0824               	movf	___awmod@divisor,w
  3160  0753  0226               	subwf	___awmod@dividend,w
  3161  0754                     u1395:
  3162  0754  1C03               	skipc
  3163  0755  2F57               	goto	u1391
  3164  0756  2F58               	goto	u1390
  3165  0757                     u1391:
  3166  0757  2F5E               	goto	l2541
  3167  0758                     u1390:
  3168  0758                     l2539:
  3169  0758  0824               	movf	___awmod@divisor,w
  3170  0759  02A6               	subwf	___awmod@dividend,f
  3171  075A  0825               	movf	___awmod@divisor+1,w
  3172  075B  1C03               	skipc
  3173  075C  03A7               	decf	___awmod@dividend+1,f
  3174  075D  02A7               	subwf	___awmod@dividend+1,f
  3175  075E                     l2541:
  3176  075E  3001               	movlw	1
  3177  075F                     u1405:
  3178  075F  1003               	clrc
  3179  0760  0CA5               	rrf	___awmod@divisor+1,f
  3180  0761  0CA4               	rrf	___awmod@divisor,f
  3181  0762  3EFF               	addlw	-1
  3182  0763  1D03               	skipz
  3183  0764  2F5F               	goto	u1405
  3184  0765                     l2543:
  3185  0765  3001               	movlw	1
  3186  0766  02A9               	subwf	___awmod@counter,f
  3187  0767  1D03               	btfss	3,2
  3188  0768  2F6A               	goto	u1411
  3189  0769  2F6B               	goto	u1410
  3190  076A                     u1411:
  3191  076A  2F4E               	goto	l2537
  3192  076B                     u1410:
  3193  076B                     l2545:
  3194  076B  082A               	movf	___awmod@sign,w
  3195  076C  1903               	btfsc	3,2
  3196  076D  2F6F               	goto	u1421
  3197  076E  2F70               	goto	u1420
  3198  076F                     u1421:
  3199  076F  2F75               	goto	l2549
  3200  0770                     u1420:
  3201  0770                     l2547:
  3202  0770  09A6               	comf	___awmod@dividend,f
  3203  0771  09A7               	comf	___awmod@dividend+1,f
  3204  0772  0AA6               	incf	___awmod@dividend,f
  3205  0773  1903               	skipnz
  3206  0774  0AA7               	incf	___awmod@dividend+1,f
  3207  0775                     l2549:
  3208  0775  0827               	movf	___awmod@dividend+1,w
  3209  0776  00A5               	movwf	?___awmod+1
  3210  0777  0826               	movf	___awmod@dividend,w
  3211  0778  00A4               	movwf	?___awmod
  3212  0779                     l555:
  3213  0779  0008               	return
  3214  077A                     __end_of___awmod:
  3215                           
  3216                           	psect	text13
  3217  064E                     __ptext13:	
  3218 ;; *************** function ___awdiv *****************
  3219 ;; Defined at:
  3220 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;  divisor         2    3[COMMON] int 
  3223 ;;  dividend        2    5[COMMON] int 
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;  quotient        2    2[BANK0 ] int 
  3226 ;;  sign            1    1[BANK0 ] unsigned char 
  3227 ;;  counter         1    0[BANK0 ] unsigned char 
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  2    3[COMMON] int 
  3230 ;; Registers used:
  3231 ;;		wreg, status,2, status,0
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3237 ;;      Params:         4       0       0       0       0
  3238 ;;      Locals:         0       4       0       0       0
  3239 ;;      Temps:          1       0       0       0       0
  3240 ;;      Totals:         5       4       0       0       0
  3241 ;;Total ram usage:        9 bytes
  3242 ;; Hardware stack levels used: 1
  3243 ;; Hardware stack levels required when called: 2
  3244 ;; This function calls:
  3245 ;;		Nothing
  3246 ;; This function is called by:
  3247 ;;		_conver1
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           
  3252                           ;psect for function ___awdiv
  3253  064E                     ___awdiv:
  3254  064E                     l1875:	
  3255                           ;incstack = 0
  3256                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3257                           
  3258  064E  1283               	bcf	3,5	;RP0=0, select bank0
  3259  064F  1303               	bcf	3,6	;RP1=0, select bank0
  3260  0650  01A1               	clrf	___awdiv@sign
  3261  0651                     l1877:
  3262  0651  1FF4               	btfss	___awdiv@divisor+1,7
  3263  0652  2E54               	goto	u731
  3264  0653  2E55               	goto	u730
  3265  0654                     u731:
  3266  0654  2E5C               	goto	l1883
  3267  0655                     u730:
  3268  0655                     l1879:
  3269  0655  09F3               	comf	___awdiv@divisor,f
  3270  0656  09F4               	comf	___awdiv@divisor+1,f
  3271  0657  0AF3               	incf	___awdiv@divisor,f
  3272  0658  1903               	skipnz
  3273  0659  0AF4               	incf	___awdiv@divisor+1,f
  3274  065A                     l1881:
  3275  065A  01A1               	clrf	___awdiv@sign
  3276  065B  0AA1               	incf	___awdiv@sign,f
  3277  065C                     l1883:
  3278  065C  1FF6               	btfss	___awdiv@dividend+1,7
  3279  065D  2E5F               	goto	u741
  3280  065E  2E60               	goto	u740
  3281  065F                     u741:
  3282  065F  2E69               	goto	l1889
  3283  0660                     u740:
  3284  0660                     l1885:
  3285  0660  09F5               	comf	___awdiv@dividend,f
  3286  0661  09F6               	comf	___awdiv@dividend+1,f
  3287  0662  0AF5               	incf	___awdiv@dividend,f
  3288  0663  1903               	skipnz
  3289  0664  0AF6               	incf	___awdiv@dividend+1,f
  3290  0665                     l1887:
  3291  0665  3001               	movlw	1
  3292  0666  00F7               	movwf	??___awdiv
  3293  0667  0877               	movf	??___awdiv,w
  3294  0668  06A1               	xorwf	___awdiv@sign,f
  3295  0669                     l1889:
  3296  0669  01A2               	clrf	___awdiv@quotient
  3297  066A  01A3               	clrf	___awdiv@quotient+1
  3298  066B                     l1891:
  3299  066B  0873               	movf	___awdiv@divisor,w
  3300  066C  0474               	iorwf	___awdiv@divisor+1,w
  3301  066D  1903               	btfsc	3,2
  3302  066E  2E70               	goto	u751
  3303  066F  2E71               	goto	u750
  3304  0670                     u751:
  3305  0670  2EA8               	goto	l1911
  3306  0671                     u750:
  3307  0671                     l1893:
  3308  0671  01A0               	clrf	___awdiv@counter
  3309  0672  0AA0               	incf	___awdiv@counter,f
  3310  0673  2E7F               	goto	l1899
  3311  0674                     l1895:
  3312  0674  3001               	movlw	1
  3313  0675                     u765:
  3314  0675  1003               	clrc
  3315  0676  0DF3               	rlf	___awdiv@divisor,f
  3316  0677  0DF4               	rlf	___awdiv@divisor+1,f
  3317  0678  3EFF               	addlw	-1
  3318  0679  1D03               	skipz
  3319  067A  2E75               	goto	u765
  3320  067B                     l1897:
  3321  067B  3001               	movlw	1
  3322  067C  00F7               	movwf	??___awdiv
  3323  067D  0877               	movf	??___awdiv,w
  3324  067E  07A0               	addwf	___awdiv@counter,f
  3325  067F                     l1899:
  3326  067F  1FF4               	btfss	___awdiv@divisor+1,7
  3327  0680  2E82               	goto	u771
  3328  0681  2E83               	goto	u770
  3329  0682                     u771:
  3330  0682  2E74               	goto	l1895
  3331  0683                     u770:
  3332  0683                     l1901:
  3333  0683  3001               	movlw	1
  3334  0684                     u785:
  3335  0684  1003               	clrc
  3336  0685  0DA2               	rlf	___awdiv@quotient,f
  3337  0686  0DA3               	rlf	___awdiv@quotient+1,f
  3338  0687  3EFF               	addlw	-1
  3339  0688  1D03               	skipz
  3340  0689  2E84               	goto	u785
  3341  068A  0874               	movf	___awdiv@divisor+1,w
  3342  068B  0276               	subwf	___awdiv@dividend+1,w
  3343  068C  1D03               	skipz
  3344  068D  2E90               	goto	u795
  3345  068E  0873               	movf	___awdiv@divisor,w
  3346  068F  0275               	subwf	___awdiv@dividend,w
  3347  0690                     u795:
  3348  0690  1C03               	skipc
  3349  0691  2E93               	goto	u791
  3350  0692  2E94               	goto	u790
  3351  0693                     u791:
  3352  0693  2E9B               	goto	l1907
  3353  0694                     u790:
  3354  0694                     l1903:
  3355  0694  0873               	movf	___awdiv@divisor,w
  3356  0695  02F5               	subwf	___awdiv@dividend,f
  3357  0696  0874               	movf	___awdiv@divisor+1,w
  3358  0697  1C03               	skipc
  3359  0698  03F6               	decf	___awdiv@dividend+1,f
  3360  0699  02F6               	subwf	___awdiv@dividend+1,f
  3361  069A                     l1905:
  3362  069A  1422               	bsf	___awdiv@quotient,0
  3363  069B                     l1907:
  3364  069B  3001               	movlw	1
  3365  069C                     u805:
  3366  069C  1003               	clrc
  3367  069D  0CF4               	rrf	___awdiv@divisor+1,f
  3368  069E  0CF3               	rrf	___awdiv@divisor,f
  3369  069F  3EFF               	addlw	-1
  3370  06A0  1D03               	skipz
  3371  06A1  2E9C               	goto	u805
  3372  06A2                     l1909:
  3373  06A2  3001               	movlw	1
  3374  06A3  02A0               	subwf	___awdiv@counter,f
  3375  06A4  1D03               	btfss	3,2
  3376  06A5  2EA7               	goto	u811
  3377  06A6  2EA8               	goto	u810
  3378  06A7                     u811:
  3379  06A7  2E83               	goto	l1901
  3380  06A8                     u810:
  3381  06A8                     l1911:
  3382  06A8  0821               	movf	___awdiv@sign,w
  3383  06A9  1903               	btfsc	3,2
  3384  06AA  2EAC               	goto	u821
  3385  06AB  2EAD               	goto	u820
  3386  06AC                     u821:
  3387  06AC  2EB2               	goto	l1915
  3388  06AD                     u820:
  3389  06AD                     l1913:
  3390  06AD  09A2               	comf	___awdiv@quotient,f
  3391  06AE  09A3               	comf	___awdiv@quotient+1,f
  3392  06AF  0AA2               	incf	___awdiv@quotient,f
  3393  06B0  1903               	skipnz
  3394  06B1  0AA3               	incf	___awdiv@quotient+1,f
  3395  06B2                     l1915:
  3396  06B2  0823               	movf	___awdiv@quotient+1,w
  3397  06B3  00F4               	movwf	?___awdiv+1
  3398  06B4  0822               	movf	___awdiv@quotient,w
  3399  06B5  00F3               	movwf	?___awdiv
  3400  06B6                     l542:
  3401  06B6  0008               	return
  3402  06B7                     __end_of___awdiv:
  3403                           
  3404                           	psect	text14
  3405  054A                     __ptext14:	
  3406 ;; *************** function _conver *****************
  3407 ;; Defined at:
  3408 ;;		line 232 in file "main.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;		None
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;  temporal       16   16[BANK0 ] unsigned char [16]
  3413 ;;  temporal       16    0[BANK0 ] unsigned char [16]
  3414 ;; Return value:  Size  Location     Type
  3415 ;;                  1    wreg      PTR const unsigned char 
  3416 ;; Registers used:
  3417 ;;		wreg, status,2, status,0
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 0/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3423 ;;      Params:         0       0       0       0       0
  3424 ;;      Locals:         0      32       0       0       0
  3425 ;;      Temps:          1       0       0       0       0
  3426 ;;      Totals:         1      32       0       0       0
  3427 ;;Total ram usage:       33 bytes
  3428 ;; Hardware stack levels used: 1
  3429 ;; Hardware stack levels required when called: 2
  3430 ;; This function calls:
  3431 ;;		Nothing
  3432 ;; This function is called by:
  3433 ;;		_main
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           
  3438                           ;psect for function _conver
  3439  054A                     _conver:
  3440  054A                     l2113:	
  3441                           ;incstack = 0
  3442                           ; Regs used in _conver: [wreg+status,2+status,0]
  3443                           
  3444                           
  3445                           ;main.c: 233:     if (CERRADO==0){
  3446  054A  1283               	bcf	3,5	;RP0=0, select bank0
  3447  054B  1303               	bcf	3,6	;RP1=0, select bank0
  3448  054C  0844               	movf	_CERRADO,w
  3449  054D  1D03               	btfss	3,2
  3450  054E  2D50               	goto	u1001
  3451  054F  2D51               	goto	u1000
  3452  0550                     u1001:
  3453  0550  2D93               	goto	l2121
  3454  0551                     u1000:
  3455  0551                     l2115:
  3456                           
  3457                           ;main.c: 234:         char temporal[16];;main.c: 235:         temporal[0] = 0x50;
  3458  0551  3050               	movlw	80
  3459  0552  00F3               	movwf	??_conver
  3460  0553  0873               	movf	??_conver,w
  3461  0554  00A0               	movwf	conver@temporal
  3462                           
  3463                           ;main.c: 236:         temporal[1] = 0x41;
  3464  0555  3041               	movlw	65
  3465  0556  00F3               	movwf	??_conver
  3466  0557  0873               	movf	??_conver,w
  3467  0558  00A1               	movwf	conver@temporal+1
  3468                           
  3469                           ;main.c: 237:         temporal[2] = 0x52;
  3470  0559  3052               	movlw	82
  3471  055A  00F3               	movwf	??_conver
  3472  055B  0873               	movf	??_conver,w
  3473  055C  00A2               	movwf	conver@temporal+2
  3474                           
  3475                           ;main.c: 238:         temporal[3] = 0x51;
  3476  055D  3051               	movlw	81
  3477  055E  00F3               	movwf	??_conver
  3478  055F  0873               	movf	??_conver,w
  3479  0560  00A3               	movwf	conver@temporal+3
  3480                           
  3481                           ;main.c: 239:         temporal[4] = 0x55;
  3482  0561  3055               	movlw	85
  3483  0562  00F3               	movwf	??_conver
  3484  0563  0873               	movf	??_conver,w
  3485  0564  00A4               	movwf	conver@temporal+4
  3486                           
  3487                           ;main.c: 240:         temporal[5] = 0x45;
  3488  0565  3045               	movlw	69
  3489  0566  00F3               	movwf	??_conver
  3490  0567  0873               	movf	??_conver,w
  3491  0568  00A5               	movwf	conver@temporal+5
  3492                           
  3493                           ;main.c: 241:         temporal[6] = 0x4F;
  3494  0569  304F               	movlw	79
  3495  056A  00F3               	movwf	??_conver
  3496  056B  0873               	movf	??_conver,w
  3497  056C  00A6               	movwf	conver@temporal+6
  3498                           
  3499                           ;main.c: 242:         temporal[7] = 0x53;
  3500  056D  3053               	movlw	83
  3501  056E  00F3               	movwf	??_conver
  3502  056F  0873               	movf	??_conver,w
  3503  0570  00A7               	movwf	conver@temporal+7
  3504                           
  3505                           ;main.c: 243:         temporal[8] = 0x3A;
  3506  0571  303A               	movlw	58
  3507  0572  00F3               	movwf	??_conver
  3508  0573  0873               	movf	??_conver,w
  3509  0574  00A8               	movwf	conver@temporal+8
  3510                           
  3511                           ;main.c: 244:         temporal[9] = 0X20;
  3512  0575  3020               	movlw	32
  3513  0576  00F3               	movwf	??_conver
  3514  0577  0873               	movf	??_conver,w
  3515  0578  00A9               	movwf	conver@temporal+9
  3516                           
  3517                           ;main.c: 245:         temporal[10] = 0x30;
  3518  0579  3030               	movlw	48
  3519  057A  00F3               	movwf	??_conver
  3520  057B  0873               	movf	??_conver,w
  3521  057C  00AA               	movwf	conver@temporal+10
  3522                           
  3523                           ;main.c: 246:         temporal[11] = NUM;
  3524  057D  084F               	movf	_NUM,w
  3525  057E  00F3               	movwf	??_conver
  3526  057F  0873               	movf	??_conver,w
  3527  0580  00AB               	movwf	conver@temporal+11
  3528                           
  3529                           ;main.c: 247:         temporal[12] = 0x20;
  3530  0581  3020               	movlw	32
  3531  0582  00F3               	movwf	??_conver
  3532  0583  0873               	movf	??_conver,w
  3533  0584  00AC               	movwf	conver@temporal+12
  3534                           
  3535                           ;main.c: 248:         temporal[13] = 0x20;
  3536  0585  3020               	movlw	32
  3537  0586  00F3               	movwf	??_conver
  3538  0587  0873               	movf	??_conver,w
  3539  0588  00AD               	movwf	conver@temporal+13
  3540                           
  3541                           ;main.c: 249:         temporal[14] = 0x20;
  3542  0589  3020               	movlw	32
  3543  058A  00F3               	movwf	??_conver
  3544  058B  0873               	movf	??_conver,w
  3545  058C  00AE               	movwf	conver@temporal+14
  3546                           
  3547                           ;main.c: 250:         temporal[15] = 0x20;
  3548  058D  3020               	movlw	32
  3549  058E  00F3               	movwf	??_conver
  3550  058F  0873               	movf	??_conver,w
  3551  0590  00AF               	movwf	conver@temporal+15
  3552                           
  3553                           ;main.c: 251:         return temporal;
  3554  0591  3020               	movlw	(low (conver@temporal| 0))& (0+255)
  3555  0592  2DD4               	goto	l172
  3556  0593                     l2121:
  3557                           
  3558                           ;main.c: 254:         char temporal[16];;main.c: 255:         temporal[0] = 0x43;
  3559  0593  3043               	movlw	67
  3560  0594  00F3               	movwf	??_conver
  3561  0595  0873               	movf	??_conver,w
  3562  0596  00B0               	movwf	conver@temporal_275
  3563                           
  3564                           ;main.c: 256:         temporal[1] = 0x45;
  3565  0597  3045               	movlw	69
  3566  0598  00F3               	movwf	??_conver
  3567  0599  0873               	movf	??_conver,w
  3568  059A  00B1               	movwf	conver@temporal_275+1
  3569                           
  3570                           ;main.c: 257:         temporal[2] = 0x52;
  3571  059B  3052               	movlw	82
  3572  059C  00F3               	movwf	??_conver
  3573  059D  0873               	movf	??_conver,w
  3574  059E  00B2               	movwf	conver@temporal_275+2
  3575                           
  3576                           ;main.c: 258:         temporal[3] = 0x52;
  3577  059F  3052               	movlw	82
  3578  05A0  00F3               	movwf	??_conver
  3579  05A1  0873               	movf	??_conver,w
  3580  05A2  00B3               	movwf	conver@temporal_275+3
  3581                           
  3582                           ;main.c: 259:         temporal[4] = 0x41;
  3583  05A3  3041               	movlw	65
  3584  05A4  00F3               	movwf	??_conver
  3585  05A5  0873               	movf	??_conver,w
  3586  05A6  00B4               	movwf	conver@temporal_275+4
  3587                           
  3588                           ;main.c: 260:         temporal[5] = 0x44;
  3589  05A7  3044               	movlw	68
  3590  05A8  00F3               	movwf	??_conver
  3591  05A9  0873               	movf	??_conver,w
  3592  05AA  00B5               	movwf	conver@temporal_275+5
  3593                           
  3594                           ;main.c: 261:         temporal[6] = 0x4F;
  3595  05AB  304F               	movlw	79
  3596  05AC  00F3               	movwf	??_conver
  3597  05AD  0873               	movf	??_conver,w
  3598  05AE  00B6               	movwf	conver@temporal_275+6
  3599                           
  3600                           ;main.c: 262:         temporal[7] = 0x20;
  3601  05AF  3020               	movlw	32
  3602  05B0  00F3               	movwf	??_conver
  3603  05B1  0873               	movf	??_conver,w
  3604  05B2  00B7               	movwf	conver@temporal_275+7
  3605                           
  3606                           ;main.c: 263:         temporal[8] = 0x20;
  3607  05B3  3020               	movlw	32
  3608  05B4  00F3               	movwf	??_conver
  3609  05B5  0873               	movf	??_conver,w
  3610  05B6  00B8               	movwf	conver@temporal_275+8
  3611                           
  3612                           ;main.c: 264:         temporal[9] = 0X20;
  3613  05B7  3020               	movlw	32
  3614  05B8  00F3               	movwf	??_conver
  3615  05B9  0873               	movf	??_conver,w
  3616  05BA  00B9               	movwf	conver@temporal_275+9
  3617                           
  3618                           ;main.c: 265:         temporal[10] = 0x20;
  3619  05BB  3020               	movlw	32
  3620  05BC  00F3               	movwf	??_conver
  3621  05BD  0873               	movf	??_conver,w
  3622  05BE  00BA               	movwf	conver@temporal_275+10
  3623                           
  3624                           ;main.c: 266:         temporal[11] = 0x20;
  3625  05BF  3020               	movlw	32
  3626  05C0  00F3               	movwf	??_conver
  3627  05C1  0873               	movf	??_conver,w
  3628  05C2  00BB               	movwf	conver@temporal_275+11
  3629                           
  3630                           ;main.c: 267:         temporal[12] = 0x20;
  3631  05C3  3020               	movlw	32
  3632  05C4  00F3               	movwf	??_conver
  3633  05C5  0873               	movf	??_conver,w
  3634  05C6  00BC               	movwf	conver@temporal_275+12
  3635                           
  3636                           ;main.c: 268:         temporal[13] = 0x20;
  3637  05C7  3020               	movlw	32
  3638  05C8  00F3               	movwf	??_conver
  3639  05C9  0873               	movf	??_conver,w
  3640  05CA  00BD               	movwf	conver@temporal_275+13
  3641                           
  3642                           ;main.c: 269:         temporal[14] = 0x20;
  3643  05CB  3020               	movlw	32
  3644  05CC  00F3               	movwf	??_conver
  3645  05CD  0873               	movf	??_conver,w
  3646  05CE  00BE               	movwf	conver@temporal_275+14
  3647                           
  3648                           ;main.c: 270:         temporal[15] = 0x20;
  3649  05CF  3020               	movlw	32
  3650  05D0  00F3               	movwf	??_conver
  3651  05D1  0873               	movf	??_conver,w
  3652  05D2  00BF               	movwf	conver@temporal_275+15
  3653                           
  3654                           ;main.c: 271:         return temporal;
  3655  05D3  3030               	movlw	(low (conver@temporal_275| 0))& (0+255)
  3656  05D4                     l172:
  3657  05D4  0008               	return
  3658  05D5                     __end_of_conver:
  3659                           
  3660                           	psect	text15
  3661  0F1F                     __ptext15:	
  3662 ;; *************** function _Lcd_Write_String *****************
  3663 ;; Defined at:
  3664 ;;		line 54 in file "LCD.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;  a               1    wreg     PTR unsigned char 
  3667 ;;		 -> conver1@temporal(16), conver@temporal_275(16), conver@temporal(16), 
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;  a               1    2[BANK0 ] PTR unsigned char 
  3670 ;;		 -> conver1@temporal(16), conver@temporal_275(16), conver@temporal(16), 
  3671 ;;  i               2    0[BANK0 ] int 
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  1    wreg      void 
  3674 ;; Registers used:
  3675 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3681 ;;      Params:         0       0       0       0       0
  3682 ;;      Locals:         0       3       0       0       0
  3683 ;;      Temps:          1       0       0       0       0
  3684 ;;      Totals:         1       3       0       0       0
  3685 ;;Total ram usage:        4 bytes
  3686 ;; Hardware stack levels used: 1
  3687 ;; Hardware stack levels required when called: 4
  3688 ;; This function calls:
  3689 ;;		_Lcd_Write_Char
  3690 ;; This function is called by:
  3691 ;;		_main
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           
  3695                           
  3696                           ;psect for function _Lcd_Write_String
  3697  0F1F                     _Lcd_Write_String:
  3698                           
  3699                           ;incstack = 0
  3700                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3701                           ;Lcd_Write_String@a stored from wreg
  3702  0F1F  1283               	bcf	3,5	;RP0=0, select bank0
  3703  0F20  1303               	bcf	3,6	;RP1=0, select bank0
  3704  0F21  00A2               	movwf	Lcd_Write_String@a
  3705  0F22                     l2679:
  3706                           
  3707                           ;LCD.c: 55:     int i;;LCD.c: 56:     for (i = 0; a[i] != '\0'; i++)
  3708  0F22  01A0               	clrf	Lcd_Write_String@i
  3709  0F23  01A1               	clrf	Lcd_Write_String@i+1
  3710  0F24  2F38               	goto	l2685
  3711  0F25                     l2681:
  3712                           
  3713                           ;LCD.c: 57:         Lcd_Write_Char(a[i]);
  3714  0F25  0820               	movf	Lcd_Write_String@i,w
  3715  0F26  0722               	addwf	Lcd_Write_String@a,w
  3716  0F27  00F6               	movwf	??_Lcd_Write_String
  3717  0F28  0876               	movf	??_Lcd_Write_String,w
  3718  0F29  0084               	movwf	4
  3719  0F2A  0800               	movf	0,w
  3720  0F2B  120A  158A  26AF  120A  158A  	fcall	_Lcd_Write_Char
  3721  0F30                     l2683:
  3722  0F30  3001               	movlw	1
  3723  0F31  1283               	bcf	3,5	;RP0=0, select bank0
  3724  0F32  1303               	bcf	3,6	;RP1=0, select bank0
  3725  0F33  07A0               	addwf	Lcd_Write_String@i,f
  3726  0F34  1803               	skipnc
  3727  0F35  0AA1               	incf	Lcd_Write_String@i+1,f
  3728  0F36  3000               	movlw	0
  3729  0F37  07A1               	addwf	Lcd_Write_String@i+1,f
  3730  0F38                     l2685:
  3731  0F38  0820               	movf	Lcd_Write_String@i,w
  3732  0F39  0722               	addwf	Lcd_Write_String@a,w
  3733  0F3A  00F6               	movwf	??_Lcd_Write_String
  3734  0F3B  0876               	movf	??_Lcd_Write_String,w
  3735  0F3C  0084               	movwf	4
  3736  0F3D  1383               	bcf	3,7	;select IRP bank0
  3737  0F3E  0800               	movf	0,w
  3738  0F3F  1D03               	btfss	3,2
  3739  0F40  2F42               	goto	u1451
  3740  0F41  2F43               	goto	u1450
  3741  0F42                     u1451:
  3742  0F42  2F25               	goto	l2681
  3743  0F43                     u1450:
  3744  0F43                     l268:
  3745  0F43  0008               	return
  3746  0F44                     __end_of_Lcd_Write_String:
  3747                           
  3748                           	psect	text16
  3749  0EAF                     __ptext16:	
  3750 ;; *************** function _Lcd_Write_Char *****************
  3751 ;; Defined at:
  3752 ;;		line 45 in file "LCD.c"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;  a               1    wreg     unsigned char 
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;  a               1    5[COMMON] unsigned char 
  3757 ;; Return value:  Size  Location     Type
  3758 ;;                  1    wreg      void 
  3759 ;; Registers used:
  3760 ;;		wreg, status,2, status,0, pclath, cstack
  3761 ;; Tracked objects:
  3762 ;;		On entry : 0/0
  3763 ;;		On exit  : 0/0
  3764 ;;		Unchanged: 0/0
  3765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3766 ;;      Params:         0       0       0       0       0
  3767 ;;      Locals:         1       0       0       0       0
  3768 ;;      Temps:          1       0       0       0       0
  3769 ;;      Totals:         2       0       0       0       0
  3770 ;;Total ram usage:        2 bytes
  3771 ;; Hardware stack levels used: 1
  3772 ;; Hardware stack levels required when called: 3
  3773 ;; This function calls:
  3774 ;;		_Lcd_Port
  3775 ;; This function is called by:
  3776 ;;		_Lcd_Write_String
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           
  3781                           ;psect for function _Lcd_Write_Char
  3782  0EAF                     _Lcd_Write_Char:
  3783                           
  3784                           ;incstack = 0
  3785                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3786                           ;Lcd_Write_Char@a stored from wreg
  3787  0EAF  00F5               	movwf	Lcd_Write_Char@a
  3788  0EB0                     l2503:
  3789                           
  3790                           ;LCD.c: 46:     Lcd_Port(a);
  3791  0EB0  0875               	movf	Lcd_Write_Char@a,w
  3792  0EB1  120A  158A  268D  120A  158A  	fcall	_Lcd_Port
  3793  0EB6                     l2505:
  3794                           
  3795                           ;LCD.c: 47:     PORTEbits.RE1 = 1;
  3796  0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  3797  0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  3798  0EB8  1489               	bsf	9,1	;volatile
  3799  0EB9                     l2507:
  3800                           
  3801                           ;LCD.c: 48:     PORTEbits.RE2 = 0;
  3802  0EB9  1109               	bcf	9,2	;volatile
  3803  0EBA                     l2509:
  3804                           
  3805                           ;LCD.c: 49:     PORTEbits.RE0 = 1;
  3806  0EBA  1409               	bsf	9,0	;volatile
  3807  0EBB                     l2511:
  3808                           
  3809                           ;LCD.c: 50:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3810  0EBB  300D               	movlw	13
  3811  0EBC  00F4               	movwf	??_Lcd_Write_Char
  3812  0EBD                     u1647:
  3813  0EBD  0BF4               	decfsz	??_Lcd_Write_Char,f
  3814  0EBE  2EBD               	goto	u1647
  3815  0EBF                     l2513:
  3816                           
  3817                           ;LCD.c: 51:     PORTEbits.RE0 = 0;
  3818  0EBF  1283               	bcf	3,5	;RP0=0, select bank0
  3819  0EC0  1303               	bcf	3,6	;RP1=0, select bank0
  3820  0EC1  1009               	bcf	9,0	;volatile
  3821  0EC2                     l262:
  3822  0EC2  0008               	return
  3823  0EC3                     __end_of_Lcd_Write_Char:
  3824                           
  3825                           	psect	text17
  3826  0F44                     __ptext17:	
  3827 ;; *************** function _Lcd_Set_Cursor *****************
  3828 ;; Defined at:
  3829 ;;		line 20 in file "LCD.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;  a               1    wreg     unsigned char 
  3832 ;;  b               1    7[COMMON] unsigned char 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;  a               1    1[BANK0 ] unsigned char 
  3835 ;;  temp            1    2[BANK0 ] unsigned char 
  3836 ;; Return value:  Size  Location     Type
  3837 ;;                  1    wreg      void 
  3838 ;; Registers used:
  3839 ;;		wreg, status,2, status,0, pclath, cstack
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3845 ;;      Params:         1       0       0       0       0
  3846 ;;      Locals:         0       2       0       0       0
  3847 ;;      Temps:          0       1       0       0       0
  3848 ;;      Totals:         1       3       0       0       0
  3849 ;;Total ram usage:        4 bytes
  3850 ;; Hardware stack levels used: 1
  3851 ;; Hardware stack levels required when called: 4
  3852 ;; This function calls:
  3853 ;;		_Lcd_Cmd
  3854 ;; This function is called by:
  3855 ;;		_main
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859                           
  3860                           ;psect for function _Lcd_Set_Cursor
  3861  0F44                     _Lcd_Set_Cursor:
  3862                           
  3863                           ;incstack = 0
  3864                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3865                           ;Lcd_Set_Cursor@a stored from wreg
  3866  0F44  1283               	bcf	3,5	;RP0=0, select bank0
  3867  0F45  1303               	bcf	3,6	;RP1=0, select bank0
  3868  0F46  00A1               	movwf	Lcd_Set_Cursor@a
  3869  0F47                     l2659:
  3870                           
  3871                           ;LCD.c: 21:     char temp;;LCD.c: 22:     if (a == 1) {
  3872  0F47  0321               	decf	Lcd_Set_Cursor@a,w
  3873  0F48  1D03               	btfss	3,2
  3874  0F49  2F4B               	goto	u1431
  3875  0F4A  2F4C               	goto	u1430
  3876  0F4B                     u1431:
  3877  0F4B  2F58               	goto	l2665
  3878  0F4C                     u1430:
  3879  0F4C                     l2661:
  3880                           
  3881                           ;LCD.c: 23:         temp = 0x80 + b - 1;
  3882  0F4C  0877               	movf	Lcd_Set_Cursor@b,w
  3883  0F4D  3E7F               	addlw	127
  3884  0F4E  00A0               	movwf	??_Lcd_Set_Cursor
  3885  0F4F  0820               	movf	??_Lcd_Set_Cursor,w
  3886  0F50  00A2               	movwf	Lcd_Set_Cursor@temp
  3887  0F51                     l2663:
  3888                           
  3889                           ;LCD.c: 24:         Lcd_Cmd(temp);
  3890  0F51  0822               	movf	Lcd_Set_Cursor@temp,w
  3891  0F52  120A  158A  26EE  120A  158A  	fcall	_Lcd_Cmd
  3892                           
  3893                           ;LCD.c: 25:     } else if (a == 2) {
  3894  0F57  2F69               	goto	l256
  3895  0F58                     l2665:
  3896  0F58  3002               	movlw	2
  3897  0F59  0621               	xorwf	Lcd_Set_Cursor@a,w
  3898  0F5A  1D03               	btfss	3,2
  3899  0F5B  2F5D               	goto	u1441
  3900  0F5C  2F5E               	goto	u1440
  3901  0F5D                     u1441:
  3902  0F5D  2F69               	goto	l256
  3903  0F5E                     u1440:
  3904  0F5E                     l2667:
  3905                           
  3906                           ;LCD.c: 26:         temp = 0xC0 + b - 1;
  3907  0F5E  0877               	movf	Lcd_Set_Cursor@b,w
  3908  0F5F  3EBF               	addlw	191
  3909  0F60  00A0               	movwf	??_Lcd_Set_Cursor
  3910  0F61  0820               	movf	??_Lcd_Set_Cursor,w
  3911  0F62  00A2               	movwf	Lcd_Set_Cursor@temp
  3912  0F63                     l2669:
  3913                           
  3914                           ;LCD.c: 27:         Lcd_Cmd(temp);
  3915  0F63  0822               	movf	Lcd_Set_Cursor@temp,w
  3916  0F64  120A  158A  26EE  120A  158A  	fcall	_Lcd_Cmd
  3917  0F69                     l256:
  3918  0F69  0008               	return
  3919  0F6A                     __end_of_Lcd_Set_Cursor:
  3920                           
  3921                           	psect	text18
  3922  0F06                     __ptext18:	
  3923 ;; *************** function _Lcd_Init *****************
  3924 ;; Defined at:
  3925 ;;		line 31 in file "LCD.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;		None
  3928 ;; Auto vars:     Size  Location     Type
  3929 ;;		None
  3930 ;; Return value:  Size  Location     Type
  3931 ;;                  1    wreg      void 
  3932 ;; Registers used:
  3933 ;;		wreg, status,2, status,0, pclath, cstack
  3934 ;; Tracked objects:
  3935 ;;		On entry : 0/0
  3936 ;;		On exit  : 0/0
  3937 ;;		Unchanged: 0/0
  3938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3939 ;;      Params:         0       0       0       0       0
  3940 ;;      Locals:         0       0       0       0       0
  3941 ;;      Temps:          0       0       0       0       0
  3942 ;;      Totals:         0       0       0       0       0
  3943 ;;Total ram usage:        0 bytes
  3944 ;; Hardware stack levels used: 1
  3945 ;; Hardware stack levels required when called: 4
  3946 ;; This function calls:
  3947 ;;		_Lcd_Cmd
  3948 ;; This function is called by:
  3949 ;;		_main
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           
  3953                           
  3954                           ;psect for function _Lcd_Init
  3955  0F06                     _Lcd_Init:
  3956  0F06                     l2657:	
  3957                           ;incstack = 0
  3958                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3959                           
  3960                           
  3961                           ;LCD.c: 39:     Lcd_Cmd(0x38);
  3962  0F06  3038               	movlw	56
  3963  0F07  120A  158A  26EE  120A  158A  	fcall	_Lcd_Cmd
  3964                           
  3965                           ;LCD.c: 40:     Lcd_Cmd(0x06);
  3966  0F0C  3006               	movlw	6
  3967  0F0D  120A  158A  26EE  120A  158A  	fcall	_Lcd_Cmd
  3968                           
  3969                           ;LCD.c: 41:     Lcd_Cmd(0x0c);
  3970  0F12  300C               	movlw	12
  3971  0F13  120A  158A  26EE  120A  158A  	fcall	_Lcd_Cmd
  3972                           
  3973                           ;LCD.c: 42:     Lcd_Cmd(0x80);
  3974  0F18  3080               	movlw	128
  3975  0F19  120A  158A  26EE  120A  158A  	fcall	_Lcd_Cmd
  3976  0F1E                     l259:
  3977  0F1E  0008               	return
  3978  0F1F                     __end_of_Lcd_Init:
  3979                           
  3980                           	psect	text19
  3981  0EEE                     __ptext19:	
  3982 ;; *************** function _Lcd_Cmd *****************
  3983 ;; Defined at:
  3984 ;;		line 7 in file "LCD.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;  a               1    wreg     unsigned char 
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;  a               1    6[COMMON] unsigned char 
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  1    wreg      void 
  3991 ;; Registers used:
  3992 ;;		wreg, status,2, status,0, pclath, cstack
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3998 ;;      Params:         0       0       0       0       0
  3999 ;;      Locals:         1       0       0       0       0
  4000 ;;      Temps:          2       0       0       0       0
  4001 ;;      Totals:         3       0       0       0       0
  4002 ;;Total ram usage:        3 bytes
  4003 ;; Hardware stack levels used: 1
  4004 ;; Hardware stack levels required when called: 3
  4005 ;; This function calls:
  4006 ;;		_Lcd_Port
  4007 ;; This function is called by:
  4008 ;;		_Lcd_Set_Cursor
  4009 ;;		_Lcd_Init
  4010 ;;		_Lcd_Clear
  4011 ;;		_Lcd_Shift_Right
  4012 ;;		_Lcd_Shift_Left
  4013 ;; This function uses a non-reentrant model
  4014 ;;
  4015                           
  4016                           
  4017                           ;psect for function _Lcd_Cmd
  4018  0EEE                     _Lcd_Cmd:
  4019                           
  4020                           ;incstack = 0
  4021                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4022                           ;Lcd_Cmd@a stored from wreg
  4023  0EEE  00F6               	movwf	Lcd_Cmd@a
  4024  0EEF                     l2491:
  4025                           
  4026                           ;LCD.c: 8:     Lcd_Port(a);
  4027  0EEF  0876               	movf	Lcd_Cmd@a,w
  4028  0EF0  120A  158A  268D  120A  158A  	fcall	_Lcd_Port
  4029  0EF5                     l2493:
  4030                           
  4031                           ;LCD.c: 9:     PORTEbits.RE1 = 0;
  4032  0EF5  1283               	bcf	3,5	;RP0=0, select bank0
  4033  0EF6  1303               	bcf	3,6	;RP1=0, select bank0
  4034  0EF7  1089               	bcf	9,1	;volatile
  4035  0EF8                     l2495:
  4036                           
  4037                           ;LCD.c: 10:     PORTEbits.RE2 = 0;
  4038  0EF8  1109               	bcf	9,2	;volatile
  4039  0EF9                     l2497:
  4040                           
  4041                           ;LCD.c: 11:     PORTEbits.RE0 = 1;
  4042  0EF9  1409               	bsf	9,0	;volatile
  4043  0EFA                     l2499:
  4044                           
  4045                           ;LCD.c: 12:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4046  0EFA  3007               	movlw	7
  4047  0EFB  00F5               	movwf	??_Lcd_Cmd+1
  4048  0EFC  307D               	movlw	125
  4049  0EFD  00F4               	movwf	??_Lcd_Cmd
  4050  0EFE                     u1657:
  4051  0EFE  0BF4               	decfsz	??_Lcd_Cmd,f
  4052  0EFF  2EFE               	goto	u1657
  4053  0F00  0BF5               	decfsz	??_Lcd_Cmd+1,f
  4054  0F01  2EFE               	goto	u1657
  4055  0F02                     l2501:
  4056                           
  4057                           ;LCD.c: 13:     PORTEbits.RE0 = 0;
  4058  0F02  1283               	bcf	3,5	;RP0=0, select bank0
  4059  0F03  1303               	bcf	3,6	;RP1=0, select bank0
  4060  0F04  1009               	bcf	9,0	;volatile
  4061  0F05                     l247:
  4062  0F05  0008               	return
  4063  0F06                     __end_of_Lcd_Cmd:
  4064                           
  4065                           	psect	text20
  4066  0E8D                     __ptext20:	
  4067 ;; *************** function _Lcd_Port *****************
  4068 ;; Defined at:
  4069 ;;		line 3 in file "LCD.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;  a               1    wreg     unsigned char 
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;  a               1    3[COMMON] unsigned char 
  4074 ;; Return value:  Size  Location     Type
  4075 ;;                  1    wreg      void 
  4076 ;; Registers used:
  4077 ;;		wreg
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4083 ;;      Params:         0       0       0       0       0
  4084 ;;      Locals:         1       0       0       0       0
  4085 ;;      Temps:          0       0       0       0       0
  4086 ;;      Totals:         1       0       0       0       0
  4087 ;;Total ram usage:        1 bytes
  4088 ;; Hardware stack levels used: 1
  4089 ;; Hardware stack levels required when called: 2
  4090 ;; This function calls:
  4091 ;;		Nothing
  4092 ;; This function is called by:
  4093 ;;		_Lcd_Cmd
  4094 ;;		_Lcd_Write_Char
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           
  4099                           ;psect for function _Lcd_Port
  4100  0E8D                     _Lcd_Port:
  4101                           
  4102                           ;incstack = 0
  4103                           ; Regs used in _Lcd_Port: [wreg]
  4104                           ;Lcd_Port@a stored from wreg
  4105  0E8D  00F3               	movwf	Lcd_Port@a
  4106  0E8E                     l2425:
  4107                           
  4108                           ;LCD.c: 4:     PORTD = a;
  4109  0E8E  0873               	movf	Lcd_Port@a,w
  4110  0E8F  1283               	bcf	3,5	;RP0=0, select bank0
  4111  0E90  1303               	bcf	3,6	;RP1=0, select bank0
  4112  0E91  0088               	movwf	8	;volatile
  4113  0E92                     l244:
  4114  0E92  0008               	return
  4115  0E93                     __end_of_Lcd_Port:
  4116                           
  4117                           	psect	text21
  4118  0201                     __ptext21:	
  4119 ;; *************** function _LECT1 *****************
  4120 ;; Defined at:
  4121 ;;		line 297 in file "main.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;		None
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;		None
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  1    wreg      void 
  4128 ;; Registers used:
  4129 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4135 ;;      Params:         0       0       0       0       0
  4136 ;;      Locals:         0       0       0       0       0
  4137 ;;      Temps:          1       0       0       0       0
  4138 ;;      Totals:         1       0       0       0       0
  4139 ;;Total ram usage:        1 bytes
  4140 ;; Hardware stack levels used: 1
  4141 ;; Hardware stack levels required when called: 3
  4142 ;; This function calls:
  4143 ;;		_num_ascii
  4144 ;; This function is called by:
  4145 ;;		_main
  4146 ;; This function uses a non-reentrant model
  4147 ;;
  4148                           
  4149                           
  4150                           ;psect for function _LECT1
  4151  0201                     _LECT1:
  4152  0201                     l2125:	
  4153                           ;incstack = 0
  4154                           ; Regs used in _LECT1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4155                           
  4156                           
  4157                           ;main.c: 298:     NUM = num_ascii(PARKH);
  4158  0201  1283               	bcf	3,5	;RP0=0, select bank0
  4159  0202  1303               	bcf	3,6	;RP1=0, select bank0
  4160  0203  0850               	movf	_PARKH,w
  4161  0204  120A  118A  277A  120A  118A  	fcall	_num_ascii
  4162  0209  00F6               	movwf	??_LECT1
  4163  020A  0876               	movf	??_LECT1,w
  4164  020B  1283               	bcf	3,5	;RP0=0, select bank0
  4165  020C  1303               	bcf	3,6	;RP1=0, select bank0
  4166  020D  00CF               	movwf	_NUM
  4167  020E                     l2127:
  4168                           
  4169                           ;main.c: 299:     if (DIA == 1){
  4170  020E  037A               	decf	_DIA,w
  4171  020F  1D03               	btfss	3,2
  4172  0210  2A12               	goto	u1011
  4173  0211  2A13               	goto	u1010
  4174  0212                     u1011:
  4175  0212  2A20               	goto	l2131
  4176  0213                     u1010:
  4177  0213                     l2129:
  4178                           
  4179                           ;main.c: 300:         C1 = 0x4C;
  4180  0213  304C               	movlw	76
  4181  0214  00F6               	movwf	??_LECT1
  4182  0215  0876               	movf	??_LECT1,w
  4183  0216  00CB               	movwf	_C1
  4184                           
  4185                           ;main.c: 301:         C2 = 0x75;
  4186  0217  3075               	movlw	117
  4187  0218  00F6               	movwf	??_LECT1
  4188  0219  0876               	movf	??_LECT1,w
  4189  021A  00CA               	movwf	_C2
  4190                           
  4191                           ;main.c: 302:         C3 = 0x6E;
  4192  021B  306E               	movlw	110
  4193  021C  00F6               	movwf	??_LECT1
  4194  021D  0876               	movf	??_LECT1,w
  4195  021E  00C9               	movwf	_C3
  4196                           
  4197                           ;main.c: 303:     }
  4198  021F  2A94               	goto	l180
  4199  0220                     l2131:
  4200  0220  3002               	movlw	2
  4201  0221  067A               	xorwf	_DIA,w
  4202  0222  1D03               	btfss	3,2
  4203  0223  2A25               	goto	u1021
  4204  0224  2A26               	goto	u1020
  4205  0225                     u1021:
  4206  0225  2A33               	goto	l2135
  4207  0226                     u1020:
  4208  0226                     l2133:
  4209                           
  4210                           ;main.c: 305:         C1 = 0x4D;
  4211  0226  304D               	movlw	77
  4212  0227  00F6               	movwf	??_LECT1
  4213  0228  0876               	movf	??_LECT1,w
  4214  0229  00CB               	movwf	_C1
  4215                           
  4216                           ;main.c: 306:         C2 = 0x61;
  4217  022A  3061               	movlw	97
  4218  022B  00F6               	movwf	??_LECT1
  4219  022C  0876               	movf	??_LECT1,w
  4220  022D  00CA               	movwf	_C2
  4221                           
  4222                           ;main.c: 307:         C3 = 0x72;
  4223  022E  3072               	movlw	114
  4224  022F  00F6               	movwf	??_LECT1
  4225  0230  0876               	movf	??_LECT1,w
  4226  0231  00C9               	movwf	_C3
  4227                           
  4228                           ;main.c: 308:     }
  4229  0232  2A94               	goto	l180
  4230  0233                     l2135:
  4231  0233  3003               	movlw	3
  4232  0234  067A               	xorwf	_DIA,w
  4233  0235  1D03               	btfss	3,2
  4234  0236  2A38               	goto	u1031
  4235  0237  2A39               	goto	u1030
  4236  0238                     u1031:
  4237  0238  2A46               	goto	l2139
  4238  0239                     u1030:
  4239  0239                     l2137:
  4240                           
  4241                           ;main.c: 310:         C1 = 0x4D;
  4242  0239  304D               	movlw	77
  4243  023A  00F6               	movwf	??_LECT1
  4244  023B  0876               	movf	??_LECT1,w
  4245  023C  00CB               	movwf	_C1
  4246                           
  4247                           ;main.c: 311:         C2 = 0x69;
  4248  023D  3069               	movlw	105
  4249  023E  00F6               	movwf	??_LECT1
  4250  023F  0876               	movf	??_LECT1,w
  4251  0240  00CA               	movwf	_C2
  4252                           
  4253                           ;main.c: 312:         C3 = 0x65;
  4254  0241  3065               	movlw	101
  4255  0242  00F6               	movwf	??_LECT1
  4256  0243  0876               	movf	??_LECT1,w
  4257  0244  00C9               	movwf	_C3
  4258                           
  4259                           ;main.c: 313:     }
  4260  0245  2A94               	goto	l180
  4261  0246                     l2139:
  4262  0246  3004               	movlw	4
  4263  0247  067A               	xorwf	_DIA,w
  4264  0248  1D03               	btfss	3,2
  4265  0249  2A4B               	goto	u1041
  4266  024A  2A4C               	goto	u1040
  4267  024B                     u1041:
  4268  024B  2A59               	goto	l2143
  4269  024C                     u1040:
  4270  024C                     l2141:
  4271                           
  4272                           ;main.c: 315:         C1 = 0x4A;
  4273  024C  304A               	movlw	74
  4274  024D  00F6               	movwf	??_LECT1
  4275  024E  0876               	movf	??_LECT1,w
  4276  024F  00CB               	movwf	_C1
  4277                           
  4278                           ;main.c: 316:         C2 = 0x75;
  4279  0250  3075               	movlw	117
  4280  0251  00F6               	movwf	??_LECT1
  4281  0252  0876               	movf	??_LECT1,w
  4282  0253  00CA               	movwf	_C2
  4283                           
  4284                           ;main.c: 317:         C3 = 0x65;
  4285  0254  3065               	movlw	101
  4286  0255  00F6               	movwf	??_LECT1
  4287  0256  0876               	movf	??_LECT1,w
  4288  0257  00C9               	movwf	_C3
  4289                           
  4290                           ;main.c: 318:     }
  4291  0258  2A94               	goto	l180
  4292  0259                     l2143:
  4293  0259  3005               	movlw	5
  4294  025A  067A               	xorwf	_DIA,w
  4295  025B  1D03               	btfss	3,2
  4296  025C  2A5E               	goto	u1051
  4297  025D  2A5F               	goto	u1050
  4298  025E                     u1051:
  4299  025E  2A6C               	goto	l2147
  4300  025F                     u1050:
  4301  025F                     l2145:
  4302                           
  4303                           ;main.c: 320:         C1 = 0x56;
  4304  025F  3056               	movlw	86
  4305  0260  00F6               	movwf	??_LECT1
  4306  0261  0876               	movf	??_LECT1,w
  4307  0262  00CB               	movwf	_C1
  4308                           
  4309                           ;main.c: 321:         C2 = 0x69;
  4310  0263  3069               	movlw	105
  4311  0264  00F6               	movwf	??_LECT1
  4312  0265  0876               	movf	??_LECT1,w
  4313  0266  00CA               	movwf	_C2
  4314                           
  4315                           ;main.c: 322:         C3 = 0x65;
  4316  0267  3065               	movlw	101
  4317  0268  00F6               	movwf	??_LECT1
  4318  0269  0876               	movf	??_LECT1,w
  4319  026A  00C9               	movwf	_C3
  4320                           
  4321                           ;main.c: 323:     }
  4322  026B  2A94               	goto	l180
  4323  026C                     l2147:
  4324  026C  3006               	movlw	6
  4325  026D  067A               	xorwf	_DIA,w
  4326  026E  1D03               	btfss	3,2
  4327  026F  2A71               	goto	u1061
  4328  0270  2A72               	goto	u1060
  4329  0271                     u1061:
  4330  0271  2A7F               	goto	l2151
  4331  0272                     u1060:
  4332  0272                     l2149:
  4333                           
  4334                           ;main.c: 325:         C1 = 0x53;
  4335  0272  3053               	movlw	83
  4336  0273  00F6               	movwf	??_LECT1
  4337  0274  0876               	movf	??_LECT1,w
  4338  0275  00CB               	movwf	_C1
  4339                           
  4340                           ;main.c: 326:         C2 = 0x61;
  4341  0276  3061               	movlw	97
  4342  0277  00F6               	movwf	??_LECT1
  4343  0278  0876               	movf	??_LECT1,w
  4344  0279  00CA               	movwf	_C2
  4345                           
  4346                           ;main.c: 327:         C3 = 0x62;
  4347  027A  3062               	movlw	98
  4348  027B  00F6               	movwf	??_LECT1
  4349  027C  0876               	movf	??_LECT1,w
  4350  027D  00C9               	movwf	_C3
  4351                           
  4352                           ;main.c: 328:     }
  4353  027E  2A94               	goto	l180
  4354  027F                     l2151:
  4355  027F  3007               	movlw	7
  4356  0280  067A               	xorwf	_DIA,w
  4357  0281  1D03               	btfss	3,2
  4358  0282  2A84               	goto	u1071
  4359  0283  2A85               	goto	u1070
  4360  0284                     u1071:
  4361  0284  2A94               	goto	l186
  4362  0285                     u1070:
  4363  0285                     l2153:
  4364                           
  4365                           ;main.c: 330:         C1 = 0x44;
  4366  0285  3044               	movlw	68
  4367  0286  00F6               	movwf	??_LECT1
  4368  0287  0876               	movf	??_LECT1,w
  4369  0288  00CB               	movwf	_C1
  4370                           
  4371                           ;main.c: 331:         C2 = 0x6F;
  4372  0289  306F               	movlw	111
  4373  028A  00F6               	movwf	??_LECT1
  4374  028B  0876               	movf	??_LECT1,w
  4375  028C  00CA               	movwf	_C2
  4376                           
  4377                           ;main.c: 332:         C3 = 0x6D;
  4378  028D  306D               	movlw	109
  4379  028E  00F6               	movwf	??_LECT1
  4380  028F  0876               	movf	??_LECT1,w
  4381  0290  00C9               	movwf	_C3
  4382  0291                     l2155:
  4383                           
  4384                           ;main.c: 333:         CERRADO = 1;
  4385  0291  01C4               	clrf	_CERRADO
  4386  0292  0AC4               	incf	_CERRADO,f
  4387  0293  2A94               	goto	l180
  4388  0294                     l186:
  4389  0294                     l180:
  4390                           
  4391                           ;main.c: 335:     if (HORA<10){
  4392  0294  300A               	movlw	10
  4393  0295  024D               	subwf	_HORA,w
  4394  0296  1803               	skipnc
  4395  0297  2A99               	goto	u1081
  4396  0298  2A9A               	goto	u1080
  4397  0299                     u1081:
  4398  0299  2ABD               	goto	l2173
  4399  029A                     u1080:
  4400  029A                     l2157:
  4401                           
  4402                           ;main.c: 336:         DH = 0x30;
  4403  029A  3030               	movlw	48
  4404  029B  00F6               	movwf	??_LECT1
  4405  029C  0876               	movf	??_LECT1,w
  4406  029D  00C7               	movwf	_DH
  4407  029E                     l2159:
  4408                           
  4409                           ;main.c: 337:         UH = num_ascii(HORA);
  4410  029E  084D               	movf	_HORA,w
  4411  029F  120A  118A  277A  120A  118A  	fcall	_num_ascii
  4412  02A4  00F6               	movwf	??_LECT1
  4413  02A5  0876               	movf	??_LECT1,w
  4414  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  4415  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  4416  02A8  00C8               	movwf	_UH
  4417  02A9                     l2161:
  4418                           
  4419                           ;main.c: 338:         if (HORA<7){
  4420  02A9  3007               	movlw	7
  4421  02AA  024D               	subwf	_HORA,w
  4422  02AB  1803               	skipnc
  4423  02AC  2AAE               	goto	u1091
  4424  02AD  2AAF               	goto	u1090
  4425  02AE                     u1091:
  4426  02AE  2AB4               	goto	l2167
  4427  02AF                     u1090:
  4428  02AF                     l2163:
  4429                           
  4430                           ;main.c: 339:             PORTB = 0b00111111;
  4431  02AF  303F               	movlw	63
  4432  02B0  0086               	movwf	6	;volatile
  4433  02B1                     l2165:
  4434                           
  4435                           ;main.c: 340:             CERRADO = 1;
  4436  02B1  01C4               	clrf	_CERRADO
  4437  02B2  0AC4               	incf	_CERRADO,f
  4438                           
  4439                           ;main.c: 341:         }
  4440  02B3  2B0D               	goto	l2207
  4441  02B4                     l2167:
  4442                           
  4443                           ;main.c: 343:             PORTB = 0;
  4444  02B4  0186               	clrf	6	;volatile
  4445  02B5                     l2169:
  4446                           
  4447                           ;main.c: 344:             if (DIA!=7){
  4448  02B5  3007               	movlw	7
  4449  02B6  067A               	xorwf	_DIA,w
  4450  02B7  1903               	btfsc	3,2
  4451  02B8  2ABA               	goto	u1101
  4452  02B9  2ABB               	goto	u1100
  4453  02BA                     u1101:
  4454  02BA  2B0D               	goto	l2207
  4455  02BB                     u1100:
  4456  02BB                     l2171:
  4457                           
  4458                           ;main.c: 345:                 CERRADO = 0;
  4459  02BB  01C4               	clrf	_CERRADO
  4460  02BC  2B0D               	goto	l2207
  4461  02BD                     l2173:
  4462  02BD  301A               	movlw	26
  4463  02BE  024D               	subwf	_HORA,w
  4464  02BF  1803               	skipnc
  4465  02C0  2AC2               	goto	u1111
  4466  02C1  2AC3               	goto	u1110
  4467  02C2                     u1111:
  4468  02C2  2AE9               	goto	l2191
  4469  02C3                     u1110:
  4470  02C3                     l2175:
  4471                           
  4472                           ;main.c: 350:         DH = 0x31;
  4473  02C3  3031               	movlw	49
  4474  02C4  00F6               	movwf	??_LECT1
  4475  02C5  0876               	movf	??_LECT1,w
  4476  02C6  00C7               	movwf	_DH
  4477  02C7                     l2177:
  4478                           
  4479                           ;main.c: 351:         con = HORA-16;
  4480  02C7  084D               	movf	_HORA,w
  4481  02C8  3EF0               	addlw	240
  4482  02C9  00F6               	movwf	??_LECT1
  4483  02CA  0876               	movf	??_LECT1,w
  4484  02CB  00F8               	movwf	_con
  4485  02CC                     l2179:
  4486                           
  4487                           ;main.c: 352:         UH = num_ascii(con);
  4488  02CC  0878               	movf	_con,w
  4489  02CD  120A  118A  277A  120A  118A  	fcall	_num_ascii
  4490  02D2  00F6               	movwf	??_LECT1
  4491  02D3  0876               	movf	??_LECT1,w
  4492  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  4493  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  4494  02D6  00C8               	movwf	_UH
  4495  02D7                     l2181:
  4496                           
  4497                           ;main.c: 353:         if (DIA!=7){
  4498  02D7  3007               	movlw	7
  4499  02D8  067A               	xorwf	_DIA,w
  4500  02D9  1903               	btfsc	3,2
  4501  02DA  2ADC               	goto	u1121
  4502  02DB  2ADD               	goto	u1120
  4503  02DC                     u1121:
  4504  02DC  2ADE               	goto	l2185
  4505  02DD                     u1120:
  4506  02DD                     l2183:
  4507                           
  4508                           ;main.c: 354:             CERRADO = 0;
  4509  02DD  01C4               	clrf	_CERRADO
  4510  02DE                     l2185:
  4511                           
  4512                           ;main.c: 356:         if (con>7){
  4513  02DE  3008               	movlw	8
  4514  02DF  0278               	subwf	_con,w
  4515  02E0  1C03               	skipc
  4516  02E1  2AE3               	goto	u1131
  4517  02E2  2AE4               	goto	u1130
  4518  02E3                     u1131:
  4519  02E3  2AE7               	goto	l2189
  4520  02E4                     u1130:
  4521  02E4                     l2187:
  4522                           
  4523                           ;main.c: 357:             PORTB = 0b00111111;
  4524  02E4  303F               	movlw	63
  4525  02E5  0086               	movwf	6	;volatile
  4526                           
  4527                           ;main.c: 358:         }
  4528  02E6  2B0D               	goto	l2207
  4529  02E7                     l2189:
  4530                           
  4531                           ;main.c: 360:             PORTB = 0;
  4532  02E7  0186               	clrf	6	;volatile
  4533  02E8  2B0D               	goto	l2207
  4534  02E9                     l2191:
  4535                           
  4536                           ;main.c: 364:         DH = 0x32;
  4537  02E9  3032               	movlw	50
  4538  02EA  00F6               	movwf	??_LECT1
  4539  02EB  0876               	movf	??_LECT1,w
  4540  02EC  00C7               	movwf	_DH
  4541  02ED                     l2193:
  4542                           
  4543                           ;main.c: 365:         con = HORA-32;
  4544  02ED  084D               	movf	_HORA,w
  4545  02EE  3EE0               	addlw	224
  4546  02EF  00F6               	movwf	??_LECT1
  4547  02F0  0876               	movf	??_LECT1,w
  4548  02F1  00F8               	movwf	_con
  4549  02F2                     l2195:
  4550                           
  4551                           ;main.c: 366:         UH = num_ascii(con);
  4552  02F2  0878               	movf	_con,w
  4553  02F3  120A  118A  277A  120A  118A  	fcall	_num_ascii
  4554  02F8  00F6               	movwf	??_LECT1
  4555  02F9  0876               	movf	??_LECT1,w
  4556  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  4557  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  4558  02FC  00C8               	movwf	_UH
  4559  02FD                     l2197:
  4560                           
  4561                           ;main.c: 367:         PORTB = 0b00111111;
  4562  02FD  303F               	movlw	63
  4563  02FE  0086               	movwf	6	;volatile
  4564  02FF                     l2199:
  4565                           
  4566                           ;main.c: 368:         if (con>1){
  4567  02FF  3002               	movlw	2
  4568  0300  0278               	subwf	_con,w
  4569  0301  1C03               	skipc
  4570  0302  2B04               	goto	u1141
  4571  0303  2B05               	goto	u1140
  4572  0304                     u1141:
  4573  0304  2B06               	goto	l2203
  4574  0305                     u1140:
  4575  0305  2AB1               	goto	l2165
  4576  0306                     l2203:
  4577                           
  4578                           ;main.c: 372:             if (DIA!=7){
  4579  0306  3007               	movlw	7
  4580  0307  067A               	xorwf	_DIA,w
  4581  0308  1903               	btfsc	3,2
  4582  0309  2B0B               	goto	u1151
  4583  030A  2B0C               	goto	u1150
  4584  030B                     u1151:
  4585  030B  2B0D               	goto	l2207
  4586  030C                     u1150:
  4587  030C  2ABB               	goto	l2171
  4588  030D                     l2207:
  4589                           
  4590                           ;main.c: 377:     if (MIN<10){
  4591  030D  300A               	movlw	10
  4592  030E  0279               	subwf	_MIN,w
  4593  030F  1803               	skipnc
  4594  0310  2B12               	goto	u1161
  4595  0311  2B13               	goto	u1160
  4596  0312                     u1161:
  4597  0312  2B23               	goto	l2213
  4598  0313                     u1160:
  4599  0313                     l2209:
  4600                           
  4601                           ;main.c: 378:         DM = 0x30;
  4602  0313  3030               	movlw	48
  4603  0314  00F6               	movwf	??_LECT1
  4604  0315  0876               	movf	??_LECT1,w
  4605  0316  00C5               	movwf	_DM
  4606  0317                     l2211:
  4607                           
  4608                           ;main.c: 379:         UM = num_ascii(MIN);
  4609  0317  0879               	movf	_MIN,w
  4610  0318  120A  118A  277A  120A  118A  	fcall	_num_ascii
  4611  031D  00F6               	movwf	??_LECT1
  4612  031E  0876               	movf	??_LECT1,w
  4613  031F  1283               	bcf	3,5	;RP0=0, select bank0
  4614  0320  1303               	bcf	3,6	;RP1=0, select bank0
  4615  0321  00C6               	movwf	_UM
  4616                           
  4617                           ;main.c: 380:     }
  4618  0322  2BAA               	goto	l216
  4619  0323                     l2213:
  4620  0323  301A               	movlw	26
  4621  0324  0279               	subwf	_MIN,w
  4622  0325  1803               	skipnc
  4623  0326  2B28               	goto	u1171
  4624  0327  2B29               	goto	u1170
  4625  0328                     u1171:
  4626  0328  2B3E               	goto	l2221
  4627  0329                     u1170:
  4628  0329                     l2215:
  4629                           
  4630                           ;main.c: 382:         DM = 0x31;
  4631  0329  3031               	movlw	49
  4632  032A  00F6               	movwf	??_LECT1
  4633  032B  0876               	movf	??_LECT1,w
  4634  032C  00C5               	movwf	_DM
  4635  032D                     l2217:
  4636                           
  4637                           ;main.c: 383:         con = MIN-16;
  4638  032D  0879               	movf	_MIN,w
  4639  032E  3EF0               	addlw	240
  4640  032F  00F6               	movwf	??_LECT1
  4641  0330  0876               	movf	??_LECT1,w
  4642  0331  00F8               	movwf	_con
  4643  0332                     l2219:
  4644                           
  4645                           ;main.c: 384:         UM = num_ascii(con);
  4646  0332  0878               	movf	_con,w
  4647  0333  120A  118A  277A  120A  118A  	fcall	_num_ascii
  4648  0338  00F6               	movwf	??_LECT1
  4649  0339  0876               	movf	??_LECT1,w
  4650  033A  1283               	bcf	3,5	;RP0=0, select bank0
  4651  033B  1303               	bcf	3,6	;RP1=0, select bank0
  4652  033C  00C6               	movwf	_UM
  4653                           
  4654                           ;main.c: 385:     }
  4655  033D  2BAA               	goto	l216
  4656  033E                     l2221:
  4657  033E  302A               	movlw	42
  4658  033F  0279               	subwf	_MIN,w
  4659  0340  1803               	skipnc
  4660  0341  2B43               	goto	u1181
  4661  0342  2B44               	goto	u1180
  4662  0343                     u1181:
  4663  0343  2B59               	goto	l2229
  4664  0344                     u1180:
  4665  0344                     l2223:
  4666                           
  4667                           ;main.c: 387:         DM = 0x32;
  4668  0344  3032               	movlw	50
  4669  0345  00F6               	movwf	??_LECT1
  4670  0346  0876               	movf	??_LECT1,w
  4671  0347  00C5               	movwf	_DM
  4672  0348                     l2225:
  4673                           
  4674                           ;main.c: 388:         con = MIN-32;
  4675  0348  0879               	movf	_MIN,w
  4676  0349  3EE0               	addlw	224
  4677  034A  00F6               	movwf	??_LECT1
  4678  034B  0876               	movf	??_LECT1,w
  4679  034C  00F8               	movwf	_con
  4680  034D                     l2227:
  4681                           
  4682                           ;main.c: 389:         UM = num_ascii(con);
  4683  034D  0878               	movf	_con,w
  4684  034E  120A  118A  277A  120A  118A  	fcall	_num_ascii
  4685  0353  00F6               	movwf	??_LECT1
  4686  0354  0876               	movf	??_LECT1,w
  4687  0355  1283               	bcf	3,5	;RP0=0, select bank0
  4688  0356  1303               	bcf	3,6	;RP1=0, select bank0
  4689  0357  00C6               	movwf	_UM
  4690                           
  4691                           ;main.c: 390:     }
  4692  0358  2BAA               	goto	l216
  4693  0359                     l2229:
  4694  0359  303A               	movlw	58
  4695  035A  0279               	subwf	_MIN,w
  4696  035B  1803               	skipnc
  4697  035C  2B5E               	goto	u1191
  4698  035D  2B5F               	goto	u1190
  4699  035E                     u1191:
  4700  035E  2B74               	goto	l2237
  4701  035F                     u1190:
  4702  035F                     l2231:
  4703                           
  4704                           ;main.c: 392:         DM = 0x33;
  4705  035F  3033               	movlw	51
  4706  0360  00F6               	movwf	??_LECT1
  4707  0361  0876               	movf	??_LECT1,w
  4708  0362  00C5               	movwf	_DM
  4709  0363                     l2233:
  4710                           
  4711                           ;main.c: 393:         con = MIN-32-16;
  4712  0363  0879               	movf	_MIN,w
  4713  0364  3ED0               	addlw	208
  4714  0365  00F6               	movwf	??_LECT1
  4715  0366  0876               	movf	??_LECT1,w
  4716  0367  00F8               	movwf	_con
  4717  0368                     l2235:
  4718                           
  4719                           ;main.c: 394:         UM = num_ascii(con);
  4720  0368  0878               	movf	_con,w
  4721  0369  120A  118A  277A  120A  118A  	fcall	_num_ascii
  4722  036E  00F6               	movwf	??_LECT1
  4723  036F  0876               	movf	??_LECT1,w
  4724  0370  1283               	bcf	3,5	;RP0=0, select bank0
  4725  0371  1303               	bcf	3,6	;RP1=0, select bank0
  4726  0372  00C6               	movwf	_UM
  4727                           
  4728                           ;main.c: 395:     }
  4729  0373  2BAA               	goto	l216
  4730  0374                     l2237:
  4731  0374  304A               	movlw	74
  4732  0375  0279               	subwf	_MIN,w
  4733  0376  1803               	skipnc
  4734  0377  2B79               	goto	u1201
  4735  0378  2B7A               	goto	u1200
  4736  0379                     u1201:
  4737  0379  2B8F               	goto	l2245
  4738  037A                     u1200:
  4739  037A                     l2239:
  4740                           
  4741                           ;main.c: 397:         DM = 0x34;
  4742  037A  3034               	movlw	52
  4743  037B  00F6               	movwf	??_LECT1
  4744  037C  0876               	movf	??_LECT1,w
  4745  037D  00C5               	movwf	_DM
  4746  037E                     l2241:
  4747                           
  4748                           ;main.c: 398:         con = MIN-64;
  4749  037E  0879               	movf	_MIN,w
  4750  037F  3EC0               	addlw	192
  4751  0380  00F6               	movwf	??_LECT1
  4752  0381  0876               	movf	??_LECT1,w
  4753  0382  00F8               	movwf	_con
  4754  0383                     l2243:
  4755                           
  4756                           ;main.c: 399:         UM = num_ascii(con);
  4757  0383  0878               	movf	_con,w
  4758  0384  120A  118A  277A  120A  118A  	fcall	_num_ascii
  4759  0389  00F6               	movwf	??_LECT1
  4760  038A  0876               	movf	??_LECT1,w
  4761  038B  1283               	bcf	3,5	;RP0=0, select bank0
  4762  038C  1303               	bcf	3,6	;RP1=0, select bank0
  4763  038D  00C6               	movwf	_UM
  4764                           
  4765                           ;main.c: 400:     }
  4766  038E  2BAA               	goto	l216
  4767  038F                     l2245:
  4768  038F  305A               	movlw	90
  4769  0390  0279               	subwf	_MIN,w
  4770  0391  1803               	skipnc
  4771  0392  2B94               	goto	u1211
  4772  0393  2B95               	goto	u1210
  4773  0394                     u1211:
  4774  0394  2BAA               	goto	l210
  4775  0395                     u1210:
  4776  0395                     l2247:
  4777                           
  4778                           ;main.c: 402:         DM = 0x35;
  4779  0395  3035               	movlw	53
  4780  0396  00F6               	movwf	??_LECT1
  4781  0397  0876               	movf	??_LECT1,w
  4782  0398  00C5               	movwf	_DM
  4783  0399                     l2249:
  4784                           
  4785                           ;main.c: 403:         con = MIN-64-16;
  4786  0399  0879               	movf	_MIN,w
  4787  039A  3EB0               	addlw	176
  4788  039B  00F6               	movwf	??_LECT1
  4789  039C  0876               	movf	??_LECT1,w
  4790  039D  00F8               	movwf	_con
  4791  039E                     l2251:
  4792                           
  4793                           ;main.c: 404:         UM = num_ascii(con);
  4794  039E  0878               	movf	_con,w
  4795  039F  120A  118A  277A  120A  118A  	fcall	_num_ascii
  4796  03A4  00F6               	movwf	??_LECT1
  4797  03A5  0876               	movf	??_LECT1,w
  4798  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  4799  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  4800  03A8  00C6               	movwf	_UM
  4801  03A9  2BAA               	goto	l216
  4802  03AA                     l210:
  4803  03AA                     l216:
  4804  03AA  0008               	return
  4805  03AB                     __end_of_LECT1:
  4806                           
  4807                           	psect	text22
  4808  077A                     __ptext22:	
  4809 ;; *************** function _num_ascii *****************
  4810 ;; Defined at:
  4811 ;;		line 3 in file "ASCII.c"
  4812 ;; Parameters:    Size  Location     Type
  4813 ;;  num             1    wreg     unsigned char 
  4814 ;; Auto vars:     Size  Location     Type
  4815 ;;  num             1    5[COMMON] unsigned char 
  4816 ;; Return value:  Size  Location     Type
  4817 ;;                  1    wreg      unsigned char 
  4818 ;; Registers used:
  4819 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4820 ;; Tracked objects:
  4821 ;;		On entry : 0/0
  4822 ;;		On exit  : 0/0
  4823 ;;		Unchanged: 0/0
  4824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4825 ;;      Params:         0       0       0       0       0
  4826 ;;      Locals:         1       0       0       0       0
  4827 ;;      Temps:          2       0       0       0       0
  4828 ;;      Totals:         3       0       0       0       0
  4829 ;;Total ram usage:        3 bytes
  4830 ;; Hardware stack levels used: 1
  4831 ;; Hardware stack levels required when called: 2
  4832 ;; This function calls:
  4833 ;;		Nothing
  4834 ;; This function is called by:
  4835 ;;		_LECT1
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839                           
  4840                           ;psect for function _num_ascii
  4841  077A                     _num_ascii:
  4842                           
  4843                           ;incstack = 0
  4844                           ; Regs used in _num_ascii: [wreg-fsr0h+status,2+status,0]
  4845                           ;num_ascii@num stored from wreg
  4846  077A  00F5               	movwf	num_ascii@num
  4847  077B                     l1775:
  4848                           
  4849                           ;ASCII.c: 4:  switch(num){
  4850  077B  2F90               	goto	l1845
  4851  077C                     l1777:
  4852                           
  4853                           ;ASCII.c: 6:   return 0x30;
  4854  077C  3030               	movlw	48
  4855  077D  2FB8               	goto	l279
  4856  077E                     l1789:
  4857                           
  4858                           ;ASCII.c: 14:   return 0x31;
  4859  077E  3031               	movlw	49
  4860  077F  2FB8               	goto	l279
  4861  0780                     l1795:
  4862                           
  4863                           ;ASCII.c: 18:   return 0x32;
  4864  0780  3032               	movlw	50
  4865  0781  2FB8               	goto	l279
  4866  0782                     l1801:
  4867                           
  4868                           ;ASCII.c: 22:   return 0x33;
  4869  0782  3033               	movlw	51
  4870  0783  2FB8               	goto	l279
  4871  0784                     l1807:
  4872                           
  4873                           ;ASCII.c: 26:   return 0x34;
  4874  0784  3034               	movlw	52
  4875  0785  2FB8               	goto	l279
  4876  0786                     l1813:
  4877                           
  4878                           ;ASCII.c: 30:   return 0x35;
  4879  0786  3035               	movlw	53
  4880  0787  2FB8               	goto	l279
  4881  0788                     l1819:
  4882                           
  4883                           ;ASCII.c: 34:   return 0x36;
  4884  0788  3036               	movlw	54
  4885  0789  2FB8               	goto	l279
  4886  078A                     l1825:
  4887                           
  4888                           ;ASCII.c: 38:   return 0x37;
  4889  078A  3037               	movlw	55
  4890  078B  2FB8               	goto	l279
  4891  078C                     l1831:
  4892                           
  4893                           ;ASCII.c: 42:   return 0x38;
  4894  078C  3038               	movlw	56
  4895  078D  2FB8               	goto	l279
  4896  078E                     l1837:
  4897                           
  4898                           ;ASCII.c: 46:   return 0x39;
  4899  078E  3039               	movlw	57
  4900  078F  2FB8               	goto	l279
  4901  0790                     l1845:
  4902  0790  0875               	movf	num_ascii@num,w
  4903  0791  00F3               	movwf	??_num_ascii
  4904  0792  01F4               	clrf	??_num_ascii+1
  4905                           
  4906                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4907                           ; Switch size 1, requested type "simple"
  4908                           ; Number of cases is 1, Range of values is 0 to 0
  4909                           ; switch strategies available:
  4910                           ; Name         Instructions Cycles
  4911                           ; simple_byte            4     3 (average)
  4912                           ; direct_byte           11     8 (fixed)
  4913                           ; jumptable            260     6 (fixed)
  4914                           ;	Chosen strategy is simple_byte
  4915  0793  0874               	movf	??_num_ascii+1,w
  4916  0794  3A00               	xorlw	0	; case 0
  4917  0795  1903               	skipnz
  4918  0796  2F98               	goto	l2851
  4919  0797  2F7C               	goto	l1777
  4920  0798                     l2851:
  4921                           
  4922                           ; Switch size 1, requested type "simple"
  4923                           ; Number of cases is 10, Range of values is 0 to 9
  4924                           ; switch strategies available:
  4925                           ; Name         Instructions Cycles
  4926                           ; simple_byte           31    16 (average)
  4927                           ; direct_byte           38     8 (fixed)
  4928                           ; jumptable            260     6 (fixed)
  4929                           ;	Chosen strategy is simple_byte
  4930  0798  0873               	movf	??_num_ascii,w
  4931  0799  3A00               	xorlw	0	; case 0
  4932  079A  1903               	skipnz
  4933  079B  2F7C               	goto	l1777
  4934  079C  3A01               	xorlw	1	; case 1
  4935  079D  1903               	skipnz
  4936  079E  2F7E               	goto	l1789
  4937  079F  3A03               	xorlw	3	; case 2
  4938  07A0  1903               	skipnz
  4939  07A1  2F80               	goto	l1795
  4940  07A2  3A01               	xorlw	1	; case 3
  4941  07A3  1903               	skipnz
  4942  07A4  2F82               	goto	l1801
  4943  07A5  3A07               	xorlw	7	; case 4
  4944  07A6  1903               	skipnz
  4945  07A7  2F84               	goto	l1807
  4946  07A8  3A01               	xorlw	1	; case 5
  4947  07A9  1903               	skipnz
  4948  07AA  2F86               	goto	l1813
  4949  07AB  3A03               	xorlw	3	; case 6
  4950  07AC  1903               	skipnz
  4951  07AD  2F88               	goto	l1819
  4952  07AE  3A01               	xorlw	1	; case 7
  4953  07AF  1903               	skipnz
  4954  07B0  2F8A               	goto	l1825
  4955  07B1  3A0F               	xorlw	15	; case 8
  4956  07B2  1903               	skipnz
  4957  07B3  2F8C               	goto	l1831
  4958  07B4  3A01               	xorlw	1	; case 9
  4959  07B5  1903               	skipnz
  4960  07B6  2F8E               	goto	l1837
  4961  07B7  2F7C               	goto	l1777
  4962  07B8                     l279:
  4963  07B8  0008               	return
  4964  07B9                     __end_of_num_ascii:
  4965                           
  4966                           	psect	text23
  4967  0EC3                     __ptext23:	
  4968 ;; *************** function _ISR *****************
  4969 ;; Defined at:
  4970 ;;		line 75 in file "main.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;		None
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;		None
  4975 ;; Return value:  Size  Location     Type
  4976 ;;                  1    wreg      void 
  4977 ;; Registers used:
  4978 ;;		wreg, status,2, status,0, pclath, cstack
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4984 ;;      Params:         0       0       0       0       0
  4985 ;;      Locals:         0       0       0       0       0
  4986 ;;      Temps:          2       0       0       0       0
  4987 ;;      Totals:         2       0       0       0       0
  4988 ;;Total ram usage:        2 bytes
  4989 ;; Hardware stack levels used: 1
  4990 ;; Hardware stack levels required when called: 1
  4991 ;; This function calls:
  4992 ;;		_envio
  4993 ;; This function is called by:
  4994 ;;		Interrupt level 1
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997                           
  4998                           
  4999                           ;psect for function _ISR
  5000  0EC3                     _ISR:
  5001  0EC3                     i1l2257:
  5002                           
  5003                           ;main.c: 76:     if (PIR1bits.TXIF == 1){
  5004  0EC3  1283               	bcf	3,5	;RP0=0, select bank0
  5005  0EC4  1303               	bcf	3,6	;RP1=0, select bank0
  5006  0EC5  1E0C               	btfss	12,4	;volatile
  5007  0EC6  2EC8               	goto	u122_21
  5008  0EC7  2EC9               	goto	u122_20
  5009  0EC8                     u122_21:
  5010  0EC8  2ED1               	goto	i1l157
  5011  0EC9                     u122_20:
  5012  0EC9                     i1l2259:
  5013                           
  5014                           ;main.c: 77:         envio();
  5015  0EC9  120A  158A  276A  120A  158A  	fcall	_envio
  5016  0ECE                     i1l2261:
  5017                           
  5018                           ;main.c: 78:         PIR1bits.TXIF = 0;
  5019  0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  5020  0ECF  1303               	bcf	3,6	;RP1=0, select bank0
  5021  0ED0  120C               	bcf	12,4	;volatile
  5022  0ED1                     i1l157:
  5023  0ED1  0872               	movf	??_ISR+1,w
  5024  0ED2  008A               	movwf	10
  5025  0ED3  0E71               	swapf	??_ISR,w
  5026  0ED4  0083               	movwf	3
  5027  0ED5  0EFE               	swapf	btemp,f
  5028  0ED6  0E7E               	swapf	btemp,w
  5029  0ED7  0009               	retfie
  5030  0ED8                     __end_of_ISR:
  5031                           
  5032                           	psect	intentry
  5033  0004                     __pintentry:	
  5034                           ;incstack = 0
  5035                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  5036                           
  5037  0004                     interrupt_function:
  5038  007E                     saved_w	set	btemp
  5039  0004  00FE               	movwf	btemp
  5040  0005  0E03               	swapf	3,w
  5041  0006  00F1               	movwf	??_ISR
  5042  0007  080A               	movf	10,w
  5043  0008  00F2               	movwf	??_ISR+1
  5044  0009  120A  158A  2EC3   	ljmp	_ISR
  5045                           
  5046                           	psect	text24
  5047  0F6A                     __ptext24:	
  5048 ;; *************** function _envio *****************
  5049 ;; Defined at:
  5050 ;;		line 408 in file "main.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;		None
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;		None
  5055 ;; Return value:  Size  Location     Type
  5056 ;;                  1    wreg      void 
  5057 ;; Registers used:
  5058 ;;		wreg, status,2, status,0
  5059 ;; Tracked objects:
  5060 ;;		On entry : 0/0
  5061 ;;		On exit  : 0/0
  5062 ;;		Unchanged: 0/0
  5063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5064 ;;      Params:         0       0       0       0       0
  5065 ;;      Locals:         0       0       0       0       0
  5066 ;;      Temps:          1       0       0       0       0
  5067 ;;      Totals:         1       0       0       0       0
  5068 ;;Total ram usage:        1 bytes
  5069 ;; Hardware stack levels used: 1
  5070 ;; This function calls:
  5071 ;;		Nothing
  5072 ;; This function is called by:
  5073 ;;		_ISR
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077                           
  5078                           ;psect for function _envio
  5079  0F6A                     _envio:
  5080  0F6A                     i1l1957:	
  5081                           ;incstack = 0
  5082                           ; Regs used in _envio: [wreg+status,2+status,0]
  5083                           
  5084                           
  5085                           ;main.c: 409:     toggleTX++;
  5086  0F6A  3001               	movlw	1
  5087  0F6B  00F0               	movwf	??_envio
  5088  0F6C  0870               	movf	??_envio,w
  5089  0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  5090  0F6E  1303               	bcf	3,6	;RP1=0, select bank0
  5091  0F6F  07C3               	addwf	_toggleTX,f
  5092                           
  5093                           ;main.c: 410:     if (toggleTX == 1){
  5094  0F70  0343               	decf	_toggleTX,w
  5095  0F71  1D03               	btfss	3,2
  5096  0F72  2F74               	goto	u92_21
  5097  0F73  2F75               	goto	u92_20
  5098  0F74                     u92_21:
  5099  0F74  2F77               	goto	i1l1961
  5100  0F75                     u92_20:
  5101  0F75                     i1l1959:
  5102                           
  5103                           ;main.c: 411:         TXREG = 0x31;
  5104  0F75  3031               	movlw	49
  5105  0F76  0099               	movwf	25	;volatile
  5106  0F77                     i1l1961:
  5107                           
  5108                           ;main.c: 413:     if (toggleTX == 2){
  5109  0F77  3002               	movlw	2
  5110  0F78  0643               	xorwf	_toggleTX,w
  5111  0F79  1D03               	btfss	3,2
  5112  0F7A  2F7C               	goto	u93_21
  5113  0F7B  2F7D               	goto	u93_20
  5114  0F7C                     u93_21:
  5115  0F7C  2F7F               	goto	i1l1965
  5116  0F7D                     u93_20:
  5117  0F7D                     i1l1963:
  5118                           
  5119                           ;main.c: 414:         TXREG = 0x30;
  5120  0F7D  3030               	movlw	48
  5121  0F7E  0099               	movwf	25	;volatile
  5122  0F7F                     i1l1965:
  5123                           
  5124                           ;main.c: 416:     if (toggleTX == 3){
  5125  0F7F  3003               	movlw	3
  5126  0F80  0643               	xorwf	_toggleTX,w
  5127  0F81  1D03               	btfss	3,2
  5128  0F82  2F84               	goto	u94_21
  5129  0F83  2F85               	goto	u94_20
  5130  0F84                     u94_21:
  5131  0F84  2F87               	goto	i1l1969
  5132  0F85                     u94_20:
  5133  0F85                     i1l1967:
  5134                           
  5135                           ;main.c: 417:         TXREG = 0x2C;
  5136  0F85  302C               	movlw	44
  5137  0F86  0099               	movwf	25	;volatile
  5138  0F87                     i1l1969:
  5139                           
  5140                           ;main.c: 419:     if (toggleTX == 4){
  5141  0F87  3004               	movlw	4
  5142  0F88  0643               	xorwf	_toggleTX,w
  5143  0F89  1D03               	btfss	3,2
  5144  0F8A  2F8C               	goto	u95_21
  5145  0F8B  2F8D               	goto	u95_20
  5146  0F8C                     u95_21:
  5147  0F8C  2F8F               	goto	i1l1973
  5148  0F8D                     u95_20:
  5149  0F8D                     i1l1971:
  5150                           
  5151                           ;main.c: 420:         TXREG = NUM;
  5152  0F8D  084F               	movf	_NUM,w
  5153  0F8E  0099               	movwf	25	;volatile
  5154  0F8F                     i1l1973:
  5155                           
  5156                           ;main.c: 422:     if (toggleTX == 5){
  5157  0F8F  3005               	movlw	5
  5158  0F90  0643               	xorwf	_toggleTX,w
  5159  0F91  1D03               	btfss	3,2
  5160  0F92  2F94               	goto	u96_21
  5161  0F93  2F95               	goto	u96_20
  5162  0F94                     u96_21:
  5163  0F94  2F98               	goto	i1l224
  5164  0F95                     u96_20:
  5165  0F95                     i1l1975:
  5166                           
  5167                           ;main.c: 423:         TXREG = 13;
  5168  0F95  300D               	movlw	13
  5169  0F96  0099               	movwf	25	;volatile
  5170  0F97                     i1l1977:
  5171                           
  5172                           ;main.c: 424:         toggleTX = 0;
  5173  0F97  01C3               	clrf	_toggleTX
  5174  0F98                     i1l224:
  5175  0F98  0008               	return
  5176  0F99                     __end_of_envio:
  5177  007E                     btemp	set	126	;btemp
  5178  007E                     wtemp0	set	126
  5179                           
  5180                           	psect	config
  5181                           
  5182                           ;Config register CONFIG1 @ 0x2007
  5183                           ;	Oscillator Selection bits
  5184                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5185                           ;	Watchdog Timer Enable bit
  5186                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5187                           ;	Power-up Timer Enable bit
  5188                           ;	PWRTE = OFF, PWRT disabled
  5189                           ;	RE3/MCLR pin function select bit
  5190                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5191                           ;	Code Protection bit
  5192                           ;	CP = OFF, Program memory code protection is disabled
  5193                           ;	Data Code Protection bit
  5194                           ;	CPD = OFF, Data memory code protection is disabled
  5195                           ;	Brown Out Reset Selection bits
  5196                           ;	BOREN = OFF, BOR disabled
  5197                           ;	Internal External Switchover bit
  5198                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5199                           ;	Fail-Safe Clock Monitor Enabled bit
  5200                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5201                           ;	Low Voltage Programming Enable bit
  5202                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5203                           ;	In-Circuit Debugger Mode bit
  5204                           ;	DEBUG = 0x1, unprogrammed default
  5205  2007                     	org	8199
  5206  2007  20D4               	dw	8404
  5207                           
  5208                           ;Config register CONFIG2 @ 0x2008
  5209                           ;	Brown-out Reset Selection bit
  5210                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5211                           ;	Flash Program Memory Self Write Enable bits
  5212                           ;	WRT = OFF, Write protection off
  5213  2008                     	org	8200
  5214  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     34      49
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> conver1@temporal(BANK0[16]), conver@temporal_275(BANK0[16]), conver@temporal(BANK0[16]), 

    sp__conver	PTR const unsigned char  size(1) Largest target is 16
		 -> conver@temporal_275(BANK0[16]), conver@temporal(BANK0[16]), 

    sp__conver1	PTR const unsigned char  size(1) Largest target is 16
		 -> conver1@temporal(BANK0[16]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _conver1->___awdiv
    ___awmod->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _LECT1->_num_ascii

Critical Paths under _ISR in COMMON

    _ISR->_envio

Critical Paths under _main in BANK0

    _main->_conver
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _conver1->___awmod
    ___awmod->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   11348
                                             32 BANK0      2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                              _LECT1
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                             _conver
                            _conver1
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0    4260
                                             17 BANK0      2     2      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _osc_config
                        _uart_config
 ---------------------------------------------------------------------------------
 (2) _uart_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _osc_config                                           3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    2821
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     875
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _conver1                                             19    19      0    1840
                                             11 BANK0     19    19      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              4 BANK0      7     3      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _conver                                              33    33      0     770
                                              3 COMMON     1     1      0
                                              0 BANK0     32    32      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     264
                                              6 COMMON     1     1      0
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     434
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LECT1                                                1     1      0      22
                                              6 COMMON     1     1      0
                          _num_ascii
 ---------------------------------------------------------------------------------
 (2) _num_ascii                                            3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  2     2      0       0
                                              1 COMMON     2     2      0
                              _envio
 ---------------------------------------------------------------------------------
 (5) _envio                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _LECT1
     _num_ascii
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _conver
   _conver1
     ___awdiv
     ___awmod
       ___awdiv (ARG)
   _setup
     _I2C_Master_Init
       ___lldiv
     _I2C_Master_Read
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _osc_config
     _uart_config

 _ISR (ROOT)
   _envio

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     22      31       5       61.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3C      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Aug 23 21:45:35 2021

                       _C1 004B                         _C2 004A                         _C3 0049  
                       l32 07F3                         l50 0FBE                         l35 07FF  
                       l51 0FC1                         l52 0FC8                         l44 0EA4  
                       _DH 0047                         l29 07F2                         l38 0E9B  
                       l47 0EAE                         _DM 0045                         _UH 0048  
                       _UM 0046               ___awdiv@sign 0021                        l210 03AA  
                      l303 0EED                        l216 03AA                        l235 0FFF  
                      l180 0294                        l244 0E92                        l172 05D4  
                      l262 0EC2                        l247 0F05                        l256 0F69  
                      l176 064D                        l168 0549                        l425 071E  
                      l186 0294                        l259 0F1E                        l268 0F43  
                      l542 06B6                        l279 07B8                        l555 0779  
                      _DIA 007A                        _GIE 005F                        _MIN 0079  
                      _ISR 0EC3                        u810 06A8                        u730 0655  
                      u811 06A7                        u731 0654                        u820 06AD  
                      u740 0660                        u821 06AC                        u805 069C  
                      u741 065F                        u750 0671                        u751 0670  
                      u770 0683                        u771 0682                        u765 0675  
                      u790 0694                        u791 0693                        _NUM 004F  
                      u785 0684                        u795 0690                        _con 0078  
                      fsr0 0004                        indf 0000               ___awmod@sign 002A  
                     ?_ISR 0070                       l2121 0593                       l2113 054A  
                     l2211 0317                       l2203 0306                       l2131 0220  
                     l2115 0551                       l2221 033E                       l2213 0323  
                     l2141 024C                       l2133 0226                       l2125 0201  
                     l2231 035F                       l2223 0344                       l2215 0329  
                     l2207 030D                       l2151 027F                       l2143 0259  
                     l2135 0233                       l2127 020E                       l2241 037E  
                     l2233 0363                       l2225 0348                       l2217 032D  
                     l2209 0313                       l2161 02A9                       l2153 0285  
                     l2145 025F                       l2137 0239                       l2129 0213  
                     l2251 039E                       l2243 0383                       l2235 0368  
                     l2227 034D                       l2219 0332                       l2171 02BB  
                     l2163 02AF                       l2155 0291                       l2147 026C  
                     l2139 0246                       l2245 038F                       l2237 0374  
                     l2229 0359                       l2181 02D7                       l2165 02B1  
                     l2157 029A                       l2173 02BD                       l2149 0272  
                     l2501 0F02                       l2421 07F3                       l2247 0395  
                     l2239 037A                       l2183 02DD                       l2175 02C3  
                     l2191 02E9                       l2167 02B4                       l2159 029E  
                     l2511 0EBB                       l2503 0EB0                       l2431 06CC  
                     l2423 07F9                       l1801 0782                       l2249 0399  
                     l2193 02ED                       l2185 02DE                       l2177 02C7  
                     l2169 02B5                       l2425 0E8E                       l2513 0EBF  
                     l2505 0EB6                       l2521 072B                       l2441 0706  
                     l2433 06D9                       l2601 045B                       l2195 02F2  
                     l2187 02E4                       l2179 02CC                       l2507 0EB9  
                     l2531 073F                       l2523 072D                       l2515 071F  
                     l2443 0707                       l2435 06DD                       l2427 06B7  
                     l2451 07B9                       l2611 0487                       l2603 0466  
                     l1813 0786                       l2197 02FD                       l2189 02E7  
                     l2509 0EBA                       l1901 0683                       l2541 075E  
                     l2533 0746                       l2525 0731                       l2517 0722  
                     l2445 0710                       l2437 06E6                       l2429 06C9  
                     l2461 07F1                       l2453 07BD                       l1741 0FD3  
                     l2621 04B1                       l2613 0492                       l2605 046B  
                     l2701 0055                       l1831 078C                       l1807 0784  
                     l2199 02FF                       l1903 0694                       l1911 06A8  
                     l2543 0765                       l2535 074A                       l2527 0736  
                     l2519 0726                       l2439 06F8                       l2447 0716  
                     l2455 07C0                       l2463 0E93                       l2471 0EA5  
                     l1751 0FE7                       l1743 0FD9                       l1735 0FCA  
                     l2631 04DD                       l2623 04B6                       l2615 0497  
                     l2607 0474                       l2711 0075                       l2703 005A  
                     l1825 078A                       l1913 06AD                       l1905 069A  
                     l2537 074E                       l2529 073C                       l2545 076B  
                     l2457 07EF                       l2481 0FAF                       l2465 0E98  
                     l2473 0EAA                       l1745 0FDB                       l1737 0FCB  
                     l1761 0ED8                       l2641 0504                       l2633 04E2  
                     l2625 04C1                       l2617 04A0                       l2609 0482  
                     l2561 03C2                       l2553 03AB                       l2801 01F2  
                     l2721 00A1                       l2713 0080                       l2705 005F  
                     l1819 0788                       l2491 0EEF                       l1915 06B2  
                     l1907 069B                       l2547 0770                       l2539 0758  
                     l2459 07F0                       l2483 0FB4                       l2475 0F99  
                     l2467 0E9C                       l1747 0FE1                       l1739 0FD1  
                     l1755 0FE9                       l1771 0EE9                       l1763 0EE0  
                     l2651 052B                       l2643 050D                       l2635 04ED  
                     l2627 04C6                       l2619 04A8                       l2571 03DF  
                     l2563 03C5                       l2555 03B3                       l2731 00CD  
                     l2723 00AC                       l2715 0085                       l2707 0068  
                     l1837 078E                       l1845 0790                       l2493 0EF5  
                     l2661 0F4C                       l1909 06A2                       l2549 0775  
                     l2485 0FBA                       l2477 0F9E                       l2469 0EA1  
                     l1749 0FE3                       l1773 0EEA                       l1765 0EE3  
                     l2653 0539                       l2645 0512                       l2637 04F2  
                     l2629 04CF                       l2581 040A                       l2573 03E8  
                     l2565 03C6                       l2557 03B4                       l2741 00F9  
                     l2733 00D8                       l2725 00B1                       l2717 008E  
                     l2709 0070                       l1775 077B                       l2495 0EF8  
                     l2663 0F51                       l2671 05D5                       l2487 0FC2  
                     l2479 0FA6                       l1767 0EE5                       l2655 053E  
                     l2647 051D                       l2639 04FB                       l2591 0436  
                     l2583 040F                       l2575 03F1                       l2567 03CB  
                     l2559 03BC                       l2751 0120                       l2743 0104  
                     l2735 00DD                       l2727 00BA                       l2719 009C  
                     l1777 077C                       l2497 0EF9                       l2657 0F06  
                     l2665 0F58                       l2681 0F25                       l1881 065A  
                     l2673 0603                       l1769 0EE8                       l2649 0522  
                     l2593 043B                       l2585 0418                       l2577 03FA  
                     l2569 03DA                       l2761 014C                       l2753 012B  
                     l2745 0109                       l2737 00E6                       l2729 00C8  
                     l2851 0798                       l1795 0780                       l2499 0EFA  
                     l2667 0F5E                       l2659 0F47                       l2683 0F30  
                     l1891 066B                       l1883 065C                       l1875 064E  
                     l2675 0629                       l2595 0444                       l2587 0426  
                     l2579 03FF                       l2771 0173                       l2763 0157  
                     l2755 0130                       l2747 0112                       l2739 00F4  
                     l2691 0027                       l1789 077E                       l2669 0F63  
                     l2685 0F38                       l1893 0671                       l1885 0660  
                     l1877 0651                       l2597 044D                       l2589 042B  
                     l2781 019F                       l2773 017E                       l2765 015C  
                     l2757 0139                       l2749 011B                       l2693 002C  
                     l2679 0F22                       l1895 0674                       l1887 0665  
                     l1879 0655                       l2599 0456                       l2791 01C6  
                     l2783 01AA                       l2775 0183                       l2767 0165  
                     l2759 0147                       l2695 0031                       l1897 067B  
                     l1889 0669                       l2849 0FF1                       l2793 01D1  
                     l2785 01AF                       l2777 018C                       l2769 016E  
                     l2697 0043                       l1899 067F                       l2795 01D6  
                     l2787 01B8                       l2779 019A                       l2699 004B  
                     l2797 01DF                       l2789 01C1                       l2799 01ED  
                     u1000 0551                       u1001 0550                       u1010 0213  
                     u1011 0212                       u1100 02BB                       u1020 0226  
                     u1101 02BA                       u1021 0225                       u1110 02C3  
                     u1030 0239                       u1111 02C2                       u1031 0238  
                     u1200 037A                       u1120 02DD                       u1040 024C  
                     u1201 0379                       u1121 02DC                       u1041 024B  
                     u1210 0395                       u1130 02E4                       u1050 025F  
                     u1211 0394                       u1131 02E3                       u1051 025E  
                     u1140 0305                       u1060 0272                       u1141 0304  
                     u1061 0271                       u1150 030C                       u1070 0285  
                     u1310 0716                       u1230 07F9                       u1151 030B  
                     u1071 0284                       u1311 0715                       u1231 07F8  
                     u1160 0313                       u1080 029A                       u1320 07D0  
                     u1240 07FF                       u1161 0312                       u1081 0299  
                     u1305 0708                       u1241 07FE                       u1170 0329  
                     u1090 02AF                       u1410 076B                       u1250 06C9  
                     u1330 0FBA                       u1171 0328                       u1091 02AE  
                     u1411 076A                       u1251 06C8                       u1331 0FB9  
                     u1180 0344                       u1420 0770                       u1340 0726  
                     u1181 0343                       u1421 076F                       u1405 075F  
                     u1341 0725                       u1325 07CB                       u1190 035F  
                     u1430 0F4C                       u1350 0731                       u1270 06DD  
                     u1191 035E                       u1431 0F4B                       u1351 0730  
                     u1271 06DC                       u1440 0F5E                       u1360 073C  
                     u1441 0F5D                       u1361 073B                       u1265 06CE  
                     u1450 0F43                       u1290 06F8                       u1451 0F42  
                     u1291 06F7                       u1507 0126                       u1380 074E  
                     u1381 074D                       u1285 06DF                       u1517 0152  
                     u1390 0758                       u1391 0757                       u1375 0740  
                     u1295 06F4                       u1607 04BC                       u1527 0179  
                     u1617 04E8                       u1537 01A5                       u1395 0754  
                     u1627 0518                       u1547 01CC                       u1467 007B  
                     u1637 0544                       u1557 01F8                       u1477 00A7  
                     u1647 0EBD                       u1567 0405                       u1487 00D3  
                     u1657 0EFE                       u1577 0431                       u1497 00FF  
                     _HORA 004D                       u1587 0461                       u1597 048D  
                     _PEIE 005E                       _TEMP 004C          ?_Lcd_Write_String 0070  
                     _main 0027                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0076             osc_config@freq 0075            __end_of_Lcd_Cmd 0F06  
                    ??_ISR 0071            conver1@temporal 002E           ?_I2C_Master_Init 002D  
         ?_I2C_Master_Read 0073           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070            __end_of___awdiv 06B7            __end_of___awmod 077A  
                    _ANSEL 0188            __end_of___lldiv 071F            ___awdiv@divisor 0073  
                    _LECT1 0201                      i1l224 0F98                      i1l157 0ED1  
                    _PARKH 0050            ___awdiv@counter 0020                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTD 0008  
  __size_of_Lcd_Set_Cursor 0026                      _TRISA 0085                      _TRISB 0086  
                    _TRISD 0088                      _SSPIE 0463                      _TRISE 0089  
                    _SSPIF 0063                      u92_20 0F75                      u92_21 0F74  
                    u93_20 0F7D                      u93_21 0F7C                      u94_20 0F85  
                    u94_21 0F84                      u95_20 0F8D                      u95_21 0F8C  
                    u96_20 0F95                      u96_21 0F94                      _TXREG 0019  
          __end_of_conver1 064E                      _envio 0F6A                      _setup 03AB  
                    pclath 000A                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 0F1F           __end_of_Lcd_Port 0E93            __initialization 000F  
             __end_of_main 0201                     ??_main 0040                     ?_LECT1 0070  
        ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0073         ??_I2C_Master_Start 0073  
       ??_I2C_Master_Write 0075                     ?_envio 0070                     _BASURA 004E  
         ___awdiv@dividend 0075                     ?_setup 0070                     _ANSELH 0189  
                   i1l2261 0ECE                     i1l2257 0EC3                     i1l2259 0EC9  
                   u122_20 0EC9                     u122_21 0EC8                     i1l1961 0F77  
                   i1l1971 0F8D                     i1l1963 0F7D                     i1l1973 0F8F  
                   i1l1965 0F7F                     i1l1957 0F6A                     i1l1975 0F95  
                   i1l1967 0F85                     i1l1959 0F75                     i1l1977 0F97  
                   i1l1969 0F87                  ??_Lcd_Cmd 0074                     _SPBRGH 009A  
  __size_of_Lcd_Write_Char 0014                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
                ??___awdiv 0077                  ??___awmod 0028                  ??___lldiv 0073  
                   _conver 054A           ___awdiv@quotient 0022            ___awmod@divisor 0024  
          ___awmod@counter 0029               ?_uart_config 0070                  ??_conver1 002B  
       conver@temporal_275 0030                     saved_w 007E            Lcd_Set_Cursor@a 0021  
          Lcd_Set_Cursor@b 0077    __end_of__initialization 0023              __end_of_LECT1 03AB  
           __pcstackCOMMON 0070              __end_of_envio 0F99              __end_of_setup 054A  
                  ??_LECT1 0076             _Lcd_Set_Cursor 0F44                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                    ??_envio 0070                    ??_setup 0031  
               __pbssBANK0 0042                 __pmaintext 0027                 __pintentry 0004  
                  ?_conver 0070  __size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 0F6A  
                  _CERRADO 0044         __size_of_num_ascii 003F                 ??_Lcd_Init 0077  
               ??_Lcd_Port 0073                    _SSPCON2 0091                    _SSPSTAT 0094  
           _Lcd_Write_Char 0EAF                    _Lcd_Cmd 0EEE                    ___awdiv 064E  
                  ___awmod 071F                    ___lldiv 06B7            __size_of_conver 008B  
          ?_Lcd_Set_Cursor 0077                    __ptext1 03AB                    __ptext2 0ED8  
                  __ptext3 0FC9                    __ptext4 0EA5                    __ptext5 0E9C  
                  __ptext6 0E93                    __ptext7 0F99                    __ptext8 07F3  
                  __ptext9 07B9                    _conver1 05D5               __size_of_ISR 0015  
         ___awmod@dividend 0026       __size_of_uart_config 0016   __size_of_I2C_Master_Init 003A  
 __size_of_I2C_Master_Read 0030   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
   __end_of_Lcd_Write_Char 0EC3       end_of_initialization 0023                 _osc_config 0FC9  
        __end_of_num_ascii 07B9  __size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A  
          ___lldiv@divisor 0020            ___lldiv@counter 002C                  _RCSTAbits 0018  
         I2C_Master_Init@c 002D           I2C_Master_Read@a 0073                  Lcd_Port@a 0073  
                _PORTEbits 0009                  _TRISCbits 0087            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0022          Lcd_Write_String@i 0020                  _TXSTAbits 0098  
         _Lcd_Write_String 0F1F                _BAUDCTLbits 0187             __end_of_conver 05D5  
      start_initialization 000F                __end_of_ISR 0ED8          __size_of_Lcd_Init 0019  
        __size_of_Lcd_Port 0006          ??_I2C_Master_Init 0074          ??_I2C_Master_Read 0075  
        ??_I2C_Master_Wait 0073          ??_I2C_Master_Stop 0073                ?_osc_config 0070  
                 ??_conver 0073            Lcd_Write_Char@a 0075                __pbssCOMMON 0078  
                ___latbits 0002              __pcstackBANK0 0020                   ?_Lcd_Cmd 0070  
         _I2C_Master_Start 0E93           _I2C_Master_Write 0EA5           ??_Lcd_Set_Cursor 0020  
                 ?___awdiv 0073                   ?___awmod 0024                   ?___lldiv 0020  
                 ?_conver1 0070             __size_of_LECT1 01AA        __size_of_osc_config 0037  
           conver@temporal 0020             __size_of_envio 002F             __size_of_setup 019F  
        interrupt_function 0004                   _PIE1bits 008C                   Lcd_Cmd@a 0076  
                 _PIR1bits 000C                  _num_ascii 077A              ??_uart_config 0073  
         ??_Lcd_Write_Char 0074                   _Lcd_Init 0F06                   _Lcd_Port 0E8D  
      I2C_Master_Read@temp 0020   __end_of_Lcd_Write_String 0F44           __size_of_Lcd_Cmd 0018  
               ?_num_ascii 0070           __size_of___awdiv 0069           __size_of___awmod 005B  
         __size_of___lldiv 0068           __size_of_conver1 0079            _I2C_Master_Init 07B9  
          _I2C_Master_Read 0F99            _I2C_Master_Wait 07F3            _I2C_Master_Stop 0E9C  
                 __ptext10 06B7                   __ptext11 05D5                   __ptext20 0E8D  
                 __ptext12 071F                   __ptext21 0201                   __ptext13 064E  
                 __ptext22 077A                   __ptext14 054A                   __ptext23 0EC3  
                 __ptext15 0F1F                   __ptext24 0F6A                   __ptext16 0EAF  
                 __ptext17 0F44                   __ptext18 0F06                   __ptext19 0EEE  
      __end_of_uart_config 0EEE               ??_osc_config 0073              __size_of_main 01DA  
                 _toggleTX 0043   __end_of_I2C_Master_Start 0E9C   __end_of_I2C_Master_Write 0EAF  
       __end_of_osc_config 1000                   intlevel1 0000           ___lldiv@dividend 0024  
             num_ascii@num 0075                 _OSCCONbits 008F                ??_num_ascii 0073  
  __end_of_I2C_Master_Init 07F3    __end_of_I2C_Master_Read 0FC9    __end_of_I2C_Master_Wait 0800  
  __end_of_I2C_Master_Stop 0EA5         Lcd_Set_Cursor@temp 0022                _temperatura 0042  
              _uart_config 0ED8           ___lldiv@quotient 0028          I2C_Master_Write@d 0073  
              _SSPCON2bits 0091  
